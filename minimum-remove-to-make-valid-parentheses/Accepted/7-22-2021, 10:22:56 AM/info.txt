{"id":526577322,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 11 months","timestamp":1626963776,"status":10,"status_display":"Accepted","runtime":"104 ms","url":"/submissions/detail/526577322/","is_pending":"Not Pending","title":"Minimum Remove to Make Valid Parentheses","memory":"49.9 MB","code":"/**\n * @param {string} s\n * @return {string}\n */\nvar minRemoveToMakeValid = function(s) {\n    let indexesToRemove = new Set()\n    let stack = [] //for a valid string stack must end up empty\n    let result = []\n    \n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '(') {\n            stack.push(i)\n        } else if (s[i] === ')'){\n            if (stack.length === 0) {\n                indexesToRemove.add(i)\n            } else {\n                stack.pop()\n            }\n            \n        }\n    }\n    \n    //Going thru stack and recording bad indexes\n    while (stack.length !== 0) {\n        indexesToRemove.add(stack.pop())\n    }\n    \n    //Rebuilding string\n    for (let i = 0; i < s.length; i++) {\n        if (!indexesToRemove.has(i)) result.push(s[i])\n    }\n    \n    return result.join(\"\")\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-remove-to-make-valid-parentheses","has_notes":false}