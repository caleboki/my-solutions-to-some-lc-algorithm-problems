{"id":577829542,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 7 months","timestamp":1635306486,"status":10,"status_display":"Accepted","runtime":"112 ms","url":"/submissions/detail/577829542/","is_pending":"Not Pending","title":"Insert into a Binary Search Tree","memory":"46.9 MB","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @param {number} val\n * @return {TreeNode}\n */\nvar insertIntoBST = function(root, val) {\n    //Create a new root if tree/root is not given\n    if (root === null) {\n        root = new TreeNode()\n        root.val = val\n        return root\n    }\n   \n    if (root.val < val) {\n        root.right = insertIntoBST(root.right, val)\n    } else {\n        root.left = insertIntoBST(root.left, val)\n    }\n    \n    return root\n};","compare_result":"11111111111111111111111111111111111","title_slug":"insert-into-a-binary-search-tree","has_notes":false}