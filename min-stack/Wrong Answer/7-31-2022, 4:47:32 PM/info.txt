{"id":761791878,"lang":"javascript","lang_name":"JavaScript","time":"10 months, 3 weeks","timestamp":1659300452,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/761791878/","is_pending":"Not Pending","title":"Min Stack","memory":"N/A","code":"\n// var MinStack = function() {\n    \n// };\n\n// /** \n//  * @param {number} val\n//  * @return {void}\n//  */\n// MinStack.prototype.push = function(val) {\n    \n// };\n\n// /**\n//  * @return {void}\n//  */\n// MinStack.prototype.pop = function() {\n    \n// };\n\n// /**\n//  * @return {number}\n//  */\n// MinStack.prototype.top = function() {\n    \n// };\n\n// /**\n//  * @return {number}\n//  */\n// MinStack.prototype.getMin = function() {\n    \n// };\n\n/** \n * Your MinStack object will be instantiated and called as such:\n * var obj = new MinStack()\n * obj.push(val)\n * obj.pop()\n * var param_3 = obj.top()\n * var param_4 = obj.getMin()\n */\n\nclass MinStack {\n    constructor() {\n        this.data = []\n        this.prevMin = Infinity\n        this.min = Infinity\n    }\n    \n    push(val) {\n        this.data.push(val)\n        this.prevMin = this.min\n        this.min = Math.min(this.min, val)\n    }\n    \n    pop() {\n        let cur = this.data.pop()\n        if (this.min === cur) this.min = this.prevMin\n    }\n    \n    top() {\n        return this.data[this.data.length - 1]\n    }\n    \n    getMin() {\n        //return Math.min(...this.data)\n        return this.min\n    }\n}","compare_result":"1111100110111101001101110101111","title_slug":"min-stack","has_notes":false}