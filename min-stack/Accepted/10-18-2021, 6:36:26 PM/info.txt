{"id":573422434,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 8 months","timestamp":1634596586,"status":10,"status_display":"Accepted","runtime":"285 ms","url":"/submissions/detail/573422434/","is_pending":"Not Pending","title":"Min Stack","memory":"46.9 MB","code":"\n// var MinStack = function() {\n    \n// };\n\n// /** \n//  * @param {number} val\n//  * @return {void}\n//  */\n// MinStack.prototype.push = function(val) {\n    \n// };\n\n// /**\n//  * @return {void}\n//  */\n// MinStack.prototype.pop = function() {\n    \n// };\n\n// /**\n//  * @return {number}\n//  */\n// MinStack.prototype.top = function() {\n    \n// };\n\n// /**\n//  * @return {number}\n//  */\n// MinStack.prototype.getMin = function() {\n    \n// };\n\n/** \n * Your MinStack object will be instantiated and called as such:\n * var obj = new MinStack()\n * obj.push(val)\n * obj.pop()\n * var param_3 = obj.top()\n * var param_4 = obj.getMin()\n */\n\nclass MinStack {\n    constructor() {\n        this.data = []\n    }\n    \n    push(val) {\n        this.data.push(val)\n    }\n    \n    pop() {\n        this.data.pop()\n    }\n    \n    top() {\n        return this.data[this.data.length - 1]\n    }\n    \n    getMin() {\n        return Math.min(...this.data)\n    }\n}","compare_result":"1111111111111111111111111111111","title_slug":"min-stack","has_notes":false}