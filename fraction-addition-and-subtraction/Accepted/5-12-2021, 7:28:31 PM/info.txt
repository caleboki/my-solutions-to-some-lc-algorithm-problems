{"id":492384980,"lang":"javascript","lang_name":"JavaScript","time":"2 years, 1 month","timestamp":1620862111,"status":10,"status_display":"Accepted","runtime":"80 ms","url":"/submissions/detail/492384980/","is_pending":"Not Pending","title":"Fraction Addition and Subtraction","memory":"39 MB","code":"/**\n * @param {string} expression\n * @return {string}\n */\nvar fractionAddition = function(expression) {\n    if (expression[0] === '-') expression = '0/1' + expression;\n    const terms = expression.split(/[+-]/g);\n    const ops = '+' + expression.replace(/[^+-]/g, '');\n    const nums = [], dens = [];\n    for (let term of terms) {\n        let t = term.split('/');\n        nums.push(parseInt(t[0]));\n        dens.push(parseInt(t[1]));\n    }\n    const lcm = LCM(dens);\n    const numSum = nums.reduce((sum, num, i) => sum + (+(ops[i] === '+') || -1) * num * lcm / dens[i], 0);\n    const gcd = Math.abs(GCD(numSum, lcm));\n    return (numSum / gcd) + '/' + (lcm / gcd);\n};\n\nfunction LCM(arr) {\n    let res = arr[0];\n    for (let i = 1; i < arr.length; i++) {\n        res = (arr[i] * res) / GCD(arr[i], res);\n    }\n    return res;\n}\n\nfunction GCD(a, b) {\n    if (b === 0) return a;\n    return GCD(b, a % b);\n}\n\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"fraction-addition-and-subtraction","has_notes":false}