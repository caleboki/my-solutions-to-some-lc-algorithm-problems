{"id":736676847,"lang":"javascript","lang_name":"JavaScript","time":"11 months, 3 weeks","timestamp":1656774278,"status":10,"status_display":"Accepted","runtime":"118 ms","url":"/submissions/detail/736676847/","is_pending":"Not Pending","title":"Subtree of Another Tree","memory":"49.2 MB","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @param {TreeNode} subRoot\n * @return {boolean}\n */\nvar isSubtree = function(root, subRoot) {\n    if (!root) return false\n    if (isSameTree(root, subRoot)) return true\n    \n    return isSubtree(root.left, subRoot) || isSubtree(root.right, subRoot)\n    \n};\n\nconst isSameTree = (root, subRoot) => {\n    if (!root && !subRoot) return true\n    if (root && !subRoot) return false //?\n    if (!root && subRoot) return false //?\n    \n    if (root.val === subRoot.val) {\n        return isSameTree(root.left, subRoot.left) && isSameTree(root.right, subRoot.right)\n    } \n    \n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"subtree-of-another-tree","has_notes":false}