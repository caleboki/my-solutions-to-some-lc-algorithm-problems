{"id":676003975,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 2 months","timestamp":1649371922,"status":10,"status_display":"Accepted","runtime":"264 ms","url":"/submissions/detail/676003975/","is_pending":"Not Pending","title":"Rearrange String k Distance Apart","memory":"53.7 MB","code":"/**\n * @param {string} s\n * @param {number} k\n * @return {string}\n */\nvar rearrangeString = function(s, k) {\n    let count = {}, nextPosition = {}, sb = ''\n    \n    for (let alpha of s) {\n        if (alpha in count) {\n            count[alpha]++\n        } else {\n            count[alpha] = 1\n        }\n        \n        nextPosition[alpha] = 0\n    }\n    \n    for (let i = 0; i < s.length; i++) {\n        let candidate = findCandidate(count, nextPosition, i)\n        \n        if (candidate === \"\") return \"\"\n        count[candidate]--\n        nextPosition[candidate] = i + k\n        sb += candidate\n        \n    }\n    \n    console.log(count) \n    console.log(nextPosition)\n    return sb\n};\n\n\nconst findCandidate = (count, nextPosition, index) => {\n    let max = -Infinity, candidate = \"\"\n    \n    for (let i in count) {\n        \n        if (count[i] > 0 && count[i] > max && index >= nextPosition[i]) {\n            max = count[i]\n            candidate = i\n            \n        }\n    }\n    \n    return candidate\n    \n}\n    \n    ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111","title_slug":"rearrange-string-k-distance-apart","has_notes":false}