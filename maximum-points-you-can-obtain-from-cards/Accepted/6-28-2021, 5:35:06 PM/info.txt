{"id":514596248,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 11 months","timestamp":1624916106,"status":10,"status_display":"Accepted","runtime":"76 ms","url":"/submissions/detail/514596248/","is_pending":"Not Pending","title":"Maximum Points You Can Obtain from Cards","memory":"45.9 MB","code":"/**\n * @param {number[]} cardPoints\n * @param {number} k\n * @return {number}\n */\n// var maxScore = function(cardPoints, k) {\n    \n//     let left = 0, right = cardPoints.length - 1\n//     if (k === cardPoints.length) return cardPoints.reduce(function(acc, val) { return acc + val; }, 0)\n    \n//     if (k === 1) return Math.max(cardPoints[0], cardPoints[right])\n    \n    \n//     let leftArr = 0, rightArr = 0, equalSum = 0\n    \n//     for (left; left < right; left++) {\n//         leftArr += (cardPoints[left])\n//         rightArr += (cardPoints[right])\n//         right--\n//         k--\n//         if (k === 0) break\n//     }\n    \n//     if (leftArr === rightArr) {\n//         // for (i = 0; i < Math.ceil(cardPoints.length/2); i++) {\n//         //     equalSum += cardPoints[i] \n//         // }\n//         return leftArr+rightArr\n//     }\n    \n//     return Math.max(leftArr, rightArr)\n// };\n\n// var maxScore = function(cardPoints, k) {\n//     let left = 0, right = cardPoints.length\n    \n//     return helper(cardPoints, left, right-1, k)\n    \n    \n// }\n\n// function helper(cp, l, r, k, memo = {}) {\n//     const key = l + '|' + r\n//     //if (key in memo) return memo[key]\n//     //base case\n//     if (k === 0) return 0\n//      memo[key] = Math.max(cp[l] + helper(cp, l+1, r, k-1), cp[r] + helper(cp, l, r-1, k-1))\n//     return memo[key]\n// }\n\nvar maxScore = function (cardPoints, k) {\n    let frontScore = 0, rearScore = 0, n = cardPoints.length\n    \n    for (let i = 0; i < k; i++) {\n        frontScore += cardPoints[i]\n    }\n    \n    // take all k cards from the beginning\n    let maxScore = frontScore\n    \n    // take i from the beginning and k-i from the end\n    for (let i = k - 1; i >= 0; i--) {\n        rearScore += cardPoints[n - (k - i)]\n        frontScore -= cardPoints[i]\n        let currentScore = rearScore + frontScore\n        maxScore = Math.max(maxScore, currentScore)\n    }\n    \n    return maxScore\n    \n    \n   \n}","compare_result":"1111111111111111111111111111111111111111","title_slug":"maximum-points-you-can-obtain-from-cards","has_notes":false}