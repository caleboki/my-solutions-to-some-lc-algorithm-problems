{"id":555224565,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 9 months","timestamp":1631687256,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/555224565/","is_pending":"Not Pending","title":"Insert Delete GetRandom O(1)","memory":"N/A","code":"// class RandomizedSet {\n//     constructor() {\n//         this.data = [];\n//     }\n    \n//     insert (val) {\n       \n//         if (this.data.includes(val)) return false;\n//         this.data.push(val);\n//         return true;\n//     }\n    \n//     remove (val) {\n//         let item = this.data.find(element => element === val);\n        \n//         if (typeof item === 'undefined') return false;\n        \n//         if (this.data.indexOf(val) === this.data[this.data.length - 1]) {\n//             this.data.pop();\n//             return true;\n//         }\n        \n//         let last = this.data[this.data.length - 1];\n//         let currentIndex = this.data.indexOf(val);\n        \n//         this.data.splice(currentIndex, 1);\n        \n//         //OR\n//         // [this.data[currentIndex], last] = [last, this.data[currentIndex]];\n//         // this.data.pop();\n        \n//         return true; \n//     }\n    \n//     getRandom(){\n//         let randomIndex = Math.floor(Math.random() * (this.data.length));\n//         return this.data[randomIndex];\n//     }\n// }\n\n\n/** \n * Your RandomizedSet object will be instantiated and called as such:\n * var obj = new RandomizedSet()\n * var param_1 = obj.insert(val)\n * var param_2 = obj.remove(val)\n * var param_3 = obj.getRandom()\n */\n\n//Use Set instead of array in order to achieve O(1) time complexity\n\nclass RandomizedSet {\n    \n    constructor() {\n        this.data = new Set()\n \n    }\n    \n    insert(val) {\n        if (this.data.has(val)) return false\n        this.data.add(val)\n       \n        return true\n    }\n    \n    remove(val) {\n        if (!this.data.has(val)) return false\n        this.data.delete(val)\n        return true\n    }\n    \n    getRandom() {\n        // let arr = Array.from(this.data)\n        // let randomIndex = Math.floor(Math.random() * (arr.length))\n        // return arr[randomIndex]\n        let items = this.data.values()\n        return items.next().value\n    }\n}","compare_result":"1111111111111111100","title_slug":"insert-delete-getrandom-o1","has_notes":false}