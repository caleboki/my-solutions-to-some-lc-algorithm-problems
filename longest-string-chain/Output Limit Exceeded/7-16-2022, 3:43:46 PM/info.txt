{"id":748797614,"lang":"javascript","lang_name":"JavaScript","time":"11 months, 1 week","timestamp":1658000626,"status":13,"status_display":"Output Limit Exceeded","runtime":"N/A","url":"/submissions/detail/748797614/","is_pending":"Not Pending","title":"Longest String Chain","memory":"N/A","code":"/**\n * @param {string[]} words\n * @return {number}\n */\n// var longestStrChain = function(words) {\n//     let wordsPresent = new Set(words), memo = new Map(), res = 0\n    \n//     words.sort((a, b) => {return a.length - b.length})\n    \n//     for (let word of words) {\n//         memo.set(word, 1)\n        \n//         for (let i = 0; i < word.length; i++) {\n            \n//         }\n//     } \n// };\n\nconst longestStrChain = (words) => {\n    words.sort((a, b) => {return a.length - b.length})\n    \n    let memo = {}, max = 0\n    \n    for (let word of words) {\n        let longest = 0 //current longest chain\n        \n        for (let i = 0; i < word.length; i++) {\n            //eliminate one character and keep the rest intact \n            let subWord = word.slice(0, i) + word.slice(i+1)\n            \n            //update current longest chain\n            longest = Math.max(longest, (memo[subWord] || 0) + 1)\n        }\n        \n        //if (word.length === 1) memo[word] = 1 //https://leetcode.com/discuss/interview-question/2249612/google-l4-phone-screen-june-2022\n        \n        console.log(memo)\n        memo[word] = longest\n        max= Math.max(max, longest) //update max\n    }\n    return max\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111000000000000000000000000","title_slug":"longest-string-chain","has_notes":false}