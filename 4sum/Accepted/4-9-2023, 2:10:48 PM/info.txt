{"id":930864870,"lang":"javascript","lang_name":"JavaScript","time":"2Â months, 2Â weeks","timestamp":1681063848,"status":10,"status_display":"Accepted","runtime":"427 ms","url":"/submissions/detail/930864870/","is_pending":"Not Pending","title":"4Sum","memory":"49.5 MB","code":"/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[][]}\n */\n\nvar fourSum = function(nums, target) {\n    nums.sort((a, b) => {\n        return (a-b)\n    })\n    \n    return kSum(nums, target, 0, 4)  \n}\n\nfunction kSum(nums, target, start, k) {\n    let res = []\n    \n    if (k === 2) return twoSum(nums, target, start)\n    \n    for (let i = start; i < nums.length; i++){\n        if (i === start || nums[i-1] !== nums[i]) {\n            for (let subset of kSum(nums, target - nums[i], i+1, k-1)) {\n                subset.push(nums[i])\n                res.push(subset)\n            }\n        }\n    }\n    return res\n}\n\nfunction twoSum(nums, target, start) {\n    let res = []\n    let s = new Set()\n    for (let i = start; i < nums.length; i++) {\n        if (!res.length || res[res.length-1][1] !== nums[i]) {\n            if (s.has(target - nums[i])) res.push([target - nums[i], nums[i]])\n            s.add(nums[i])\n        }\n    }\n    return res\n}\n\n\n// const fourSum = (nums, target) => {\n//     nums.sort((a, b) => {\n//         return (a-b)\n//     })\n//     const result = []\n//     const findTriplets = (arr, target, left, mid, res) => {\n//         let right = arr.length - 1\n\n//         while (left < mid && left < right) {\n//             let current = arr[left] + arr[mid] + arr[right]\n//             if (current === target) {\n//                 res.push([-target, arr[left], arr[mid], arr[right]])\n//                 left++, mid++, right++\n\n//                 while(left < mid && left < right && arr[mid] === arr[left]) {\n//                     left++\n//                     mid++\n//                 }\n\n//                 while(left < mid && left < right && arr[mid] === arr[right]) {\n//                     right--\n//                     mid--\n//                 }\n\n//                 if (target > current) {\n//                     mid++\n//                     left++\n//                 }\n\n//                 if (target < current) {\n//                     mid--\n//                     right--\n//                 }\n//             }\n//         } \n//     }\n\n//     for (let i = 0; i < nums.length; i++) {\n//         if (i > 0 && nums[i] === nums[i-1]) continue\n//         findTriplets(nums, -target-nums[i], i+1, i+2, result)\n//     }\n//     return result\n// }\n\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"4sum","has_notes":false}