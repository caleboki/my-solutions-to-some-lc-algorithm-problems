{"id":723231831,"lang":"javascript","lang_name":"JavaScript","time":"1Â year","timestamp":1655336692,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/723231831/","is_pending":"Not Pending","title":"Unique Paths","memory":"N/A","code":"/**\n * @param {number} m\n * @param {number} n\n * @return {number}\n */\n\n//Time complexity: O(2^(m+n))\nconst uniquePaths = (m, n) => {\n    if (m === 1 && n === 1) return 1\n    if (m === 0 || n === 0) return 0\n    \n    return uniquePaths(m-1, n) + uniquePaths(m, n-1)\n}\n// var uniquePaths = function(m, n, memo={}) {\n//     const key = m + ',' + n\n    \n//     if (key in memo) return memo[key]\n//     if (m === 1 && n === 1) return 1\n//     if (m === 0 || n === 0) return 0\n    \n//     memo[key] = uniquePaths(m-1, n, memo) + uniquePaths(m, n-1, memo)\n    \n//     return memo[key]\n    \n// };\n\n\n// var uniquePaths = function(m, n, memo = new Map()) {\n//     const key = m + ',' + n\n    \n//     if (memo.has(key)) return memo.get(key)\n//     if (m === 1 && n === 1) return 1\n//     if (m === 0 || n === 0) return 0\n    \n//     memo.set(key, uniquePaths(m-1, n, memo) + uniquePaths(m, n-1, memo))\n    \n//     return memo.get(key)\n// };\n\n\n\n","compare_result":"111111111111111111111111111111111111110000000000000000000000000","title_slug":"unique-paths","has_notes":false}