{"id":779633346,"lang":"javascript","lang_name":"JavaScript","time":"10Â months","timestamp":1661105147,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/779633346/","is_pending":"Not Pending","title":"Find if Path Exists in Graph","memory":"N/A","code":"/**\n * @param {number} n\n * @param {number[][]} edges\n * @param {number} start\n * @param {number} end\n * @return {boolean}\n */\nvar validPath = function(n, edges, start, end) {\n    const buildGraph = (edges) => {\n        let graph = {}\n        \n        for (let edge of edges) {\n            const [a, b] = edge\n            if (!(a in graph)) graph[a] = []\n            if (!(b in graph)) graph[b] = []\n            \n            graph[a].push(b)\n            graph[b].push(a)\n        }\n        \n        return graph\n    }\n    \n    let graph = buildGraph(edges)\n\n    const hasPath = (g, s, e, visited = new Set()) => {\n        \n        if (s === e) return true\n        visited.add(String(s))\n        \n        for (let neighbor of g[s]) {\n            if (!visited.has(String(neighbor))) {\n                visited.add(String(neighbor))\n                let isFound = hasPath(g, neighbor, e, visited)\n                if (isFound) return true\n            }\n        }\n        return false\n    }\n    \n    return hasPath(graph, start, end)\n    \n};","compare_result":"11111111111111111111111100","title_slug":"find-if-path-exists-in-graph","has_notes":false}