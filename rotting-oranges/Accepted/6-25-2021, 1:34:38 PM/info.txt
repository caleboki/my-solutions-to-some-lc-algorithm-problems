{"id":513097665,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 12 months","timestamp":1624642478,"status":10,"status_display":"Accepted","runtime":"92 ms","url":"/submissions/detail/513097665/","is_pending":"Not Pending","title":"Rotting Oranges","memory":"41.8 MB","code":"/**\n * @param {number[][]} grid\n * @return {number}\n */\n\nvar orangesRotting = function(grid) {\n    let fresh = new Set()\n    let rotten = new Set()\n    let rows = grid.length\n    let cols = grid[0].length\n    \n    for (let i = 0; i < rows; i++){\n        for (let j = 0; j < cols; j++) {\n            if (grid[i][j] === 1) {\n                fresh.add(\"\" + i + j)\n            } else if (grid[i][j] === 2) {\n                rotten.add(\"\" + i + j)\n            } \n        }\n    }\n    let minutes = 0\n    let directions = [[0, 1], [1, 0], [-1, 0], [0, -1]]\n    \n    while(fresh.size > 0) {\n        let infected = new Set()\n        let rottenArray = Array.from(rotten)\n        for(s of rottenArray) {\n            let i = parseInt(s[0]) \n            let j = parseInt(s[1])\n            \n            \n            for (d of directions) {\n                let nextI = i + d[0]\n                let nextJ = j + d[1]\n                \n                if (fresh.has(\"\" + nextI + nextJ)) {\n                    fresh.delete(\"\" + nextI + nextJ)\n                    infected.add(\"\" + nextI + nextJ)\n                }\n            }\n        }\n        \n        if (infected.size === 0) return -1\n        \n        rotten = infected\n        minutes++\n    }\n    return minutes\n}\n\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"rotting-oranges","has_notes":false}