{"id":566375640,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 8 months","timestamp":1633461130,"status":10,"status_display":"Accepted","runtime":"164 ms","url":"/submissions/detail/566375640/","is_pending":"Not Pending","title":"Binary Tree Longest Consecutive Sequence","memory":"61.4 MB","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nvar longestConsecutive = function(root) {\n    \n    let max = [1]\n    \n    const traverse = (node, count = 0, target = 0, max) => {\n        if (!node) return\n        \n        if (node.val === target) {\n            count++\n        } else {\n            count = 1\n        }\n        \n        max[0] = Math.max(max[0], count)\n        target = node.val + 1\n        \n        traverse(node.left, count, target, max)\n        traverse(node.right, count, target, max)\n    }\n    \n    traverse(root, 0, 0, max)\n    \n    return max[0]\n    \n};","compare_result":"11111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-longest-consecutive-sequence","has_notes":false}