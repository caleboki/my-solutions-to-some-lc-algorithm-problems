{"id":597076638,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 6 months","timestamp":1638671995,"status":10,"status_display":"Accepted","runtime":"80 ms","url":"/submissions/detail/597076638/","is_pending":"Not Pending","title":"Integer to English Words","memory":"40.3 MB","code":"/**\n * @param {number} num\n * @return {string}\n */\nvar numberToWords = function(num) {\n    if (num === 0) return 'Zero'\n    \n    let finalString = [];\n    \n    [...numberToWordMap.keys()].reverse().map(key => {\n        if (num >= key) {\n            if (key >= 100) {\n                const numberOfTimesKeyFitsNum = Math.floor(num / key);\n                const number = memoize[numberOfTimesKeyFitsNum] ? memoize[numberOfTimesKeyFitsNum] : numberToWords(numberOfTimesKeyFitsNum);\n                if (!memoize[numberOfTimesKeyFitsNum]) memoize[numberOfTimesKeyFitsNum] = number;\n                \n                finalString.push(number + ' ' + numberToWordMap.get(key) + ' ')\n            }\n            else {\n                finalString.push(numberToWordMap.get(key) + ' ')\n            }\n               \n            num = num % key;\n        }\n    });\n    \n    finalString = finalString.join('');\n    \n    return finalString.slice(0, finalString.length - 1);\n};\n\nlet memoize = {};\n\nlet numberToWordMap = new Map();\nnumberToWordMap.set(1, 'One')\nnumberToWordMap.set(2, 'Two')\nnumberToWordMap.set(3, 'Three')\nnumberToWordMap.set(4, 'Four')\nnumberToWordMap.set(5, 'Five')\nnumberToWordMap.set(6, 'Six')\nnumberToWordMap.set(7, 'Seven')\nnumberToWordMap.set(8, 'Eight')\nnumberToWordMap.set(9, 'Nine')\nnumberToWordMap.set(10, 'Ten')\nnumberToWordMap.set(11, 'Eleven')\nnumberToWordMap.set(12, 'Twelve')\nnumberToWordMap.set(13, 'Thirteen')\nnumberToWordMap.set(14, 'Fourteen')\nnumberToWordMap.set(15, 'Fifteen')\nnumberToWordMap.set(16, 'Sixteen')\nnumberToWordMap.set(17, 'Seventeen')\nnumberToWordMap.set(18, 'Eighteen')\nnumberToWordMap.set(19, 'Nineteen')\nnumberToWordMap.set(20, 'Twenty')\nnumberToWordMap.set(30, 'Thirty')\nnumberToWordMap.set(40, 'Forty')\nnumberToWordMap.set(50, 'Fifty')\nnumberToWordMap.set(60, 'Sixty')\nnumberToWordMap.set(70, 'Seventy')\nnumberToWordMap.set(80, 'Eighty')\nnumberToWordMap.set(90, 'Ninety')\nnumberToWordMap.set(100, 'Hundred')\nnumberToWordMap.set(1000, 'Thousand')\nnumberToWordMap.set(1000000, 'Million')\nnumberToWordMap.set(1000000000, 'Billion')","compare_resulttitle_slug":"integer-to-english-words","has_notes":false}