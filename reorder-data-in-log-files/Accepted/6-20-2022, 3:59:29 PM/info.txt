{"id":727027097,"lang":"javascript","lang_name":"JavaScript","time":"1Â year","timestamp":1655755169,"status":10,"status_display":"Accepted","runtime":"154 ms","url":"/submissions/detail/727027097/","is_pending":"Not Pending","title":"Reorder Data in Log Files","memory":"47 MB","code":"/**\n * @param {string[]} logs\n * @return {string[]}\n */\n\n// split numeric/letter logs, since sort() that is used in JS (quicksort) is not stable and //will reshuffle the numeric logs, that we dont need\n\n//merge sorted letter-logs with numeric ones\n\nvar reorderLogFiles = function(logs) {\n    const numeric = []\n    const letter = []\n    \n    for (const log of logs) {\n        if (isNumericLog(log)){\n            numeric.push(log)\n            continue\n        }\n        \n        letter.push(log)\n    }\n    \n    return [\n        ...letter.sort(compareLetterLogs),\n        ...numeric\n    ]\n};\n\nconst digits = new Set('0123456789')\n\nfunction isNumericLog(log){\n    return digits.has(log[log.length - 1])\n    //return digits.has(log.charAt(log.length - 1));\n}\n\nfunction compareLetterLogs(a, b) {\n    const aBody = getBody(a)\n    const bBody = getBody(b)\n    \n    //return aBody === bBody ? a.localeCompare(b) : aBody.localeCompare(bBody);\n    \n    if (aBody === bBody) {\n        return a.localeCompare(b)\n    } else {\n        return aBody.localeCompare(bBody)\n    }\n}\n\nfunction getBody(log) {\n    return log.slice(log.indexOf(' ') + 1);\n}\n\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111","title_slug":"reorder-data-in-log-files","has_notes":false}