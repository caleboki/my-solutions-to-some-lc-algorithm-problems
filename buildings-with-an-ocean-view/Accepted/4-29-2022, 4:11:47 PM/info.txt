{"id":689861634,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 1 month","timestamp":1651263107,"status":10,"status_display":"Accepted","runtime":"132 ms","url":"/submissions/detail/689861634/","is_pending":"Not Pending","title":"Buildings With an Ocean View","memory":"61.2 MB","code":"/**\n * @param {number[]} heights\n * @return {number[]}\n */\n\n//Brute force, time limit exceeded\n//Time complexity O(N^2)\n// var findBuildings = function(heights) {\n//     let res = [], temp = new Set()\n    \n//     for (let i = 0; i < heights.length; i++) {\n//         for (let j = i+1; j < heights.length; j++) {\n            \n//             if (heights[i] > heights[j]) {\n                \n//                 temp.add(i)\n                \n//             } else {\n//                 temp = new Set()\n//                 break\n//             }\n//             \n            \n//             if (j === heights.length - 1) {\n//                 res.push(...temp)\n//                 break\n//             }\n                \n//         }\n//     }\n//     res.push(heights.length - 1)\n    \n//     return Array.from(new Set(res))\n    \n// };\n\n// Time complexity: O(N)\n// Space complexity: O(N)\n\n// const findBuildings = (heights) => {\n//     let answer = []\n    \n//     for (let i = 0; i < heights.length; i++) {\n//         while (answer.length && heights[answer[answer.length - 1]] <= heights[i]) {\n//             answer.pop()\n//         }\n//         answer.push(i)\n//     }\n//     return answer\n// }\n\n// Time complexity: O(N)\n// Space complexity: O(N)\n\n// const findBuildings = (heights) => {\n//     let answer = [], stack = []\n    \n//     for (let i = heights.length - 1; i >=0; i--) {\n//         while(stack.length && heights[stack[stack.length - 1]] < heights[i]) {\n//             stack.pop()\n//         }\n        \n//         if (stack.length === 0) answer.push(i)\n        \n//         stack.push(i)\n//     }\n    \n//     answer.reverse()\n//     return answer\n// }\n\n// Time complexity: O(N)\n// Space complexity: O(1)\nconst findBuildings = (heights) => {\n    let answer = [], maxHeight = -1\n    \n    for (let i = heights.length-1; i >= 0; i--) {\n        if (maxHeight < heights[i]) answer.push(i), maxHeight = heights[i]\n    }\n    \n    answer.reverse()\n    return answer\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"buildings-with-an-ocean-view","has_notes":false}