{"id":919114635,"lang":"javascript","lang_name":"JavaScript","time":"3Â months","timestamp":1679352496,"status":10,"status_display":"Accepted","runtime":"173 ms","url":"/submissions/detail/919114635/","is_pending":"Not Pending","title":"Range Sum Query - Immutable","memory":"48.3 MB","code":"/**\n * @param {number[]} nums\n */\n// var NumArray = function(nums) {\n    \n// };\n\n// /** \n//  * @param {number} left \n//  * @param {number} right\n//  * @return {number}\n//  */\n// NumArray.prototype.sumRange = function(left, right) {\n    \n// };\n\n/** \n * Your NumArray object will be instantiated and called as such:\n * var obj = new NumArray(nums)\n * var param_1 = obj.sumRange(left,right)\n */\n\n class NumArray {\n   constructor(nums) {\n     this.nums = nums\n   }\n\n   sumRange(left, right) {\n     let sum = 0\n\n     for (let i = left; i < right + 1; i++) {\n       sum += this.nums[i]\n     }\n\n     return sum\n   }\n\n }","compare_result":"111111111111111","title_slug":"range-sum-query-immutable","has_notes":false}