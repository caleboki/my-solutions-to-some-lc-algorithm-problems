{"id":930373300,"lang":"javascript","lang_name":"JavaScript","time":"2 months, 2 weeks","timestamp":1680995967,"status":10,"status_display":"Accepted","runtime":"89 ms","url":"/submissions/detail/930373300/","is_pending":"Not Pending","title":"The Earliest Moment When Everyone Become Friends","memory":"46.5 MB","code":"/**\n * @param {number[][]} logs\n * @param {number} n\n * @return {number}\n */\n// var earliestAcq = function(logs, n) {\n//     logs.sort(function (a, b) {return a[0] - b[0]})\n    \n//     const buildGraph = (edges) => {\n//         const graph = {}\n\n//         for (let edge of edges) {\n//             const [a, b, c] = edge\n//             if (!(b in graph)) graph[b] = []\n//             if (!(c in graph)) graph[c] = []\n//             graph[b].push(c)\n//             graph[c].push(b)\n//         }\n//         return graph\n//     }\n\n//     const graph = buildGraph(logs)\n//     console.log(graph)\n\n//     for (let i = 0; i < n; i++) {\n\n//     }\n// };\n\nconst earliestAcq = (logs, n) => {\n    logs.sort((a, b) => a[0] - b[0])\n\n    const graph = {}\n\n    for (let i = 0; i < n; i++) {\n        graph[i] = new Set([i])\n    }\n\n    for (let [ts, p1, p2] of logs) {\n        const set1 = graph[p1]\n        const set2 = graph[p2]\n\n        set2.forEach(p => {\n            set1.add(p)\n            graph[p] = set1\n        })\n\n        if (set1.size === n) return ts\n    }\n\n    return -1\n}\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111","title_slug":"the-earliest-moment-when-everyone-become-friends","has_notes":false}