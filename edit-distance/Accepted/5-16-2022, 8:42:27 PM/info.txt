{"id":701046364,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 1 month","timestamp":1652748147,"status":10,"status_display":"Accepted","runtime":"150 ms","url":"/submissions/detail/701046364/","is_pending":"Not Pending","title":"Edit Distance","memory":"50.4 MB","code":"/**\n * @param {string} word1\n * @param {string} word2\n * @return {number}\n */\nvar minDistance = function(word1, word2) {\n     const dist = new Array(word1.length + 1).fill().map(() => [])\n    \n     // we've added plus one to account for the empty string\n     for (let i = 0; i <= word1.length; i++) {\n         // if (!dist[i]) { // because initializing empty Arrays with current sizes in JavaScript is weird\n         //     dist[i] = [];\n         // }\n         \n         for (let j = 0; j <= word2.length; j++) {\n             if (i === 0) {\n                 // i is the empty string, so 1 insert per char of j\n                 dist[i][j] = j;\n             } else if (j === 0) {\n                 // j is the empty string, so 1 insert per char of i\n                 dist[i][j] = i;\n             } else if (word1[i - 1] === word2[j - 1]) {\n                 // the last character matches, so use the diagonal\n                 // this is because the no changes required from previous\n                 dist[i][j] = dist[i - 1][j - 1];\n             } else {\n                 dist[i][j] = Math.min(1 + Math.min(\n                    dist[i - 1][j],\n                    dist[i][j - 1],\n                    dist[i - 1][j - 1]\n                 ));\n             }\n         }\n     }\n    \n    return dist[word1.length][word2.length];\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"edit-distance","has_notes":false}