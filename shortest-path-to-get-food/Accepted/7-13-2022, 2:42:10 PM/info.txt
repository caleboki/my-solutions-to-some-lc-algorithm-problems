{"id":746317352,"lang":"javascript","lang_name":"JavaScript","time":"11 months, 2 weeks","timestamp":1657737730,"status":10,"status_display":"Accepted","runtime":"144 ms","url":"/submissions/detail/746317352/","is_pending":"Not Pending","title":"Shortest Path to Get Food","memory":"50.2 MB","code":"/**\n * @param {character[][]} grid\n * @return {number}\n */\nvar getFood = function(grid) {\n    let minDistance = 0;\n    let queue = []\n    let visited = [];\n    let dirs = [[1, 0], [0, 1], [-1, 0], [0, -1]];\n    let rows = grid.length;\n    let cols = grid[0].length;\n    \n    // Array to keep track of which cell has been visited\n    for(let i = 0; i < rows; i++) {\n        visited.push(new Array(cols).fill(false));\n    }\n    \n    // Find starting position for our queue\n    for(let i = 0; i < rows; i++) {\n        for(let j = 0; j < cols; j++) {\n            if(grid[i][j] === '*') {\n                queue.push([i, j]);\n                visited[i][j] = true;\n                break;\n            }\n        }\n    }\n    \n    while(queue.length) {\n        // All cells within the size will be at the same distance from starting cell\n        let size = queue.length;\n        \n        for(let i = 0; i < size; i++) {\n          let cell = queue.shift();\n          \n          // We find the closest food cell since we are doing BFS\n          if(grid[cell[0]][cell[1]] === '#') return minDistance;\n        \n          for(let dir of dirs) {\n            let row = cell[0] + dir[0];\n            let col = cell[1] + dir[1];\n            \n            // Skip visited cell and out of bound cell and obstacle cell  \n            if(row < 0 || col < 0 || row >= rows || col >= cols || grid[row][col] === 'X' || visited[row][col]) continue;\n            \n            // Add unvisited cell to the queue  \n            visited[row][col] = true;\n            queue.push([row, col]);\n          }  \n        }\n        \n        // We finish all cell at the current distance and going to look for cells at next distance\n        minDistance++;\n    }\n    \n    return -1;\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"shortest-path-to-get-food","has_notes":false}