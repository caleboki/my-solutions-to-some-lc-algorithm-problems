{"id":567099402,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 8 months","timestamp":1633573806,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/567099402/","is_pending":"Not Pending","title":"Same Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} p\n * @param {TreeNode} q\n * @return {boolean}\n */\nvar isSameTree = function(p, q) {\n    let nodesP = []\n    let nodesQ = []\n   \n    const traverseP = (nodeP) => {\n        if (!nodeP) return\n        \n        traverseP(nodeP.left)\n        if (nodeP) nodesP.push(nodeP.val)\n        traverseP(nodeP.right)\n    }\n    \n    const traverseQ = (nodeQ) => {\n        if (!nodeQ) return\n        \n        traverseQ(nodeQ.left)\n        if (nodeQ) nodesQ.push(nodeQ.val)\n        traverseQ(nodeQ.right)\n    }\n    \n    traverseP(p)\n    traverseQ(q)\n    \n    if (nodesP.length !== nodesQ.length) return false\n    \n    for (let i = 0; i < nodesP.length; i++) {\n        if (nodesP[i] !== nodesQ[i]) return false\n    }\n    return true\n    \n};","compare_result":"111111111110111111111111111111111111111111111111111111110111","title_slug":"same-tree","has_notes":false}