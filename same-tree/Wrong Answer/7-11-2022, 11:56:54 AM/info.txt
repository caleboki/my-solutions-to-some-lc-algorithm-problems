{"id":744379183,"lang":"javascript","lang_name":"JavaScript","time":"11 months, 2 weeks","timestamp":1657555014,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/744379183/","is_pending":"Not Pending","title":"Same Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} p\n * @param {TreeNode} q\n * @return {boolean}\n */\n// var isSameTree = function(p, q) {\n//     if (!p && !q) return true\n    \n//     if (!p || !q) return false\n    \n//     if (p.val !== q.val) return false\n    \n//     if (isSameTree(p.left, q.left) && isSameTree(p.right, q.right)) return true\n    \n//     return false\n// };\n\n\n//inOrder: Left, Up, Right\nconst isSameTree = (p, q) => {\n    let pArray = [], qArray = []\n    \n    const dfsP = (root) => {\n       \n        if (!root) return\n        dfsP(root.left)\n        pArray.push(root.val)\n        dfsP(root.right)\n    }\n    \n    const dfsQ = (root) => {\n        \n        if (!root) return\n        dfsQ(root.left)\n        qArray.push(root.val)\n        dfsQ(root.right)\n    }\n    \n    dfsP(p)\n    dfsQ(q)\n    console.log(pArray)\n    console.log(qArray)\n    \n    if (pArray.length !== qArray.length) return false\n    \n    for (let i = 0; i < pArray.length; i++) {\n        if (pArray[i] !== qArray[i]) return false\n    }\n    return true\n    \n    \n    \n    \n}","compare_result":"111111111110111111111111111111111111111111111111111111110111","title_slug":"same-tree","has_notes":false}