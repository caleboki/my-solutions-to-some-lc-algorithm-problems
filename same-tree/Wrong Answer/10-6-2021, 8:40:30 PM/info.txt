{"id":567058854,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 8 months","timestamp":1633567230,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/567058854/","is_pending":"Not Pending","title":"Same Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} p\n * @param {TreeNode} q\n * @return {boolean}\n */\nvar isSameTree = function(p, q) {\n    \n    \n    const dfs = (nodeP, nodeQ) => {\n        if (!nodeP && !nodeQ) return true\n        \n        if (nodeP && nodeQ) {\n            dfs(nodeP.left, nodeQ.left)\n            console.log(nodeP.val)\n            if (nodeP.val !== nodeQ.val) return false\n            dfs(nodeP.right, nodeQ.right)\n        } \n        \n       \n        \n        return false\n        \n    }\n    \n    return dfs(p, q)\n    \n};","compare_result":"011111011111010111010111111011111111111101011111111111111010","title_slug":"same-tree","has_notes":false}