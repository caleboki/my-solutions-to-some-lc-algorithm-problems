{"id":481385496,"lang":"javascript","lang_name":"JavaScript","time":"2 years, 2 months","timestamp":1618584869,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/481385496/","is_pending":"Not Pending","title":"Maximum Subarray","memory":"N/A","code":"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxSubArray = function(nums) {\n    \n    if (nums.length === 1) return nums[0];\n    if (nums.length === 0) return [];\n    let current = nums[0];\n    let max = nums[0];\n    \n    for (let i = 0; i < nums.length; i++) {\n        let num = nums[i];\n        current = Math.max(num, current + num);\n        max = Math.max(max, current);\n    }\n    \n    return max;\n    \n};","compare_result":"11011111110011100001011001101100011011011111111111011011001010110110110110011000111011011101110111011000101101001110111010111101110001101011111010110110101100101101000100011100011101111011001111010111111","title_slug":"maximum-subarray","has_notes":false}