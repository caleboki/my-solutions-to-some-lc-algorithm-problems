{"id":748939218,"lang":"javascript","lang_name":"JavaScript","time":"11Â months, 1Â week","timestamp":1658018748,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/748939218/","is_pending":"Not Pending","title":"Find All Possible Recipes from Given Supplies","memory":"N/A","code":"/**\n * @param {string[]} recipes\n * @param {string[][]} ingredients\n * @param {string[]} supplies\n * @return {string[]}\n */\nvar findAllRecipes = function(recipes, ingredients, supplies) {\n    let ingredientsMap = {}, suppliesSet = new Set(supplies), visited = new Set(),  seeing = new Set(), res = [], adjList = {}\n    \n    for (let i in recipes) adjList[recipes[i]] = ingredients[i]\n    console.log(adjList)\n    let queue = recipes\n    \n    while (queue.length) {\n        const current = queue.shift()\n        const ingredients = adjList[current]\n        let count = ingredients.length\n        \n        seeing.add(current)\n        \n        for (let ingredient of ingredients) {\n            if (visited.has(ingredient)) {\n                count--\n                continue\n            }\n            if (seeing.has(ingredient)) continue\n            if (adjList[ingredient]) queue.push(ingredient)\n            if (suppliesSet.has(ingredient)) count--\n        }\n        \n        if (count === 0 && ingredients.length > 0) res.push(current)\n        suppliesSet.add(current)\n        \n        seeing.delete(current)\n        visited.add(current)\n        \n    }\n    \n    \n    return res\n    \n    \n    \n};","compare_result":"1111000000000000000000000000000000000000000000000000001100000000000000000000000000000000000000000000000000000000","title_slug":"find-all-possible-recipes-from-given-supplies","has_notes":false}