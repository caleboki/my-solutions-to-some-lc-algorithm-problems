{"id":793888800,"lang":"javascript","lang_name":"JavaScript","time":"9 months, 2 weeks","timestamp":1662558024,"status":10,"status_display":"Accepted","runtime":"119 ms","url":"/submissions/detail/793888800/","is_pending":"Not Pending","title":"Find the Town Judge","memory":"50.5 MB","code":"/**\n * @param {number} n\n * @param {number[][]} trust\n * @return {number}\n */\n// var findJudge = function(n, trust) {\n//     const buildGraph = () => {\n//         let adjList = {}\n        \n//         for (let i = 1; i <= n; i++) {\n//             adjList[i] = []\n//         }\n        \n//         for (t of trust) {\n//             let [a, b] = t\n//             adjList[a].push(b)\n//         }\n//         return adjList\n//     }\n    \n//     let graph = buildGraph(), possibleJudge\n    \n//     for (let i = 1; i <= n; i++) {\n//         if (graph[i].length === 0) possibleJudge = i\n//     }\n    \n//     if (!possibleJudge) return -1\n    \n//     for (let i = 1; i <=n; i++) {\n//         if (!graph[i].includes(possibleJudge) && i !== n) return -1\n//     }\n    \n//     return possibleJudge\n// };\n\nconst findJudge = (n, trust) => {\n    if (n === 1) return 1\n    \n    const trusted = {}, whoTrusts = new Set()\n    \n    for (let i = 0; i < trust.length; i++) {\n        trusted[trust[i][1]] = trusted[trust[i][1]] + 1 || 1\n        whoTrusts.add(trust[i][0])\n    }\n    \n    for (let i = 1; i <= n; i++) {\n        if (trusted[i] === n - 1 && !whoTrusts.has(i)) return i\n    }\n    \n    return -1\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-the-town-judge","has_notes":false}