{"id":534391779,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 10 months","timestamp":1628280774,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/534391779/","is_pending":"Not Pending","title":"Find All Anagrams in a String","memory":"N/A","code":"/**\n * @param {string} s\n * @param {string} p\n * @return {number[]}\n */\nvar findAnagrams = function(s, p) {\n    let pLength = p.length\n    let sLength = s.length\n    \n    let len = sLength - pLength\n    \n    let pMap = {}\n    let result = []\n    \n    for (let i = 0; i < pLength; i++) {\n        if (pMap[p[i]] === undefined){\n            pMap[p[i]] = 1 \n        } else {\n            pMap[p[i]]++\n        }\n    }\n    console.log(pMap)\n    \n    \n    \n    const isAnnagram = (sub, map) => {\n        let subMap = {}\n        let count = 0\n        \n        sub = sub.split('')\n        sub.forEach(l => {\n            if (subMap[l] === undefined) {\n                subMap[l] = 1\n            } else {\n                subMap[l]++\n            }\n        })\n        \n        sub.forEach(l => {\n            if (subMap[l] === pMap[l]) {\n                count++\n                \n            } else {\n                return false\n            }\n        })\n        \n        return count === sub.length\n    }\n                    \n    for (let i = 0; i < len + 1; i++) {\n        let sub = s.substring(i, pLength)\n        pLength++\n        if (isAnnagram(sub, pMap)) result.push(i)\n    }\n    \n    return result\n    \n};","compare_result":"111111111111111111111111111111111111111111111111111100000000","title_slug":"find-all-anagrams-in-a-string","has_notes":false}