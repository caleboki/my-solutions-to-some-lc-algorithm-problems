{"id":558257548,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 9 months","timestamp":1632171697,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/558257548/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {boolean}\n */\nvar isValidBST = function(root) {\n    \n    let isValid = true\n    \n    const dfs = (node) => {\n        if (!node) return null\n        \n        let current = node.val\n       \n        let left = dfs(node.left)\n        let right = dfs(node.right)\n        \n        if (left > current) {\n            isValid = false\n            return\n        }\n        \n        if (right < current) {\n            isValid = false\n            return\n        }\n        \n        return node.val\n    }\n    \n    dfs(root)\n    \n    return isValid\n    \n};","compare_result":"01101110110111110110000000000000000000011011011111100110111000111101010111001110","title_slug":"validate-binary-search-tree","has_notes":false}