{"id":566551116,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 8 months","timestamp":1633488447,"status":10,"status_display":"Accepted","runtime":"162 ms","url":"/submissions/detail/566551116/","is_pending":"Not Pending","title":"Delete Leaves With a Given Value","memory":"44.1 MB","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @param {number} target\n * @return {TreeNode}\n */\n// var removeLeafNodes = function(root, target) {\n//     // console.log(root.left)\n//     // return\n//     const deleteNodes = (node) => {\n//         if (!node) return node\n//         if (node.val === target && !node.left && !node.right) {\n//             node.val = null\n//             return\n//         }\n//         deleteNodes(node.left)\n//         deleteNodes(node.right)\n//     }\n    \n//     deleteNodes(root)\n//     return root\n// };\n\nvar removeLeafNodes = function(root, target) {\n   if(root.left != null) root.left = removeLeafNodes(root.left, target);\n    if(root.right != null) root.right = removeLeafNodes(root.right, target);\n\n    return root.left == root.right && root.val == target ? null : root;\n};","compare_result":"11111111111111111111111111111111111111111111111111","title_slug":"delete-leaves-with-a-given-value","has_notes":false}