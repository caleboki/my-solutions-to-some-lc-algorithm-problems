{"id":601544194,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 6 months","timestamp":1639454789,"status":10,"status_display":"Accepted","runtime":"408 ms","url":"/submissions/detail/601544194/","is_pending":"Not Pending","title":"Target Sum","memory":"50.6 MB","code":"/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number}\n */\n// var findTargetSumWays = function(nums, target) {\n//     let count = 0\n    \n//     const calculate = (i, sum, t) => {\n//         if (i === nums.length) {\n//             if (sum === t) count++\n//         } \n//         else \n//         {\n//             calculate(i+1, (sum + nums[i]), t)\n//             calculate(i+1, (sum - nums[i]), t)\n//         }\n//     }\n    \n//     calculate(0, 0, target)\n    \n//     return count\n// };\n\n// var findTargetSumWays = function(nums, target) {\n//     let memo = {}\n    \n//     const calculate = (i, sum) => {\n//         if (i === nums.length) {\n//             if (sum === target) {\n//                 return 1\n//             } else {\n//                 return 0\n//             }\n//         } \n//         if (i in memo) return memo[i]\n        \n//         memo[i] = calculate(i+1, sum + nums[i]) + calculate(i+1, sum - nums[i])\n//         return memo[i]\n//     }\n//     return calculate(0, 0)\n// };\n\nvar findTargetSumWays = function(nums, target) {\n    let memo = {}\n    \n    const calculate = (i, sum) => {\n        if ((`${i}-${sum}`) in memo) return memo[`${i}-${sum}`]\n        if(i >= nums.length) return sum === target ? 1 : 0\n        \n        let add = calculate(i + 1, sum + nums[i])\n        let sub = calculate(i + 1, sum - nums[i])\n        \n        memo[`${i}-${sum}`] = add + sub\n        \n        return memo[`${i}-${sum}`]\n    }\n    return calculate(0, 0)\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"target-sum","has_notes":false}