{"id":933341209,"lang":"javascript","lang_name":"JavaScript","time":"2 months, 1 week","timestamp":1681430690,"status":10,"status_display":"Accepted","runtime":"137 ms","url":"/submissions/detail/933341209/","is_pending":"Not Pending","title":"Find Root of N-Ary Tree","memory":"58.9 MB","code":"/**\n * // Definition for a Node.\n * function Node(val, children) {\n *    this.val = val === undefined ? 0 : val;\n *    this.children = children === undefined ? [] : children;\n * };\n */\n\n/**\n * @param {Node[]} tree\n * @return {Node}\n */\nvar findRoot = function(tree) {\n    // Use a map to keep track of nodes and their corresponding parent nodes\n    const parents = new Map();\n    for (let i = 0; i < tree.length; i++) {\n        const node = tree[i];\n        if (node.children) {\n            for (let j = 0; j < node.children.length; j++) {\n                const child = node.children[j];\n                parents.set(child, node);\n            }\n        }\n    }\n    // Traverse the tree from a leaf node to the root\n    let root = null;\n    for (let i = 0; i < tree.length; i++) {\n        const node = tree[i];\n        if (!parents.has(node)) {\n            root = node;\n            break;\n        }\n    }\n    while (parents.has(root)) {\n        root = parents.get(root);\n    }\n    return root;\n};\n\n","compare_result":"111111111111111111111111111111111111111","title_slug":"find-root-of-n-ary-tree","has_notes":false}