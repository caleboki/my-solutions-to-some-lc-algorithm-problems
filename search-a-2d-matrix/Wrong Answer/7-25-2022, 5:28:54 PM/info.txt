{"id":756679835,"lang":"javascript","lang_name":"JavaScript","time":"11Â months","timestamp":1658784534,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/756679835/","is_pending":"Not Pending","title":"Search a 2D Matrix","memory":"N/A","code":"/**\n * @param {number[][]} matrix\n * @param {number} target\n * @return {boolean}\n */\nvar searchMatrix = function(matrix, target) {\n    if (matrix.length === 0) return false\n    \n    let rows = matrix.length, cols = matrix[0].length\n    \n    const binarySearch = (row, target) => {\n        let l = 0, r = row.length - 1\n        \n        while (l <= r) {\n            let mid = Math.floor((l+r)/2)\n            \n            if (row[mid] === target) {\n                return true\n            } else if (row[mid] < target) {\n                r = mid - 1\n            } else {\n                l = mid + 1\n            }\n        }\n        return false\n    }\n    \n    // for (let i = 0; i < rows; i++) {\n    //     for (let j = 0; j < cols; j++) {\n    //         if (matrix[i][j] === target) return true\n    //     }\n    // }\n    \n    for (let i = 0; i < rows; i++) {\n        if (binarySearch(matrix[i], target)) return true\n    }\n    \n    return false\n    \n};","compare_result":"1111111111101111111011101111111111111111110110101011001011101011111111111111111111111110011111011111111101110101110101110101111111111","title_slug":"search-a-2d-matrix","has_notes":false}