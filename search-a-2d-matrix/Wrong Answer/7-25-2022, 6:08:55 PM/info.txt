{"id":756701067,"lang":"javascript","lang_name":"JavaScript","time":"11Â months","timestamp":1658786935,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/756701067/","is_pending":"Not Pending","title":"Search a 2D Matrix","memory":"N/A","code":"/**\n * @param {number[][]} matrix\n * @param {number} target\n * @return {boolean}\n */\n// var searchMatrix = function(matrix, target) {\n//     if (matrix.length === 0) return false\n    \n//     let rows = matrix.length, cols = matrix[0].length\n    \n//     const binarySearch = (row, target) => {\n//         let l = 0, r = row.length - 1\n        \n//         while (l <= r) {\n//             let mid = Math.floor((l+r)/2)\n            \n//             if (row[mid] === target) {\n//                 return true\n//             } else if (row[mid] < target) {\n//                 l = mid + 1\n//             } else {\n//                 r = mid - 1\n//             }\n//         }\n//         return false\n//     }\n    \n//     // for (let i = 0; i < rows; i++) {\n//     //     for (let j = 0; j < cols; j++) {\n//     //         if (matrix[i][j] === target) return true\n//     //     }\n//     // }\n    \n//     for (let i = 0; i < rows; i++) {\n//         if (binarySearch(matrix[i], target)) return true\n//     }\n    \n//     return false\n// };\n\nconst searchMatrix = (matrix, target) => {\n    let col = 0, row = matrix.length - 1\n    \n    while (row >= 0 && col <= matrix[0].length) {\n        if (matrix[row][col] > target) {\n            row--\n        } else if (matrix[row][col] < target) {\n            col++\n        } else {\n            return true\n        } \n    }\n    return false\n}","compare_result":"1011011011110110101111110110101011101101011111110110110101010100000001100100011000010001110000100010111010001110001110011110000110000","title_slug":"search-a-2d-matrix","has_notes":false}