{"id":509481594,"lang":"javascript","lang_name":"JavaScript","time":"2Â years","timestamp":1623978494,"status":10,"status_display":"Accepted","runtime":"76 ms","url":"/submissions/detail/509481594/","is_pending":"Not Pending","title":"Search a 2D Matrix","memory":"40.2 MB","code":"/**\n * @param {number[][]} matrix\n * @param {number} target\n * @return {boolean}\n */\n\n//Linear Search ?\nvar searchMatrix = function(matrix, target) {\n    let newMatrix = []\n    \n    for (let i = 0; i < matrix.length; i++) {\n        newMatrix.push(...matrix[i])\n    }\n    \n    if (newMatrix.find(f => f === target) !== undefined) return true\n    return false\n    \n};\n\n//Binary search\n// var searchMatrix = function(matrix, target) {\n//     let newMatrix = []\n    \n//     for (let i = 0; i < matrix.length; i++) {\n//         newMatrix.push(...matrix[i])\n//     }\n    \n//     let left = 0, right = newMatrix.length - 1\n    \n//     while (left <= right) {\n//         let mid = Math.floor((left + right)/2)\n        \n//         if(newMatrix[mid] === target) {\n//             return true\n//         } else if(target < newMatrix[mid]) {\n//             right = mid - 1\n//         } else {\n//             left = mid + 1\n//         }\n//     }\n//     return false \n// };","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-a-2d-matrix","has_notes":false}