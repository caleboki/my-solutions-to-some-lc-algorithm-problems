{"id":577639058,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 7 months","timestamp":1635276589,"status":10,"status_display":"Accepted","runtime":"84 ms","url":"/submissions/detail/577639058/","is_pending":"Not Pending","title":"Path Sum","memory":"42.9 MB","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @param {number} targetSum\n * @return {boolean}\n */\nvar hasPathSum = function(root, targetSum) {\n    if (!root) return false\n    \n    targetSum -= root.val\n    \n    if (!root.left && !root.right) return (targetSum === 0)\n    \n    return hasPathSum(root.left, targetSum) || hasPathSum(root.right, targetSum)\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum","has_notes":false}