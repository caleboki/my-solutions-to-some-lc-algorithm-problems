{"id":577638205,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 7 months","timestamp":1635276461,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/577638205/","is_pending":"Not Pending","title":"Path Sum","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @param {number} targetSum\n * @return {boolean}\n */\nvar hasPathSum = function(root, targetSum) {\n    if (!root) return false\n    \n    targetSum -= root.val\n    const left = hasPathSum(root.left, targetSum)\n    const right = hasPathSum(root.right, targetSum)\n    \n    if (!left && !right) return (targetSum === 0)\n    \n    \n    return hasPath(root.left, targetSum) || hasPath(root.right, targetSum)\n    \n};","compare_result":"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"path-sum","has_notes":false}