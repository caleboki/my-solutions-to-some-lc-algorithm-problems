{"id":795181145,"lang":"javascript","lang_name":"JavaScript","time":"9 months, 2 weeks","timestamp":1662689508,"status":10,"status_display":"Accepted","runtime":"106 ms","url":"/submissions/detail/795181145/","is_pending":"Not Pending","title":"Closest Binary Search Tree Value","memory":"46.5 MB","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @param {number} target\n * @return {number}\n */\nvar closestValue = function(root, target) {\n    let min = Infinity, node\n    \n    const dfs = (root, target) => {\n        if (!root) return\n        dfs(root.left, target)\n        let diff = Math.abs(root.val - target)\n        if (diff < min) {\n            min = diff\n            node = root\n        }\n        dfs(root.right, target)\n    }\n    \n    dfs(root, target)\n    \n    return node.val\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"closest-binary-search-tree-value","has_notes":false}