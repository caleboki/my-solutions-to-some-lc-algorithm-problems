{"id":748077910,"lang":"javascript","lang_name":"JavaScript","time":"11 months, 1 week","timestamp":1657919913,"status":10,"status_display":"Accepted","runtime":"76 ms","url":"/submissions/detail/748077910/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"44.6 MB","code":"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar lengthOfLIS = function(nums) {\n    const binarySearch = (arr, num) => {\n        let left = 0, right = arr.length - 1\n        \n        while (left < right) {\n            let mid = Math.floor((left + right)/2)\n            if (arr[mid] === num) return mid\n            \n            if (arr[mid] < num) {\n                left = mid + 1\n            } else {\n                right = mid\n            }\n        }\n        return left\n    }\n    \n    let result = [nums[0]]\n    \n    for (let i = 1; i < nums.length; i++) {\n        let num = nums[i]\n        if (num > result[result.length - 1]) {\n            result.push(num)  \n        } else {\n            let j = binarySearch(result, num)\n            result[j] = num\n        } \n    }\n    return result.length\n};\n\n// const lengthOfLIS = (nums) => {\n//   let sub = [nums[0]]\n  \n//   for (let i = 1; i < nums.length; i++) {\n//       let num = nums[i]\n      \n//       if (num > sub[sub.length - 1]) {\n//           sub.push(num)\n//       } else {\n//           let j = 0\n          \n//           while (num > sub[j]) j++\n//           sub[j] = num\n//       }\n//   }\n    \n//     return sub.length\n// }","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-subsequence","has_notes":false}