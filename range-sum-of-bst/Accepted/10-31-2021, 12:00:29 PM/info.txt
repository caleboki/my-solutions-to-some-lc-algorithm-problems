{"id":579995532,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 7 months","timestamp":1635696029,"status":10,"status_display":"Accepted","runtime":"216 ms","url":"/submissions/detail/579995532/","is_pending":"Not Pending","title":"Range Sum of BST","memory":"69.3 MB","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @param {number} low\n * @param {number} high\n * @return {number}\n */\nvar rangeSumBST = function(root, low, high) {\n    let sum = 0\n    \n    const dfs = (node) => {\n        if (node.val >= low && node.val <= high) sum += node.val\n        if (node.left) dfs(node.left)\n        if (node.right) dfs(node.right)\n    }\n    \n    dfs(root)\n    return sum\n};","compare_result":"11111111111111111111111111111111111111111","title_slug":"range-sum-of-bst","has_notes":false}