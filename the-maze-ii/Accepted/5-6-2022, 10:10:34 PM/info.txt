{"id":694617779,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 1 month","timestamp":1651889434,"status":10,"status_display":"Accepted","runtime":"155 ms","url":"/submissions/detail/694617779/","is_pending":"Not Pending","title":"The Maze II","memory":"49.4 MB","code":"/**\n * @param {number[][]} maze\n * @param {number[]} start\n * @param {number[]} destination\n * @return {number}\n */\n\nconst shortestDistance = (maze, start, destination) => {\n    const directions = [[0, -1], [0, 1], [-1, 0], [1, 0]]\n    const visited = new Map()\n    \n    const N = maze.length, M = maze[0].length\n    const queue = [[start[0], start[1], 0]]\n    \n    const result = []\n    \n    while (queue.length) {\n        const [row, col, posIdx] = queue.shift()\n        \n        for (let [x, y] of directions) {\n            let [r, c, pos] = [row, col, posIdx] //copy, so as not to modify original above\n            \n            while (r >= 0 && r < N && c >= 0 && c < M && maze[r][c] !== 1 ) {\n                r += x\n                c += y\n                pos++\n            }\n            \n            r -= x\n            c -= y\n            pos--\n            \n            if (maze[r][c] === 1) continue\n            \n            if (visited.has(`r${r}+c${c}`) && visited.get(`r${r}+c${c}`) <= pos) {\n                continue\n            }\n            \n            visited.set(`r${r}+c${c}`, pos)\n            \n            \n            if (r === destination[0] && c === destination[1]) {\n                result.push(pos)\n                break\n            }\n            queue.push([r, c, pos])\n        }\n    }\n    \n    if (result.length) return Math.min(...result)\n    return -1\n}\n\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"the-maze-ii","has_notes":false}