{"id":731192247,"lang":"javascript","lang_name":"JavaScript","time":"12Â months","timestamp":1656189388,"status":10,"status_display":"Accepted","runtime":"117 ms","url":"/submissions/detail/731192247/","is_pending":"Not Pending","title":"Palindromic Substrings","memory":"42.9 MB","code":"/**\n * @param {string} s\n * @return {number}\n */\n// var countSubstrings = function(s) {\n    \n//     const countPalindromesAroundCenter = (ss, low, high) => {\n//         let ans = 0\n        \n//         while (low >= 0 && high < ss.length) {\n//             if (ss[low] !== ss[high]) break\n//             low--\n//             high++\n            \n//             ans++\n            \n//         }\n//         return ans\n        \n//     } \n    \n//     let ans = 0\n\n//     for (let i = 0; i < s.length; i++) {\n//         ans += countPalindromesAroundCenter(s, i, i)\n//         ans += countPalindromesAroundCenter(s, i, i+1)\n\n//     }\n//     return ans\n// };\n\nconst countSubstrings = (s) => {\n    let count = 0\n    \n    const traverse = (start, end) => {\n        while (start >= 0 && end < s.length && s[start] === s[end]) {\n            count++\n            start--\n            end++\n        }\n    }\n    \n    for (let i = 0; i < s.length; i++) {\n        traverse(i, i)\n        traverse(i, i+1)\n    }\n    \n    return count\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"palindromic-substrings","has_notes":false}