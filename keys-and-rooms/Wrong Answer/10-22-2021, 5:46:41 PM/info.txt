{"id":575577574,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 8 months","timestamp":1634939201,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/575577574/","is_pending":"Not Pending","title":"Keys and Rooms","memory":"N/A","code":"/**\n * @param {number[][]} rooms\n * @return {boolean}\n */\n// var canVisitAllRooms = function(rooms) {\n//     let keys = new Set(rooms[0])\n    \n//     for (let i = 1; i < rooms.length; i++) {\n        \n//         if (rooms[i].length === 0) continue\n//         if (!keys.has(i)) return false\n        \n//         keys.add(...rooms[i])\n//         console.log(keys)\n//     }\n    \n//     return true \n// };\n\n\nvar canVisitAllRooms = function(rooms) {\n    \n   let visited = new Set()\n   visited.add(0)\n    \n    let roomMap = new Map()\n    \n    for (room in rooms) {\n        roomMap.set(room, rooms[room])\n    }\n   \n    let stack = ['0']\n    \n    while (stack.length) {\n        let keys = roomMap.get(stack.pop())\n        if (keys) {\n            \n            for (let key of keys) {\n                if (!visited.has(key.toString())) {\n                    visited.add(key.toString())\n                    stack.push(key.toString())\n                }\n\n            }\n            \n        }\n        \n    }\n    \n    return rooms.length === visited.size\n    \n};","compare_result":"10111111111111111111111111111111111111111111111111111111111111111111","title_slug":"keys-and-rooms","has_notes":false}