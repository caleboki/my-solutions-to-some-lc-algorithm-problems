{"id":935376387,"lang":"javascript","lang_name":"JavaScript","time":"2Â months","timestamp":1681754945,"status":10,"status_display":"Accepted","runtime":"240 ms","url":"/submissions/detail/935376387/","is_pending":"Not Pending","title":"Count Submatrices With All Ones","memory":"44.9 MB","code":"/**\n * @param {number[][]} mat\n * @return {number}\n */\nconst numSubmat = (mat) => {\n  if (mat.length === 0) return 0;\n\n  let rows = mat.length, cols = mat[0].length, count = 0;\n\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      if (mat[i][j] === 0) continue;\n      let width = Infinity;\n      for (let k = i; k < rows && mat[k][j] === 1; k++) {\n        width = Math.min(width, getContiguousOnes(mat[k], j));\n        count += width;\n      }\n    }\n  }\n  return count;\n};\n\n//Get number of contiguous ones in a row\nconst getContiguousOnes = (row, start) => {\n  let count = 0;\n  for (let j = start; j < row.length && row[j] === 1; j++) {\n    count++;\n  }\n  return count;\n};\n\n\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-submatrices-with-all-ones","has_notes":false}