{"id":514003953,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 12 months","timestamp":1624811278,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/514003953/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nvar minDepth = function(root) {\n    if (root === null) return 0\n    \n    if (root.left === null && root.right === null) return 1\n    \n    let min = Infinity\n    \n    if (root.left !== null) min = Math.min(minDepth(root.left), min)\n    if (root.right !== null) min = Math.min(minDepth(root.left), min)\n    \n    return min + 1\n};","compare_result":"1011101011101000100001011000100010001001011111110011","title_slug":"minimum-depth-of-binary-tree","has_notes":false}