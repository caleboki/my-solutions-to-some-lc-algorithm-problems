{"id":580289163,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 7 months","timestamp":1635743002,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/580289163/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nvar diameterOfBinaryTree = function(root) {\n    let nodeValues = []\n    \n    const dfs = (node) => {\n        if (!node) return\n        nodeValues.push(node.val)\n        dfs(node.left)\n        dfs(node.right)\n    }\n    \n    dfs(root)\n    \n    if (nodeValues.length === 1) return 0\n    if (nodeValues.length % 2 === 0) return nodeValues.length/2\n    return Math.ceil(nodeValues.length/2)\n    \n};","compare_result":"11111111100100000001000001100011100100100000100000001101101001000001111101000000000000100000001000100000","title_slug":"diameter-of-binary-tree","has_notes":false}