{"id":534989162,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 10 months","timestamp":1628390085,"status":10,"status_display":"Accepted","runtime":"159 ms","url":"/submissions/detail/534989162/","is_pending":"Not Pending","title":"Flatten Nested List Iterator","memory":"49.9 MB","code":"/**\n * // This is the interface that allows for creating nested lists.\n * // You should not implement it, or speculate about its implementation\n * function NestedInteger() {\n *\n *     Return true if this NestedInteger holds a single integer, rather than a nested list.\n *     @return {boolean}\n *     this.isInteger = function() {\n *         ...\n *     };\n *\n *     Return the single integer that this NestedInteger holds, if it holds a single integer\n *     Return null if this NestedInteger holds a nested list\n *     @return {integer}\n *     this.getInteger = function() {\n *         ...\n *     };\n *\n *     Return the nested list that this NestedInteger holds, if it holds a nested list\n *     Return null if this NestedInteger holds a single integer\n *     @return {NestedInteger[]}\n *     this.getList = function() {\n *         ...\n *     };\n * };\n */\n/**\n * @constructor\n * @param {NestedInteger[]} nestedList\n */\nvar NestedIterator = function(nestedList) {\n    this.queue = flatten(nestedList)\n};\n\n\n/**\n * @this NestedIterator\n * @returns {boolean}\n */\nNestedIterator.prototype.hasNext = function() {\n   return this.queue.length !== 0\n\n};\n\n/**\n * @this NestedIterator\n * @returns {integer}\n */\nNestedIterator.prototype.next = function() {\n    return this.queue.shift()\n};\n\nfunction flatten(arr, result = []){\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i].isInteger()) {\n            result.push(arr[i].getInteger())\n        } else {\n            flatten(arr[i].getList(), result)\n        }\n    }\n    return result\n    \n}\n\n/**\n * Your NestedIterator will be called like this:\n * var i = new NestedIterator(nestedList), a = [];\n * while (i.hasNext()) a.push(i.next());\n*/","compare_result":"1111111111111111111111111111111111111111111","title_slug":"flatten-nested-list-iterator","has_notes":false}