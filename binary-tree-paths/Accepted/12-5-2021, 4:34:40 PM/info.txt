{"id":597490022,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 6 months","timestamp":1638740080,"status":10,"status_display":"Accepted","runtime":"72 ms","url":"/submissions/detail/597490022/","is_pending":"Not Pending","title":"Binary Tree Paths","memory":"40.4 MB","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {string[]}\n */\nvar binaryTreePaths = function(root) {\n    let strings = []\n    \n    const dfs = (node, s) => {\n        if (!node) return\n        \n        s += \"->\" + node.val\n        //remove the first -> that was attached to the root\n\t    if (!node.left && !node.right) strings.push(s.substring(2))\n        \n        if (node.left) dfs(node.left, s)\n        if (node.right) dfs(node.right, s)\n    }\n    dfs(root, '')\n    \n    return strings\n    \n    \n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-paths","has_notes":false}