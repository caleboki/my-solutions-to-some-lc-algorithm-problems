{"id":574752167,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 8 months","timestamp":1634798468,"status":10,"status_display":"Accepted","runtime":"109 ms","url":"/submissions/detail/574752167/","is_pending":"Not Pending","title":"Implement Queue using Stacks","memory":"38.2 MB","code":"\n// var MyQueue = function() {\n    \n// };\n\n// /** \n//  * @param {number} x\n//  * @return {void}\n//  */\n// MyQueue.prototype.push = function(x) {\n    \n// };\n\n// /**\n//  * @return {number}\n//  */\n// MyQueue.prototype.pop = function() {\n    \n// };\n\n// /**\n//  * @return {number}\n//  */\n// MyQueue.prototype.peek = function() {\n    \n// };\n\n// /**\n//  * @return {boolean}\n//  */\n// MyQueue.prototype.empty = function() {\n    \n// };\n\n/** \n * Your MyQueue object will be instantiated and called as such:\n * var obj = new MyQueue()\n * obj.push(x)\n * var param_2 = obj.pop()\n * var param_3 = obj.peek()\n * var param_4 = obj.empty()\n */\n\nclass MyQueue {\n    \n    constructor() {\n        this.data = []\n    }\n    \n    push(x) {\n        this.data.push(x)\n    }\n    \n    pop(x) {\n        return this.data.shift()\n    }\n    \n    peek() {\n        return this.data[0]\n    }\n    \n    empty() {\n        return this.data.length === 0\n    }\n    \n    \n}","compare_result":"111111111111111111111","title_slug":"implement-queue-using-stacks","has_notes":false}