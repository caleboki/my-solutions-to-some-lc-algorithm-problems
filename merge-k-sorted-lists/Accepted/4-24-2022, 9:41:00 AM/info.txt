{"id":686622930,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 1 month","timestamp":1650807660,"status":10,"status_display":"Accepted","runtime":"111 ms","url":"/submissions/detail/686622930/","is_pending":"Not Pending","title":"Merge k Sorted Lists","memory":"48.7 MB","code":"/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode[]} lists\n * @return {ListNode}\n */\nvar mergeKLists = function(lists) {\n    \n    let arrList = []\n    \n    const listToArray = (list) => {\n        let current = list\n        while (current) {\n            arrList.push(current.val)\n            current = current.next\n        }\n        \n    }\n    \n    for (let list of lists) listToArray(list)\n    arrList.sort((a, b) => a-b)\n    \n    let head = null, ln = null\n    \n    for (let num of arrList) {\n        if (head === null) {\n            head = new ListNode(num)\n            ln = head\n        } else {\n            ln.next = new ListNode(num)\n            ln = ln.next\n        }\n    }\n    \n    return head\n    \n    \n    \n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-k-sorted-lists","has_notes":false}