{"id":686789239,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 1 month","timestamp":1650827688,"status":10,"status_display":"Accepted","runtime":"566 ms","url":"/submissions/detail/686789239/","is_pending":"Not Pending","title":"Merge k Sorted Lists","memory":"48 MB","code":"/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode[]} lists\n * @return {ListNode}\n */\n// var mergeKLists = function(lists) {\n//     let arrList = []\n    \n//     const listToArray = (list) => {\n//         let current = list\n//         while (current) {\n//             arrList.push(current.val)\n//             current = current.next\n//         }\n//     }\n    \n//     for (let list of lists) listToArray(list)\n//     arrList.sort((a, b) => a-b)\n    \n//     let head = null, ln = null\n    \n//     for (let num of arrList) {\n//         if (head === null) {\n//             head = new ListNode(num)\n//             ln = head\n//         } else {\n//             ln.next = new ListNode(num)\n//             ln = ln.next\n//         }\n//     }\n//     return head\n// };\n\n\nvar mergeKLists = function(lists) {\n    if (lists.length === 0) return null\n    \n    let l1 = lists[0]\n    \n    const mergeTwoLists = function(l1, l2) {\n        if (!l1 || !l2) return l1 || l2\n\n        if (l1.val < l2.val) {\n            l1.next = mergeTwoLists(l1.next, l2) \n            return l1 \n        } else {\n            l2.next = mergeTwoLists(l1, l2.next) \n            return l2 \n        } \n    };\n    \n    for (let i = 1; i < lists.length; i++) {\n        let l2 = lists[i]\n        l1 = mergeTwoLists(l1, l2)\n    }\n    \n    return l1\n};\n\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-k-sorted-lists","has_notes":false}