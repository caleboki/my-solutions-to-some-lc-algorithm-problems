{"id":691071889,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 1 month","timestamp":1651426927,"status":10,"status_display":"Accepted","runtime":"126 ms","url":"/submissions/detail/691071889/","is_pending":"Not Pending","title":"Reconstruct Itinerary","memory":"48.4 MB","code":"/**\n * @param {string[][]} tickets\n * @return {string[]}\n */\nvar findItinerary = function(tickets) {\n    \n    tickets.sort()\n    \n    const buildGraph = (edges) => {\n        const graph = {}\n        \n        for (let edge of edges) {\n            if (!(edge[0] in graph)) graph[edge[0]] = []\n            if (!(edge[1] in graph)) graph[edge[1]] = []\n            \n            graph[edge[0]].push(edge[1])\n            //graph[edge[1]].push(edge[0])\n        }\n        \n        return graph\n    }\n    \n    let graph = buildGraph(tickets), res = []\n    \n    const dfs = (node) => {\n        let src = graph[node]\n        \n        while (src.length) {\n            dfs(src.shift())\n        }\n        res.unshift(node)\n    }\n    \n    \n    dfs('JFK')\n    return res\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"reconstruct-itinerary","has_notes":false}