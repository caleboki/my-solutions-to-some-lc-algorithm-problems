{"id":786649054,"lang":"javascript","lang_name":"JavaScript","time":"9 months, 3 weeks","timestamp":1661808061,"status":10,"status_display":"Accepted","runtime":"194 ms","url":"/submissions/detail/786649054/","is_pending":"Not Pending","title":"Reconstruct Itinerary","memory":"48.1 MB","code":"/**\n * @param {string[][]} tickets\n * @return {string[]}\n */\nvar findItinerary = function(tickets) {\n    tickets.sort()\n    \n    const buildGraph = (edges) => {\n        const graph = {}\n        \n        for (let edge of edges) {\n            if (!(edge[0] in graph)) graph[edge[0]] = []\n            if (!(edge[1] in graph)) graph[edge[1]] = []\n            \n            graph[edge[0]].push(edge[1])\n            //graph[edge[1]].push(edge[0])\n        }\n        return graph\n    }\n    \n    let graph = buildGraph(tickets), result = []\n    \n    const dfs = (node) => {\n        const destinations = graph[node]\n        \n        while (destinations.length) {\n            dfs(destinations.shift())\n        }\n        result.unshift(node)\n    }\n    \n    dfs('JFK')\n    return result\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"reconstruct-itinerary","has_notes":false}