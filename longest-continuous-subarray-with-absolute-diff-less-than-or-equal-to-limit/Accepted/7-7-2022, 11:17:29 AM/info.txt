{"id":741029090,"lang":"javascript","lang_name":"JavaScript","time":"11 months, 2 weeks","timestamp":1657207049,"status":10,"status_display":"Accepted","runtime":"163 ms","url":"/submissions/detail/741029090/","is_pending":"Not Pending","title":"Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit","memory":"55.7 MB","code":"/**\n * @param {number[]} nums\n * @param {number} limit\n * @return {number}\n */\nconst longestSubarray = (nums, limit) => {\n    let maxQ = [], minQ = [], start = 0, size = 0\n    \n    for (let i = 0; i < nums.length; i++) {\n        \n        while (maxQ.length && maxQ[maxQ.length - 1] < nums[i]) {\n            maxQ.pop()\n        }\n        \n        while (minQ.length && minQ[minQ.length - 1] > nums[i]) {\n            minQ.pop()\n        }\n        \n        minQ.push(nums[i])\n        maxQ.push(nums[i])\n        \n        if (maxQ[0] - minQ[0] > limit) {\n            if (nums[start] === maxQ[0]) maxQ.shift()\n            if (nums[start] === minQ[0]) minQ.shift()\n            start++\n        }\n    \n        size = Math.max(size, i - start + 1)\n    }\n    return size\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit","has_notes":false}