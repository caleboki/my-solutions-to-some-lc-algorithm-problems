{"id":562064293,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 8 months","timestamp":1632783293,"status":10,"status_display":"Accepted","runtime":"96 ms","url":"/submissions/detail/562064293/","is_pending":"Not Pending","title":"3Sum Smaller","memory":"40.4 MB","code":"/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number}\n */\n\n//https://leetcode.com/problems/3sum-smaller/solution/\n//Two pointer solution\n\nvar threeSumSmaller = function(nums, target) {\n    nums = nums.sort((a, b) => {\n        return (a-b)\n    })\n    \n    let sum = 0\n    \n    const twoSumSmaller = (nums, startIndex, target) => {\n        let sum = 0\n        let left = startIndex, right = nums.length-1\n        \n        while (left < right) {\n            if (nums[left] + nums[right] < target) {\n                sum += right - left\n                left++\n            } else {\n                right--\n            }\n        }\n        return sum\n    }\n    \n    for (let i = 0; i < nums.length - 2; i++) {\n        sum += twoSumSmaller(nums, i+1, target-nums[i])\n    }\n    \n    return sum\n    \n    \n\n    \n    \n    \n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"3sum-smaller","has_notes":false}