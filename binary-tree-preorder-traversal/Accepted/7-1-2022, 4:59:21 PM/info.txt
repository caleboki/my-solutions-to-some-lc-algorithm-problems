{"id":736141458,"lang":"javascript","lang_name":"JavaScript","time":"11 months, 3 weeks","timestamp":1656709161,"status":10,"status_display":"Accepted","runtime":"61 ms","url":"/submissions/detail/736141458/","is_pending":"Not Pending","title":"Binary Tree Preorder Traversal","memory":"42 MB","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number[]}\n */\n//Preorder: Root, Left, Right\n// var preorderTraversal = function(root) {\n//     const nodeValues = []\n    \n//     const dfs = (node) => {\n//         if (!node) return\n        \n//         nodeValues.push(node.val)\n//         dfs(node.left)\n//         dfs(node.right)\n//     }\n    \n//     dfs(root)\n//     return nodeValues\n// };\n\n// const preorderTraversal = (root, result = []) => {\n//     if (!root) return result \n//     result.push(root.val, ...preorderTraversal(root.left), ...preorderTraversal(root.right))\n//     return result\n// }\n\nconst preorderTraversal = (root, result = []) => {\n    if (!root) return result\n    \n    let stack = [root]\n    while (stack.length) {\n        let current = stack.pop()\n        result.push(current.val)\n        if (current.right) stack.push(current.right)\n        if (current.left) stack.push(current.left)\n        \n    }\n\n    return result\n}\n\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-preorder-traversal","has_notes":false}