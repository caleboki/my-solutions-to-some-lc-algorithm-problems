{"id":558743608,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 9 months","timestamp":1632247280,"status":10,"status_display":"Accepted","runtime":"76 ms","url":"/submissions/detail/558743608/","is_pending":"Not Pending","title":"Binary Tree Preorder Traversal","memory":"38.9 MB","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number[]}\n */\n//Postorder: Root, Left, Right\nvar preorderTraversal = function(root) {\n    const nodeValues = []\n    \n    const dfs = (node) => {\n        if (!node) return\n        \n        nodeValues.push(node.val)\n        dfs(node.left)\n        dfs(node.right)\n    }\n    \n    dfs(root)\n    return nodeValues\n    \n    \n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-preorder-traversal","has_notes":false}