{"id":674055657,"lang":"javascript","lang_name":"JavaScript","time":"1Â year, 2Â months","timestamp":1649127127,"status":10,"status_display":"Accepted","runtime":"134 ms","url":"/submissions/detail/674055657/","is_pending":"Not Pending","title":"Combination Sum","memory":"48.3 MB","code":"/**\n * @param {number[]} candidates\n * @param {number} target\n * @return {number[][]}\n */\n\n\nvar combinationSum = function(candidates, target) {\n    \n    const helper = (tar, index = 0) => {\n        if (tar < 0) return []\n        \n        const result = []\n        \n        for (let i = index; i < candidates.length; i++) {\n            if (tar === candidates[i]) result.push([candidates[i]])\n            \n            const rem = tar-candidates[i]\n            const paths = helper(rem, i)\n            \n            if (paths.length) result.push(...paths.map(p => [candidates[i], ...p]))\n            \n        }\n        \n        return result\n    }\n    \n    return helper(target)\n};\n\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum","has_notes":false}