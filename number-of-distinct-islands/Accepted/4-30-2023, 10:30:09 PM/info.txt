{"id":942370262,"lang":"javascript","lang_name":"JavaScript","time":"1 month, 3 weeks","timestamp":1682908209,"status":10,"status_display":"Accepted","runtime":"65 ms","url":"/submissions/detail/942370262/","is_pending":"Not Pending","title":"Number of Distinct Islands","memory":"47.2 MB","code":"/**\n * @param {number[][]} grid\n * @return {number}\n */\nvar numDistinctIslands = function(grid) {\n    if (grid.length === 0) return 0\n    \n    let rows = grid.length, cols = grid[0].length, isLands = new Set()\n    \n    const dfs = (grid, rows, cols, i, j, dir = '') => {\n        if (i < 0 || i >= rows || j < 0 || j >= cols || grid[i][j] !== 1) return 'O'\n        \n        grid[i][j] = 0\n        \n        let right = dfs(grid, rows, cols, i+1, j, 'R')\n        let left = dfs(grid, rows, cols, i-1, j, 'L')\n        let up = dfs(grid, rows, cols, i, j+1, 'U')\n        let down = dfs(grid, rows, cols, i, j-1, 'D')\n        \n        return dir + right + left + up + down\n    }\n    \n    for (let i = 0; i < rows; i++) {\n        for (let j = 0; j < cols; j++) {\n            if (grid[i][j] === 1) isLands.add(dfs(grid, rows, cols, i, j))\n        }\n    }\n    \n    return isLands.size\n};","compare_resulttitle_slug":"number-of-distinct-islands","has_notes":false}