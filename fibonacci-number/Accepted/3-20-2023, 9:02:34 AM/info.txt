{"id":918764120,"lang":"javascript","lang_name":"JavaScript","time":"3Â months","timestamp":1679317354,"status":10,"status_display":"Accepted","runtime":"46 ms","url":"/submissions/detail/918764120/","is_pending":"Not Pending","title":"Fibonacci Number","memory":"41.5 MB","code":"/**\n * @param {number} n\n * @return {number}\n */\n// var fib = function(n, memo = {}) {\n//     if (n in memo) return memo[n]\n//     if (n <= 0) return 0\n//     if (n <= 2) return 1\n    \n//     memo[n] = fib(n-1, memo) + fib(n-2, memo)\n//     return memo[n] \n// };\n\n// var fib = function(n) {\n    \n//     if (n <= 0) return 0\n//     if (n <= 2) return 1\n    \n//     return fib(n-1) + fib(n-2)  \n// };\n\nconst fib = (n, memo = new Map()) => {\n    if (memo.has(n)) return memo.get(n)\n    \n    if (n <= 0) return 0\n    if (n <= 2) return 1\n\n    memo.set(n, fib(n-1, memo) + fib(n-2, memo))\n    return memo.get(n)\n}","compare_result":"1111111111111111111111111111111","title_slug":"fibonacci-number","has_notes":false}