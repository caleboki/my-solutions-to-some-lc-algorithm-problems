{"id":533012653,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 10 months","timestamp":1628053908,"status":10,"status_display":"Accepted","runtime":"84 ms","url":"/submissions/detail/533012653/","is_pending":"Not Pending","title":"Search in a Binary Search Tree","memory":"45.5 MB","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @param {number} val\n * @return {TreeNode}\n */\nvar searchBST = function(root, val) {\n   \n    if (root === null || root.val === val) return root\n    \n    if (root.val < val) {\n        return root.right = searchBST(root.right, val)\n    } else if (root.val > val) {\n        return root.left = searchBST(root.left, val)\n    } else {\n        return root\n    }\n\n    \n};","compare_result":"111111111111111111111111111111111111","title_slug":"search-in-a-binary-search-tree","has_notes":false}