{"id":769713758,"lang":"javascript","lang_name":"JavaScript","time":"10 months, 2 weeks","timestamp":1660082311,"status":10,"status_display":"Accepted","runtime":"447 ms","url":"/submissions/detail/769713758/","is_pending":"Not Pending","title":"Maximum Length of Subarray With Positive Product","memory":"50.8 MB","code":"/**\n * @param {number[]} nums\n * @return {number}\n */\n\nconst getMaxLen = (nums) => {\n    let max = 0\n    \n    for (let i = 0; i < nums.length; i++) {\n        //if remainder of array is less than current max, we have found the maximum\n        if (nums.length - i <= max) return max\n        \n        if (nums[i] !== 0) {\n            let neg = nums[i] < 0 ? 1 : 0\n            max = Math.max(max, nums[i] < 0 ? 0 : 1)\n            \n            for (let j = i + 1; j < nums.length; j++) {\n                if (nums[j] < 0) {\n                    neg++\n                } else if (nums[j] === 0) break\n                \n                if (neg % 2 === 0) max = Math.max(max, j - i + 1)\n            }\n            \n        }\n    }\n    return max\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-length-of-subarray-with-positive-product","has_notes":false}