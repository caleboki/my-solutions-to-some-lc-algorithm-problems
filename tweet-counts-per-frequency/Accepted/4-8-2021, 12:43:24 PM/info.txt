{"id":478176667,"lang":"javascript","lang_name":"JavaScript","time":"2 years, 2 months","timestamp":1617900204,"status":10,"status_display":"Accepted","runtime":"368 ms","url":"/submissions/detail/478176667/","is_pending":"Not Pending","title":"Tweet Counts Per Frequency","memory":"52.8 MB","code":"class TweetCounts {\n    \n    constructor () {\n        this.storage = [];\n        \n        this.freqInterval = {\n            minute: 60,\n            hour: 3600,\n            day: 86400\n        }\n    }\n    \n    recordTweet(tweetName,time) {\n        this.storage.push([tweetName, time]);\n         \n    }\n    \n    getTweetCountsPerFrequency(freq,tweetName,startTime,endTime) {\n        \n        let tweets = this.storage.filter(record => record[0] === tweetName);\n        \n        if (tweets.length === 0) return [];\n        const interval = this.freqInterval[freq];\n        \n        let roundedInterval = Math.ceil((endTime - startTime + 1) / interval)\n        const cnt = new Uint16Array(roundedInterval);\n        //console.log(cnt)\n        \n        \n        for (const a of tweets) {\n            if (a[1] > endTime || a[1] < startTime) continue;\n            let tweetInterval = (a[1] - startTime + 1)/interval;\n            \n            ++cnt[Math.floor(tweetInterval)];\n        } \n        \n        return cnt;\n    }\n    \n    \n}\n\n\n/** \n * Your TweetCounts object will be instantiated and called as such:\n * var obj = new TweetCounts()\n * obj.recordTweet(tweetName,time)\n * var param_2 = obj.getTweetCountsPerFrequency(freq,tweetName,startTime,endTime)\n */","compare_result":"1111111111111111111111","title_slug":"tweet-counts-per-frequency","has_notes":false}