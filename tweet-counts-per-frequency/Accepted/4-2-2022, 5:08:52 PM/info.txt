{"id":672500557,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 2 months","timestamp":1648933732,"status":10,"status_display":"Accepted","runtime":"184 ms","url":"/submissions/detail/672500557/","is_pending":"Not Pending","title":"Tweet Counts Per Frequency","memory":"56.2 MB","code":"// class TweetCounts {\n\n//     constructor () {\n//         this.storage = [];\n        \n//         this.freqInterval = {\n//             minute: 60,\n//             hour: 3600,\n//             day: 86400\n//         }\n//     }\n    \n//     recordTweet(tweetName,time) {\n//         this.storage.push([tweetName, time]);  \n//     }\n    \n//     getTweetCountsPerFrequency(freq,tweetName,startTime,endTime) {\n        \n//         let tweets = this.storage.filter(record => record[0] === tweetName);\n        \n//         if (tweets.length === 0) return [];\n//         const interval = this.freqInterval[freq];\n        \n//         let roundedInterval = Math.ceil((endTime - startTime + 1) / interval)\n//         const cnt = new Uint16Array(roundedInterval);     \n        \n//         for (const a of tweets) {\n//             if (a[1] > endTime || a[1] < startTime) continue;\n//             let tweetInterval = (a[1] - startTime + 1)/interval;\n            \n//             cnt[Math.floor(tweetInterval)]++;\n//         }  \n//         return cnt;\n//     } \n// }\n\nclass TweetCounts {  \n    constructor () {\n      this.data = new Map();\n\n      this.freqInterval = {\n        minute: 60,\n        hour: 3600,\n        day: 86400\n      }\n    }\n  \n  recordTweet(tweetName, time) {\n    if (!this.data.has(tweetName)) this.data.set(tweetName, []);\n    this.data.get(tweetName).push(time);\n  }\n  \n  getTweetCountsPerFrequency(freq, tweetName, startTime, endTime) {\n    if (!this.data.has(tweetName)) return [];\n    this.data.get(tweetName);\n    const interval = this.freqInterval[freq];\n    const roundedInterval = Math.ceil((endTime - startTime + 1) / interval)\n    const count = new Uint16Array(roundedInterval);\n    \n    for (const time of this.data.get(tweetName)) {\n      if (time > endTime || time < startTime) continue;\n      const tweetInterval = (time - startTime + 1)/interval;\n      count[Math.floor(tweetInterval)]++;\n    }\n    return count;\n  }\n}\n\n\n/** \n * Your TweetCounts object will be instantiated and called as such:\n * var obj = new TweetCounts()\n * obj.recordTweet(tweetName,time)\n * var param_2 = obj.getTweetCountsPerFrequency(freq,tweetName,startTime,endTime)\n */","compare_result":"1111111111111111111111","title_slug":"tweet-counts-per-frequency","has_notes":false}