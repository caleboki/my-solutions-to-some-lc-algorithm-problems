{"id":802628799,"lang":"javascript","lang_name":"JavaScript","time":"9 months, 1 week","timestamp":1663478499,"status":10,"status_display":"Accepted","runtime":"508 ms","url":"/submissions/detail/802628799/","is_pending":"Not Pending","title":"Distinct Numbers in Each Subarray","memory":"90.8 MB","code":"/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number[]}\n */\n// var distinctNumbers = function(nums, k) {\n//     let result = [], set = new Set()\n    \n//     for (let i = 0; i < nums.length - k+1; i++) {\n        \n//         let window = i + k\n        \n//         for (let j = i; j < window; j++) {\n//             set.add(nums[j])\n//         }\n        \n//         result.push(set.size)\n//         set = new Set()\n        \n//     }\n//     return result\n// };\n\nconst distinctNumbers = (nums, k) => {\n    let result = [], j = 0, map = new Map()\n    \n    for (let i = 0; i < nums.length + 1; i++) {\n        if (i - j === k) {\n            result.push(map.size)\n            \n            if (map.get(nums[j]) === 1) {\n                map.delete(nums[j])\n            } else {\n                map.set(nums[j], map.get(nums[j]) - 1)\n            }\n            j++\n        }\n        \n        if (!map.has(nums[i])) map.set(nums[i], 0)\n        map.set(nums[i], map.get(nums[i]) + 1)\n        \n    }\n    return result\n}\n\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"distinct-numbers-in-each-subarray","has_notes":false}