{"id":568729621,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 8 months","timestamp":1633848100,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/568729621/","is_pending":"Not Pending","title":"Maximum Product of Three Numbers","memory":"N/A","code":"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maximumProduct = function(nums) {\n    nums.sort(function(a, b) {return b-a})\n    console.log(nums)\n    let positives = false, negatives = false\n    \n    const product = (arr) => {\n        let prod = 1\n    \n        for (let i = 0; i < 3; i++) {\n            prod = prod * arr[i]\n        }\n        \n        return prod\n    }\n    \n    for (num of nums) {\n        if (num < 0) negatives = true\n        if (num > 0) positives = true\n    }\n    \n    if (positives && negatives) {\n        \n       let i = 0, j = nums.length - 1, maxProd = [], ncount = 0\n       while (i <= j && maxProd.length !== 3) {\n           if (Math.abs(nums[j]) > Math.abs(nums[i]) && ncount < 2) {\n               maxProd.push(nums[j])\n               ncount++\n               j--\n           } else {\n               maxProd.push(nums[i])\n               i++\n           }\n           \n       }\n        \n        return product(maxProd)\n        \n    }\n    \n    return product(nums)\n};","compare_result":"11111111111110101111101111101111111111111111111111111111111110100111101111011111111111111111","title_slug":"maximum-product-of-three-numbers","has_notes":false}