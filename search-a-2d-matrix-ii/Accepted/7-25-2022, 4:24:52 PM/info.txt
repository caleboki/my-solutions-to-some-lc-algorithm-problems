{"id":756641926,"lang":"javascript","lang_name":"JavaScript","time":"11Â months","timestamp":1658780692,"status":10,"status_display":"Accepted","runtime":"3118 ms","url":"/submissions/detail/756641926/","is_pending":"Not Pending","title":"Search a 2D Matrix II","memory":"44.3 MB","code":"/**\n * @param {number[][]} matrix\n * @param {number} target\n * @return {boolean}\n */\nvar searchMatrix = function(matrix, target) {\n    if (matrix.length === 0) return false\n    \n    let rows = matrix.length, cols = matrix[0].length\n    \n    const binarySearch = (row, target) => {\n        let left = 0, right = row.length - 1\n        \n        while (left <= right) {\n            let mid = Math.floor((left + right)/2)\n \n            if (row[mid] === target) {\n                return true\n            } else if (row[mid] < target) {\n                left = mid + 1\n            } else {\n                right = mid - 1\n            }\n        }\n        return false\n        \n    }\n    \n    // for (let i = 0; i < rows; i++) {\n    //     for (let j = 0; j < cols; j++) {\n    //         //if (matrix[i][j] === target) return true\n    //         if (!binarySeary(matrix[i], target)) {\n    //             break\n    //         } else {\n    //             return true\n    //         }\n    //     }\n    // }\n    // return false\n    \n    \n    for (let i = 0; i < rows; i++) {\n        \n        if (binarySearch(matrix[i], target)) return true\n    }\n    \n    return false\n    \n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-a-2d-matrix-ii","has_notes":false}