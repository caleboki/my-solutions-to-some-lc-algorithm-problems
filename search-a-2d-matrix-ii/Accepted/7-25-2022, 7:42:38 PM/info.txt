{"id":756743372,"lang":"javascript","lang_name":"JavaScript","time":"11Â months","timestamp":1658792558,"status":10,"status_display":"Accepted","runtime":"591 ms","url":"/submissions/detail/756743372/","is_pending":"Not Pending","title":"Search a 2D Matrix II","memory":"44.9 MB","code":"/**\n * @param {number[][]} matrix\n * @param {number} target\n * @return {boolean}\n */\n// var searchMatrix = function(matrix, target) {\n//     if (matrix.length === 0) return false\n    \n//     let rows = matrix.length, cols = matrix[0].length\n    \n//     const binarySearch = (row, target) => {\n//         let left = 0, right = row.length - 1\n        \n//         while (left <= right) {\n//             let mid = Math.floor((left + right)/2)\n \n//             if (row[mid] === target) {\n//                 return true\n//             } else if (row[mid] < target) {\n//                 left = mid + 1\n//             } else {\n//                 right = mid - 1\n//             }\n//         }\n//         return false   \n//     }\n    \n//     for (let i = 0; i < rows; i++) {\n//         if (binarySearch(matrix[i], target)) return true\n//     }\n    \n//     return false\n// };\n\nconst searchMatrix = (matrix, target) => {\n    let row = matrix.length - 1, col = 0\n    \n    while (row >= 0 && col < matrix[0].length) {\n        if (matrix[row][col] > target) {\n           row-- \n        } else if (matrix[row][col] < target) {\n            col++ \n        } else {\n            return true\n        }\n    }\n    return false\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-a-2d-matrix-ii","has_notes":false}