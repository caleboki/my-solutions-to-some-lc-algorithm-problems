{"id":497657065,"lang":"javascript","lang_name":"JavaScript","time":"2Â years","timestamp":1621872643,"status":10,"status_display":"Accepted","runtime":"124 ms","url":"/submissions/detail/497657065/","is_pending":"Not Pending","title":"Intersection of Two Linked Lists","memory":"46.4 MB","code":"/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n\n/**\n * @param {ListNode} headA\n * @param {ListNode} headB\n * @return {ListNode}\n */\nvar getIntersectionNode = function(headA, headB) {\n   let visited = new Set()\n   \n   //traversing B and storing its nodes\n   while (headB !== null) {\n       visited.add(headB)\n       //move to next node\n       headB = headB.next  \n   }\n    \n    //traversing A and checking if current node exists in hash set\n    while (headA !== null) {\n        if (visited.has(headA)) {\n            return headA\n        } else {\n            headA = headA.next\n        }\n    }\n    return null\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"intersection-of-two-linked-lists","has_notes":false}