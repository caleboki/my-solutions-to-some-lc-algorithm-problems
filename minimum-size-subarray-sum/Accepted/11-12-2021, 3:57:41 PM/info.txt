{"id":586195764,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 7 months","timestamp":1636750661,"status":10,"status_display":"Accepted","runtime":"72 ms","url":"/submissions/detail/586195764/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"40.1 MB","code":"/**\n * @param {number} target\n * @param {number[]} nums\n * @return {number}\n */\nvar minSubArrayLen = function(target, nums) {\n    let sum = 0\n    let ans = Infinity\n    let left = 0\n    \n    for (let i = 0; i < nums.length; i++) {\n        sum += nums[i]\n        while(sum >= target) {\n            ans = Math.min(ans, i - left + 1)\n            sum -= nums[left]\n            left++\n        }\n    }\n    return (ans !== Infinity) ? ans : 0\n    \n    \n};","compare_result":"1111111111111111111","title_slug":"minimum-size-subarray-sum","has_notes":false}