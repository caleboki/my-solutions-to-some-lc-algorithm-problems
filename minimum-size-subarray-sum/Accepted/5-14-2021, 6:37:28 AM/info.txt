{"id":493005606,"lang":"javascript","lang_name":"JavaScript","time":"2 years, 1 month","timestamp":1620988648,"status":10,"status_display":"Accepted","runtime":"80 ms","url":"/submissions/detail/493005606/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"39.4 MB","code":"/**\n * @param {number} target\n * @param {number[]} nums\n * @return {number}\n */\nvar minSubArrayLen = function(target, nums) {\n    let sum = 0\n    let ans = Number.MAX_VALUE\n    let left = 0\n    \n    for (let i = 0; i < nums.length; i++) {\n        sum += nums[i]\n        while(sum >= target) {\n            ans = Math.min(ans, i+1-left)\n            sum -= nums[left++]\n        }\n    }\n    return (ans !== Number.MAX_VALUE) ? ans : 0\n    \n    \n};","compare_result":"1111111111111111111","title_slug":"minimum-size-subarray-sum","has_notes":false}