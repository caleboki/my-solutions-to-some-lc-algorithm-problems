{"id":932104457,"lang":"javascript","lang_name":"JavaScript","time":"2 months, 1 week","timestamp":1681241365,"status":10,"status_display":"Accepted","runtime":"108 ms","url":"/submissions/detail/932104457/","is_pending":"Not Pending","title":"Insertion Sort List","memory":"45.1 MB","code":"/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @return {ListNode}\n */\n// var insertionSortList = function(head) {\n    \n//     const getLength = (head) => {\n//         if (!head) return 0\n        \n//         let length = 0, current = head\n        \n//         while (current) {\n//             current = current.next\n//             length++\n//         }\n//         return length\n//     }\n    \n//     const getNode = (index) => {\n//         if (index < 0 || index >= this.len) return -1\n//         let current = head\n        \n//         for (let i = 0; i < index; i++) {\n//             current = current.next\n//         }\n//         return current\n//     }\n    \n//     const length = getLength(head)\n    \n//     const swapAdjacent = (index) => {\n        \n        \n//     }\n    \n//     for (let i = 1; i < length; i++) {\n//         let currentIndex = i\n//         while (currentIndex > 0 && getNode(i - 1).val > getNode(i).val) {\n//             swapAdjacent(currentIndex)\n            \n//         }\n        \n//     }\n    \n// };\n\nconst insertionSortList = (head) => {\n    const extractValues = (head) => {\n        let values = [], current = head\n    \n        while (current) {\n            values.push(current.val)\n            current = current.next\n        }\n        return values\n    }\n    \n    const sortList = (arr) => {\n        for (let i = 1; i < arr.length; i++) {\n            let currentIndex = i\n            while (currentIndex > 0 && arr[currentIndex - 1] > arr[currentIndex]) {\n                let temp = arr[currentIndex]\n                arr[currentIndex] = arr[currentIndex - 1]\n                arr[currentIndex - 1] = temp\n                currentIndex--\n            }\n        }\n        return arr\n    }\n    \n    const buildList = (arr) => {\n        arr = sortList(arr)\n        \n        let head = null, ln = null\n        \n        for (let i = 0; i < arr.length; i++) {\n            if (head === null) {\n                head = new ListNode(arr[i])\n                ln = head\n            } else {\n                ln.next = new ListNode(arr[i])\n                ln = ln.next\n            }\n        }\n        return head\n    }\n    \n    let values = extractValues(head)\n    \n    return buildList(values)\n}\n\n\n","compare_result":"1111111111111111111","title_slug":"insertion-sort-list","has_notes":false}