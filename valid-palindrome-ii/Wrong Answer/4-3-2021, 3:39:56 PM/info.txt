{"id":476038531,"lang":"javascript","lang_name":"JavaScript","time":"2 years, 2 months","timestamp":1617478796,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/476038531/","is_pending":"Not Pending","title":"Valid Palindrome II","memory":"N/A","code":"/**\n * @param {string} s\n * @return {boolean}\n */\nfunction validPalindrome (s) {\n    \n    if (isPalindrum(s)) return true;\n    \n    let map = {};\n    let oddCharacter = [];\n    //Frequency map\n    for (let i = 0; i < s.length; i++) {\n        if (map[s[i]] !== undefined) {\n          map[s[i]] +=1;\n        }\n        else {\n          map[s[i]] = 1;\n        }\n    }\n    \n    let oddFreq = Object.values(map).find(f => f % 2 > 0);\n    let itemKey = Object.keys(map).filter(f => map[f] === oddFreq);\n    let strIndex = s.indexOf(itemKey);\n    \n    //console.log(oddFreq)\n    console.log(itemKey)\n    \n    \n    s = s.replace(s[strIndex], \"\");\n    console.log(s)\n    if (isPalindrum(s)) return true;\n    return false;\n    \n\n};\n\nfunction isPalindrum(str) {\n  let letters = [];\n  let rword = \"\";\n  \n  for (let i = 0; i < str.length; i++) {\n    letters.push(str[i]);\n  }\n  \n  for (let i = 0; i < str.length; i++) {\n    rword += letters.pop();\n  }\n  \n  if (str === rword) return true;\n    \n  return false;\n  \n  \n  \n}\n\n","compare_result":"1011111101111111110111111010111111010111111100111111000110111111111110111111111111111011111110110111110010111111010111111010111110010111110010111111010111110010111110010111111110011110010111110010111110010111110010111110011111110010111110010111110010111110010111110010111110010111110010111110010111110110111110010111111110111110010111110010111110110111110010111110010111111010111110010111110010111110010111110010111110010111110010111110010111110010111110010111","title_slug":"valid-palindrome-ii","has_notes":false}