{"id":740323829,"lang":"javascript","lang_name":"JavaScript","time":"11 months, 3 weeks","timestamp":1657134676,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/740323829/","is_pending":"Not Pending","title":"Race Car","memory":"N/A","code":"/**\n * @param {number} target\n * @return {number}\n */\nvar racecar = function(target) {\n    //This problem suggest a bfs at it is use to find the shortest distance between two points\n    \n    let queue = [{moves: 0, position: 0, speed: 1}] //initial conditions\n    let visited = new Set()\n    \n    while (queue.length) {\n        let {moves, position, speed} = queue.shift()\n        \n        if (position === target) return moves\n        if (visited.has(position)) continue\n        visited.add(position)\n        //move foward\n        queue.push({moves: moves + 1, position: position + speed, speed: 2*speed})\n        \n        //if we have offshot target or in the wrong direction\n        if ((position + speed > target && speed > 0) || (position + speed < target && speed < 0)) {\n            queue.push({moves: moves + 1, position: position, speed: speed > 0 ? -1 : 1})\n        }\n        \n    }\n    \n};\n\n//Time and Space complexity:\n// This isn't a precise and formal answer but it will be something similar to time: O(2^N), space: O(N).\n\n// Time is like that because we (theoretically) switch down two decision paths for each N. In practice this figure is for a theoretical worst case which cannot actually be reached but I am not sure how to represent that unreachability using a mathematical formula - I think most interviewers would expect and accept O(2^N) here if they asked.\n\n// Space is like that because we are shrinking the stack at the same rate as we grow it and we reach the solution in a sensibly bounded time. Even if we were growing the stack faster than we shrink it though it would still be O(N), it would simply be a multiple of N. Lifehack for considering space complexity: it's exceptionally rare for space complexity to be anything other than O(1) or O(N).","compare_result":"1010001000000010000000000000000000000000000000000000000","title_slug":"race-car","has_notes":false}