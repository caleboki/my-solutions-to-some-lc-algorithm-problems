{"id":734694968,"lang":"javascript","lang_name":"JavaScript","time":"11 months, 3 weeks","timestamp":1656555034,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/734694968/","is_pending":"Not Pending","title":"Race Car","memory":"N/A","code":"/**\n * @param {number} target\n * @return {number}\n */\nvar racecar = function(target) {\n    //This problem suggest a bfs at it is use to find the shortest distance between two points\n    \n    let arr = [{moves: 0, position: 0, speed: 1}] //initial conditions\n    let best = Infinity\n    \n    while (arr.length) {\n        let {moves, position, speed} = arr.pop()\n        \n        if (position === target) best = Math.min(best, moves)\n        if (moves >= best) continue\n        \n        //move foward\n        arr.push({moves: moves + 1, position: position += speed, speed: 2*speed})\n        \n        //if we have offshot target or in the wrong direction\n        if ((position + speed > target && speed > 0) || (position + speed < target && speed < 0)) {\n            arr.push({moves: moves + 1, position: position, speed: speed > 0 ? -1 : 1})\n        }\n        \n    }\n    return best\n};\n","compare_result":"1010101000000010000000100000000000000001100001000000000","title_slug":"race-car","has_notes":false}