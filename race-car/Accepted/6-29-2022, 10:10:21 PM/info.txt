{"id":734694872,"lang":"javascript","lang_name":"JavaScript","time":"11 months, 3 weeks","timestamp":1656555021,"status":10,"status_display":"Accepted","runtime":"148 ms","url":"/submissions/detail/734694872/","is_pending":"Not Pending","title":"Race Car","memory":"44.5 MB","code":"/**\n * @param {number} target\n * @return {number}\n */\n// var racecar = function(target) {\n//     //This problem suggest a bfs at it is use to find the shortest distance between two points\n    \n//     let arr = [{moves: 0, position: 0, speed: 1}] //initial conditions\n//     let best = Infinity\n    \n//     while (arr.length) {\n//         let {moves, position, speed} = arr.pop()\n        \n//         if (position === target) best = Math.min(best, moves)\n//         if (moves >= best) continue\n        \n//         //move foward\n//         arr.push({moves: moves + 1, position: position += speed, speed: 2*speed})\n        \n//         //if we have offshot target or in the wrong direction\n//         if ((position + speed > target && speed > 0) || (position + speed < target && speed < 0)) {\n//             arr.push({moves: moves + 1, position: position, speed: speed > 0 ? -1 : 1})\n//         }\n        \n//     }\n//     return best\n// };\n\nvar racecar = function(target) {\n    let arr = [{moves: 0, pos: 0, spd: 1}];\n    let best = Infinity;\n    while (arr.length) {\n        let {moves, pos, spd} = arr.pop();\n        if (pos === target) best = Math.min(best, moves);\n        if (moves >= best) continue;\n\n        // Attempt to move forward\n        arr.push({moves: moves+1, pos: pos+spd, spd: 2*spd});\n\n        if ((pos+spd>target && spd>0) || \n            (pos+spd<target && spd<0)) {\n            // Reverse if we're moving in the wrong direction\n            arr.push({moves: moves+1, pos, spd: spd > 0 ? -1 : 1});\n        }\n    }  \n    return best;\n};","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"race-car","has_notes":false}