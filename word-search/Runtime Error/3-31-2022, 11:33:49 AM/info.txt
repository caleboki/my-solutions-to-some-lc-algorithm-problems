{"id":671056135,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 2 months","timestamp":1648740829,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/671056135/","is_pending":"Not Pending","title":"Word Search","memory":"N/A","code":"/**\n * @param {character[][]} board\n * @param {string} word\n * @return {boolean}\n */\n// var exist = function(board, word) {\n    \n//     let wordMap = new Map()\n    \n//     for (let w of word) {\n//         if (wordMap.has(w)) {\n//             wordMap.set(w, wordMap.get(w) + 1)\n//         } else {\n//             wordMap.set(w, 1)\n//         } \n//     }\n//     //console.log(wordMap)\n    \n//     let count = 0, rows = board.length\n    \n//     if (rows === 0) return 0\n    \n//     let cols = board[0].length\n    \n//     //traverse board\n//     for (let i = 0; i < rows; i++) {\n//         for (let j = 0; j < cols; j++) {\n            \n//             if (wordMap.has(board[i][j]) && wordMap.get(board[i][j]) > 0) {   \n//                 dfs(wordMap, board, i, j, rows, cols)\n                \n//                 //wordMap.set(board[i][j], wordMap.get(board[i][j])-1)\n//             }\n//         }\n//     }\n//     //console.log(wordMap)\n//     for (let [key, value] of wordMap) {\n//         if (value > 0) return false\n//     }\n//     return true\n    \n// };\n\n// function dfs(map, matrix, x, y, r, c) {\n//     //handling out of bound cases\n//     if (x < 0 || x >=r || y < 0 || y >=c || !map.has(matrix[x][y]) || map.get(matrix[x][y]) === 0) return\n    \n//     map.set(matrix[x][y], map.get(matrix[x][y])-1)\n//     matrix[x][y] = '!'\n    \n//     console.log(map)\n//     dfs(map, matrix, x+1, y, r, c)\n//     dfs(map, matrix, x-1, y, r, c)\n//     dfs(map, matrix, x, y+1, r, c)\n//     dfs(map, matrix, x, y-1, r, c)\n// }\n\n// var exist = function(board, word) {\n    \n//     let rows = board.length\n//     if (rows === 0) return 0\n//     let cols = board[0].length\n    \n//     const dfs = (x, y, i) => {\n//         if (word.length === i) return true\n//         if (x < 0 || x >= rows || board[x][y] !== word[i]) return false\n        \n//         board[x][y] = '!'\n        \n//         if (\n//             dfs(x+1, y, i+1) || \n//             dfs(x-1, y, i+1) || \n//             dfs(x, y+1, i+1) ||\n//             dfs(x, y-1, i+1)\n//         ) return true\n        \n//         board[x][y] = word[i] //???\n//     }\n    \n//     return false\n    \n// }\n\n\n\n","compare_result":"00000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"word-search","has_notes":false}