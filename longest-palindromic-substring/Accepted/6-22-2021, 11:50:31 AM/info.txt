{"id":511646857,"lang":"javascript","lang_name":"JavaScript","time":"2Â years","timestamp":1624377031,"status":10,"status_display":"Accepted","runtime":"100 ms","url":"/submissions/detail/511646857/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"41.9 MB","code":"/**\n * @param {string} s\n * @return {string}\n */\n// var longestPalindrome = function(s) {\n//     for (let j = s.length-1; j >= 0; j--) {\n//     let i = 0, k = j;\n//         while (k < s.length) {\n//             let substr = s.substring(i,k+1);\n//             if (isPalindrome(substr)) return substr;\n//             i++, k++; \n//             // slide the window to the right \n//             // while keeping the same length of the window\n//         }\n//     }\n//     return \"\"; // no palindromic substring exists\n// };\n\n// function isPalindrome(str) {\n//     let  l = 0, r = str.length-1;\n//     while (l < r) {\n//         if (str[l] !== str[r]) return false;\n//         l++, r--; \n//     }\n//     return true;\n// }\n\nvar longestPalindrome = function(s) {\n    \n    let ans = \"\";\n   \n    const traverse = (start, end)=>{\n        while(start >=0 && end < s.length && s[start] === s[end]){\n            if(ans.length < end - start + 1){\n                ans = s.substring(start, end+1);\n            }\n            start--;\n            end++;\n        }\n    }\n    \n    for(let i=0;i<s.length;i++){\n        traverse(i,i);\n        traverse(i, i+1);\n    }\n    return ans.length > 0 ? ans : s[0]\n    \n};\n\n\n\n\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-substring","has_notes":false}