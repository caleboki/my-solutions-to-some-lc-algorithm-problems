{"id":532397684,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 10 months","timestamp":1627956507,"status":10,"status_display":"Accepted","runtime":"116 ms","url":"/submissions/detail/532397684/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"45.7 MB","code":"/**\n * @param {string} s\n * @return {string}\n */\n// var longestPalindrome = function(s) {\n//     for (let j = s.length-1; j >= 0; j--) {\n//         let i = 0, k = j;\n            \n//             while (k < s.length) {\n//                 let substr = s.substring(i,k+1);\n                \n//                 if (isPalindrome(substr)) return substr;\n//                 i++, k++; \n//                 // slide the window to the right \n//                 // while keeping the same length of the window\n//             }\n            \n//         }\n//     return \"\"; // no palindromic substring exists\n// };\n\n// function isPalindrome(str) {\n//     let  l = 0, r = str.length-1;\n//     while (l < r) {\n//         if (str[l] !== str[r]) return false;\n//         l++, r--; \n//     }\n//     return true;\n// }\n\n// var longestPalindrome = function(s) {\n    \n//     let ans = \"\";\n   \n//     const traverse = (start, end)=>{\n//         while(start >=0 && end < s.length && s[start] === s[end]){\n//             if(ans.length < end - start + 1){\n//                 ans = s.substring(start, end+1);\n               \n//             }\n//             start--;\n//             end++;\n//         }\n//     }\n    \n//     for(let i=0;i<s.length;i++){\n//         traverse(i,i);\n//         traverse(i, i+1);\n//     }\n//     return ans.length > 0 ? ans : s[0]\n    \n// };\n\n// var longestPalindrome = function(s) {\n//     function isPal(i, j)\n//     {\n//         while(i < j){\n//             if(s[i] != s[j])\n//                 return false;\n//             i++;\n//             j--;\n//         }\n//         return true;\n//     }\n    \n//     for(let k = 0; k < s.length; k++)\n//     {\n//         let j = s.length - 1 - k;\n//         let i = 0;\n//         while(j < s.length)\n//         {\n//             if(isPal(i,j)){\n//                 return s.substring(i, j + 1);\n//             }\n//             i++;\n//             j++;\n//         }\n//     }\n//     return s;\n    \n// };\n\n\nvar longestPalindrome = function(s) {\n    let longest = '';\n    \n    // this function finds the longest palindrome using the index as the middle\n    const findLongestFromIndex = (str, i, j) => {\n        let palindrome = '';\n        while (i >= 0 && j < str.length && str[i] === str[j]) {\n            palindrome = str.slice(i, j + 1);\n            i--;\n            j++;\n        }\n        return palindrome;\n    }\n    \n    for (let i = 0; i < s.length; i++) {\n\t\t// palindromes using one and two characters as the middle\n        const palindrome1 = findLongestFromIndex(s, i, i);\n        const palindrome2 = findLongestFromIndex(s, i, i + 1);\n        const longerPalindrome = palindrome1.length > palindrome2.length ? palindrome1 : palindrome2;\n        \n        if (longerPalindrome.length > longest.length) {\n            longest = longerPalindrome;\n        }\n    }\n    \n    return longest;\n};\n\n\n\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-substring","has_notes":false}