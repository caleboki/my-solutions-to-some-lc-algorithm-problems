{"id":597668491,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 6 months","timestamp":1638769280,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/597668491/","is_pending":"Not Pending","title":"Design Add and Search Words Data Structure","memory":"N/A","code":"\n// var WordDictionary = function() {\n    \n// };\n\n// /** \n//  * @param {string} word\n//  * @return {void}\n//  */\n// WordDictionary.prototype.addWord = function(word) {\n    \n// };\n\n// /** \n//  * @param {string} word\n//  * @return {boolean}\n//  */\n// WordDictionary.prototype.search = function(word) {\n    \n// };\n\n/** \n * Your WordDictionary object will be instantiated and called as such:\n * var obj = new WordDictionary()\n * obj.addWord(word)\n * var param_2 = obj.search(word)\n */\n\nclass WordDictionary {\n    constructor() {\n        this.trie = {}\n    }\n    \n    addWord(word) {\n        let cur = this.trie\n        for (let alpha of word) {\n            if (!cur[alpha]) cur[alpha] = {}\n            cur = cur[alpha]\n        }\n        cur.word = true\n    }\n    \n    search(word) {\n        \n        const dfs = (j, root) => {\n            let cur = root\n            for (let i in word) {\n                let c = word[i]\n                if (c === '.') {\n                    //if character is '.' implies we could potentially go\n                    //thru 26 different paths\n                    for (let d of Object.values(cur)) {\n                        if (dfs(i+1, d)) return true\n                    }\n                    return false\n\n                } else {\n                    if (!cur[c]) return false\n                    cur = cur[c]\n                }\n\n            }\n            \n            return cur.word\n        }\n        \n        return dfs(0, this.trie)\n        \n    }\n}","compare_result":"0110100000000","title_slug":"design-add-and-search-words-data-structure","has_notes":false}