{"id":555068179,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 9 months","timestamp":1631666636,"status":10,"status_display":"Accepted","runtime":"2664 ms","url":"/submissions/detail/555068179/","is_pending":"Not Pending","title":"Product of the Last K Numbers","memory":"79 MB","code":"\n// var ProductOfNumbers = function() {\n    \n// };\n\n// /** \n//  * @param {number} num\n//  * @return {void}\n//  */\n// ProductOfNumbers.prototype.add = function(num) {\n    \n// };\n\n// /** \n//  * @param {number} k\n//  * @return {number}\n//  */\n// ProductOfNumbers.prototype.getProduct = function(k) {\n    \n// };\n\n/** \n * Your ProductOfNumbers object will be instantiated and called as such:\n * var obj = new ProductOfNumbers()\n * obj.add(num)\n * var param_2 = obj.getProduct(k)\n */\n\nclass ProductOfNumbers {\n    constructor() {\n        this.data = []\n     \n    }\n    \n    add(num) {\n       \n        this.data.push(num)\n    }\n    \n    getProduct(k) {\n        \n        let product = 1\n        \n        for (let i = (this.data.length - 1); i >= 0; i--) {\n            k--\n            product = product * this.data[i] \n            if (k === 0) break\n        }\n       \n        return product\n    }\n}","compare_result":"111111111111111111111111111111111","title_slug":"product-of-the-last-k-numbers","has_notes":false}