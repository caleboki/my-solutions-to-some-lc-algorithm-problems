{"id":581645316,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 7 months","timestamp":1635970044,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/581645316/","is_pending":"Not Pending","title":"Maximum Average Subarray II","memory":"N/A","code":"/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number}\n */\n\n// var findMaxAverage = function(nums, k) {\n//     const result = []\n//     for (let i = 0; i < nums.length - k + 1; i++) {\n//         sum = 0.0\n//         for (let j = i; j < i + k; j++) {\n//             sum += nums[j]\n//         }\n//         result.push(sum/k)\n//     }\n//     console.log(result)\n//     return Math.max(...result)\n// };\n\n\nvar findMaxAverage = function(nums, k) {\n    const result = []\n    \n    let j = 0\n    let sum = 0.0\n    \n    for (let i = 0; i < nums.length; i++) {\n        sum += nums[i]\n        \n        if (i >= k-1) {\n            result.push(sum/k)\n            sum -= nums[j]\n            j++\n        }\n    }\n    return Math.max(...result)\n};","compare_result":"111111110111111111011111000101010001100000110000000100011110101110000000100","title_slug":"maximum-average-subarray-ii","has_notes":false}