{"id":941794785,"lang":"javascript","lang_name":"JavaScript","time":"1 month, 3 weeks","timestamp":1682807145,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/941794785/","is_pending":"Not Pending","title":"Longest Continuous Increasing Subsequence","memory":"N/A","code":"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findLengthOfLCIS = function(nums) {\n    let stack = [], longest = 0\n\n    for (let i = 0; i < nums.length; i++) {\n        if (stack.length === 0 || stack[stack.length - 1] < nums[i]) {\n            stack.push(nums[i])\n            console.log(stack)\n        } else {\n            longest = Math.max(longest, stack.length)\n            stack = []\n        }\n    }\n    return longest\n    \n    \n};","compare_result":"11001000011010110111101001001001101","title_slug":"longest-continuous-increasing-subsequence","has_notes":false}