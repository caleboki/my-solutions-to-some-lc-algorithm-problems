{"id":506638522,"lang":"javascript","lang_name":"JavaScript","time":"2Â years","timestamp":1623474276,"status":10,"status_display":"Accepted","runtime":"128 ms","url":"/submissions/detail/506638522/","is_pending":"Not Pending","title":"Minimum Cost to Connect Sticks","memory":"44.5 MB","code":"/**\n * @param {number[]} sticks\n * @return {number}\n */\n\n// we need to combine smallest sticks each time\n// when we combined the sticks we add it to the combined arr\nconst connectSticks = sticks => {\n    if(sticks.length <= 1) return 0\n    // sorting at the beginning\n    sticks.sort((a,b)=>a-b)\n    const combined = []\n    let res = 0\n    while(sticks.length || combined.length > 1){\n        let curSum = 0\n        // we need to sticks to combine => counter is 2\n        let counter = 2\n        while(counter--){\n            // if we have original stick and it is less than first combined -> take original\n            const condition = sticks.length && (!combined.length || (sticks[0] < combined[0]))\n            // add to curSum and remove first from either combined or original sticks array\n            curSum += condition ? sticks.shift() : combined.shift()\n        }\n        // add to result and add the stick that we combined to combined array\n        res += curSum\n        combined.push(curSum)\n    }\n    return res\n}","compare_result":"11111111111111111111111111111","title_slug":"minimum-cost-to-connect-sticks","has_notes":false}