{"id":734782265,"lang":"javascript","lang_name":"JavaScript","time":"11 months, 3 weeks","timestamp":1656564045,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/734782265/","is_pending":"Not Pending","title":"Minimum Path Sum","memory":"N/A","code":"/**\n * @param {number[][]} grid\n * @return {number}\n */\nvar minPathSum = function(grid) {\n    \n    const traverse = (grid, i, j) => {\n        if (i === grid.length || j === grid[0].length) return Infinity\n        if (i === grid.length-1 && j === grid[0].length-1) return grid[i][j]\n        \n        return grid[i][j] + Math.min(traverse(grid, i + 1, j), traverse(grid, i, j+1))\n    }\n    \n    return traverse(grid, 0, 0)\n    \n};\n\n// var uniquePaths = function(m, n, memo = new Map()) {\n//     const key = m + ',' + n\n    \n//     if (memo.has(key)) return memo.get(key)\n//     if (m === 0 || n === 0) return 0\n//     if (m === 1 && n === 1) return 1\n    \n//     memo.set(key, uniquePaths(m-1, n, memo) + uniquePaths(m, n-1, memo))\n    \n//     return memo.get(key)\n// };","compare_result":"1111111111111111111111100000000000000000000000000000000000000","title_slug":"minimum-path-sum","has_notes":false}