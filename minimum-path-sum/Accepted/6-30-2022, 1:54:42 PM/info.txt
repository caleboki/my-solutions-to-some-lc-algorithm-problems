{"id":735267131,"lang":"javascript","lang_name":"JavaScript","time":"11 months, 3 weeks","timestamp":1656611682,"status":10,"status_display":"Accepted","runtime":"73 ms","url":"/submissions/detail/735267131/","is_pending":"Not Pending","title":"Minimum Path Sum","memory":"42.9 MB","code":"/**\n * @param {number[][]} grid\n * @return {number}\n */\n// var minPathSum = function(grid) {\n    \n//     const traverse = (grid, i, j) => {\n//         if (i === grid.length || j === grid[0].length) return Infinity\n//         if (i === grid.length-1 && j === grid[0].length-1) return grid[i][j]\n        \n//         return grid[i][j] + Math.min(traverse(grid, i + 1, j), traverse(grid, i, j+1))\n//     }\n    \n//     return traverse(grid, 0, 0)\n// };\n\nconst minPathSum = (grid) => {\n    const rows = grid.length\n    const cols = grid[0].length\n    \n    // Calculate the distance travelled within the first column\n\t// This is because each square depends on the one above\n\t// And the one to the left. However there is nothing left\n\t// of the first column so we can calculate it by adding\n\t// the current square to the square above it\n    \n    for (let i = 1; i < rows; i++) {\n        grid[i][0] += grid[i-1][0]\n    }\n    \n    // The same goes for the first row. There is nothing above the \n\t// first row. So we just calculate the distance by what is to the left\n\t// of it\n    \n    for (let j = 1; j < cols; j++) {\n        grid[0][j] += grid[0][j-1]\n    }\n    \n    // Start one row and one column in because we've precomputed those above\n    \n    for (let i = 1; i < rows; i++) {\n        for (let j = 1; j < cols; j++) {\n            // The distance to the grid at i,j is equal to itself plus the minimum\n\t\t\t// of the two grid spaces (one above, one to the left)\n            \n            grid[i][j] += Math.min(grid[i][j-1], grid[i-1][j])\n        }\n    }\n    \n    // Return the distance bottom right corner\n    \n    return grid[rows-1][cols-1]\n}\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-path-sum","has_notes":false}