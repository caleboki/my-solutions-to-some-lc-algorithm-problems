{"id":557642865,"lang":"javascript","lang_name":"JavaScript","time":"1Â year, 9Â months","timestamp":1632079033,"status":10,"status_display":"Accepted","runtime":"185 ms","url":"/submissions/detail/557642865/","is_pending":"Not Pending","title":"Course Schedule II","memory":"43.9 MB","code":"/**\n * @param {number} numCourses\n * @param {number[][]} prerequisites\n * @return {number[]}\n */\n\nvar findOrder = function(numCourses, prerequisites) {\n    \n    const adjList = new Map()\n    const s = []\n    \n    const seeing = new Set(), seen = new Set()\n    \n    const addNode = (course) => {\n        adjList.set(course, [])\n    }\n    \n    const addEdge = (edge1, edge2) => {\n        adjList.get(edge2).push(edge1)\n    }\n    \n    const dfs = (start) => {\n        if (seen.has(start)) return true\n        if (seeing.has(start)) return false\n        \n        seeing.add(start)\n        const edges = adjList.get(start)\n        \n        for (edge of edges) {\n            if (!dfs(edge)) return false\n        }\n        \n        seeing.delete(start)\n        seen.add(start)\n        \n        return true\n    }\n    \n    for (let i = 0; i < numCourses; i++) {\n        addNode(i)\n    }\n    \n    for (let i = 0; i < prerequisites.length; i++) {\n        addEdge(prerequisites[i][0], prerequisites[i][1])\n    }\n    \n    for (i = 0; i < numCourses; i++) {\n        if (!dfs(i)) return []\n    }\n    return [...seen].reverse()\n}","compare_result":"11111111111111111111111111111111111111111111","title_slug":"course-schedule-ii","has_notes":false}