{"id":935604965,"lang":"javascript","lang_name":"JavaScript","time":"2Â months","timestamp":1681794154,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/935604965/","is_pending":"Not Pending","title":"Longest Line of Consecutive One in Matrix","memory":"N/A","code":"/**\n * @param {number[][]} mat\n * @return {number}\n */\nvar longestLine = function(mat) {\n    //traverse the grid\n    let max = 0, rows = mat.length, cols = mat[0].length\n\n    if (rows === 0) return 0\n\n    //horizontal\n    for (let i = 0; i < rows; i++) {\n        let count = 0\n        for (let j = 0; j < cols; j++) {\n            if (mat[i][j] === 1) {\n                count++\n                max = Math.max(max, count)\n            } else {\n                count = 0\n            }\n        }\n    }\n\n    //vertical\n    for (let i = 0; i < cols; i++) {\n        let count = 0\n        for (let j = 0; j < rows; j++) {\n            if (mat[j][i] === 1) {\n                count++\n                max = Math.max(max, count)\n            } else {\n                count = 0\n            }\n        }\n    }\n\n    //upper diagonal\n    for (let i = 0; i < cols || i < rows; i++) {\n        let count = 0\n        for (let j = 0, y = i; j < rows && y < cols; j++, y++) {\n            if (mat[j][y] === 1) {\n                count++\n                max = Math.max(max, count)\n            } else {\n                count = 0\n            }\n        }\n    }\n\n    //lower diagonal\n    for (let i = 0; i < cols || i < rows; i++) {\n        let count = 0\n        for (let j = 0, y = 0; j < rows && y < cols; j++, y++) {\n            if (mat[j][y] === 1) {\n                count++\n                max = Math.max(max, count)\n            } else {\n                count = 0\n            }\n        }\n    }\n\n    //upper anti-diagonal\n    for (let i = 0; i < cols || i < rows; i++) {\n        let count = 0\n        for (let j = 0, y = cols-i-1; j < rows && y >= 0; j++, y--) {\n            if (mat[j][y] === 1) {\n                count++\n                max = Math.max(max, count)\n            } else {\n                count = 0\n            }\n        }\n    }\n\n    //lower anti-diagonal\n    for (let i = 0; i < cols || i < rows; i++) {\n        let count = 0\n        for (let j = i, y = cols-1; j < rows && y >= 0; j++, y--) {\n            if (mat[j][y] === 1) {\n                count++\n                max = Math.max(max, count)\n            } else {\n                count = 0\n            }\n        }\n    }\n\n    return max\n    \n};","compare_result":"11111111111111111111111111111111111111111011111111111111","title_slug":"longest-line-of-consecutive-one-in-matrix","has_notes":false}