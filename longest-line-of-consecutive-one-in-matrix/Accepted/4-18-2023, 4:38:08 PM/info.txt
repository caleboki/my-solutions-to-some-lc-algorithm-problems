{"id":936024196,"lang":"javascript","lang_name":"JavaScript","time":"2Â months","timestamp":1681850288,"status":10,"status_display":"Accepted","runtime":"139 ms","url":"/submissions/detail/936024196/","is_pending":"Not Pending","title":"Longest Line of Consecutive One in Matrix","memory":"45 MB","code":"/**\n * @param {number[][]} mat\n * @return {number}\n */\nconst longestLine = function(mat) {\n    const m = mat.length, n = mat[0].length;\n    let maxLen = 0;\n    \n    for (let i = 0; i < m; i++) {\n        for (let j = 0; j < n; j++) {\n            if (mat[i][j] === 1) {\n                // horizontal\n                let len = 1, k = j + 1;\n                while (k < n && mat[i][k] === 1) {\n                    len++;\n                    k++;\n                }\n                maxLen = Math.max(maxLen, len);\n                \n                // vertical\n                len = 1, k = i + 1;\n                while (k < m && mat[k][j] === 1) {\n                    len++;\n                    k++;\n                }\n                maxLen = Math.max(maxLen, len);\n                \n                // diagonal\n                len = 1, k = i + 1, l = j + 1;\n                while (k < m && l < n && mat[k][l] === 1) {\n                    len++;\n                    k++;\n                    l++;\n                }\n                maxLen = Math.max(maxLen, len);\n                \n                // anti-diagonal\n                len = 1, k = i + 1, l = j - 1;\n                while (k < m && l >= 0 && mat[k][l] === 1) {\n                    len++;\n                    k++;\n                    l--;\n                }\n                maxLen = Math.max(maxLen, len);\n            }\n        }\n    }\n    \n    return maxLen;\n};\n","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"longest-line-of-consecutive-one-in-matrix","has_notes":false}