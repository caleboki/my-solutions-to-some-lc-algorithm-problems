{"id":580124735,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 7 months","timestamp":1635716068,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/580124735/","is_pending":"Not Pending","title":"Merge Intervals","memory":"N/A","code":"/**\n * @param {number[][]} intervals\n * @return {number[][]}\n */\nvar merge = function(intervals) {\n    \n//     if (intervals.length === 1) return intervals\n    \n//     let result = []\n    \n//     intervals.sort(function (a, b) {return a[0]-b[0]})\n    \n//     for (let i = 1; i < intervals.length; i++) {\n//         if (intervals[i][0] <= intervals[i-1][1]) {\n            \n//             if (intervals[i][1] >= intervals[i-1][1]) {\n//                 result.push([intervals[i-1][0], intervals[i][1]])\n//             } else {\n              \n//                 result.push(intervals[i-1])\n//             }\n            \n//         } else  {\n            \n//             if (result.length === 0) {\n//                 result.push(intervals[i-1], intervals[i])\n//             } else {\n//                 result.push(intervals[i])\n//             }\n            \n//         }\n//     }\n    \n//     return result\n    \n    let merged = []\n    \n    for (interval of intervals) {\n        if (merged.length === 0 || merged[merged.length - 1] < interval[0]) {\n            merged.push(interval)\n        }\n        else {\n            merged[merged.length - 1][1] = Math.max(merged[merged.length - 1][1], interval[1])\n        }\n    }\n    return merged\n};","compare_result":"011111000010000000001000010000000101010000010000000000100000000000000010000000100010001000000000000000000000000000000000000000000000100000000011000000000000000000000000","title_slug":"merge-intervals","has_notes":false}