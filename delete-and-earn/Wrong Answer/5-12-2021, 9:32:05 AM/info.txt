{"id":492194978,"lang":"javascript","lang_name":"JavaScript","time":"2 years, 1 month","timestamp":1620826325,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/492194978/","is_pending":"Not Pending","title":"Delete and Earn","memory":"N/A","code":"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar deleteAndEarn = function(nums) {   \n    if (nums.length === 0) {\n        return 0;\n    }\n    \n    if (nums.length === 1) {\n        return nums[0];\n    }\n    \n    const numsLookup = new Array(nums.length + 1).fill(0);\n    \n\t// store the total you can earn per number in the relevant index in the numsLookup array\n\t// e.g if the array is [3, 3, 4, 2], your numsLookup will look like [0, 0, 2, 6,4] (3 twice is 6) \n    for (let i=0; i<nums.length; i++) {\n        if (numsLookup[nums[i]]) {\n            numsLookup[nums[i]] += nums[i];\n        } else {\n            numsLookup[nums[i]] = nums[i];\n        }\n    }\n    \n\t// use the same approach as in the house robber problem, keeping track of the max last two values\n    let twoPrev = numsLookup[0];\n    let prev = numsLookup[1];\n    \n    for (let i=2; i<numsLookup.length; i++) {\n        const temp = prev;\n        prev = Math.max(numsLookup[i] + twoPrev, prev);\n        twoPrev = temp;\n    }\n    \n    return prev;\n    \n    \n//     let points = 0;\n    \n//     nums.sort(function(a,b){return b - a})\n     \n//     for (let i = 0; i<nums.length; i++) {     \n        \n//         points += nums[i]\n        \n//         if (nums.includes(nums[i] - 1)) nums.splice(nums.indexOf(nums[i] - 1), 1)\n//         if (nums.includes(nums[i] + 1)) nums.splice(nums.indexOf(nums[i] + 1), 1)\n//     }\n    \n//     return points\n};","compare_result":"11111111110111111111111111111111111111111111111","title_slug":"delete-and-earn","has_notes":false}