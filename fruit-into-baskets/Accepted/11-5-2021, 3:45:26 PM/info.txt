{"id":582614567,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 7 months","timestamp":1636141526,"status":10,"status_display":"Accepted","runtime":"388 ms","url":"/submissions/detail/582614567/","is_pending":"Not Pending","title":"Fruit Into Baskets","memory":"53.3 MB","code":"/**\n * @param {number[]} fruits\n * @return {number}\n */\n\n\n// In this problem, we need to find the length of the longest subarray with no more than two distinct characters (or fruit types!). This transforms the current problem into Longest Substring with K Distinct Characters where K=2.\n\nvar totalFruit = function(fruits) {\n    let map = {}, j = 0, max = 0\n    \n    for (let i = 0; i < fruits.length; i++) {\n        if (!(fruits[i] in map)) {\n            map[fruits[i]] = 0\n        }\n        map[fruits[i]]++\n        \n        while(Object.keys(map).length > 2) {\n            map[fruits[j]]--\n            \n            if (map[fruits[j]] === 0) delete map[fruits[j]]\n            j++\n        }\n        max = Math.max(max, i - j + 1)\n    }\n    return max\n    \n};\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"fruit-into-baskets","has_notes":false}