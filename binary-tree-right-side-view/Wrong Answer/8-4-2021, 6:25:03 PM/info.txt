{"id":533411843,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 10 months","timestamp":1628115903,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/533411843/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number[]}\n */\nvar rightSideView = function(root) {\n    if (!root) return []\n    let result = []\n    \n    const dfs = (node) => {\n        if (!node) return null\n        \n        result.push(node.val)\n            \n        node.right = dfs(node.right)\n        return node\n    }\n    dfs(root)\n    return result\n    \n};","compare_result":"11110100010010001000000000001100110000010000000000001000000001000000110000000100000001000000000000000000010000001000000000000000000000000000100000011001011010000100100000001100010001000001000001000000000000000000000","title_slug":"binary-tree-right-side-view","has_notes":false}