{"id":747138262,"lang":"javascript","lang_name":"JavaScript","time":"11 months, 1 week","timestamp":1657821547,"status":10,"status_display":"Accepted","runtime":"67 ms","url":"/submissions/detail/747138262/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"44 MB","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number[]}\n */\n\n//inspired from: https://leetcode.com/problems/binary-tree-right-side-view/discuss/1191984/Clean-and-Simple-JavaScript-DFS\n\n// var rightSideView = function(root) {\n//     let result = []\n    \n//     const dfs = (node, depth = 0) => {\n//         if (!node) return\n        \n//         if (!result[depth]) result[depth] = node.val //depth ensures that left nodes are not saved unless a right node is NOT present\n        \n//         dfs(node.right, depth + 1)\n//         dfs(node.left, depth + 1)\n        \n//     }\n//     dfs(root)\n//     return result\n// };\n\nconst rightSideView = (root) => {\n    if (!root) return []\n    let res = []\n    \n    const bfs = (root) => {\n        let queue = [root]\n        \n        while (queue.length) {\n            let size = queue.length\n            let currentLevel = []\n            \n            for (let i = 0; i < size; i++) {\n                let current = queue.shift()\n                currentLevel.push(current.val)\n                \n                if (current.left) queue.push(current.left)\n                if (current.right) queue.push(current.right)\n                \n            }\n            \n            res.push(currentLevel[currentLevel.length - 1])\n        }\n    }\n    \n    bfs(root)\n    return res\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-right-side-view","has_notes":false}