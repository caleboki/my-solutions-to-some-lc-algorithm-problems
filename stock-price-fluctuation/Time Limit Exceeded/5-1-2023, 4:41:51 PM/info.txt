{"id":942852120,"lang":"javascript","lang_name":"JavaScript","time":"1 month, 3 weeks","timestamp":1682973711,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/942852120/","is_pending":"Not Pending","title":"Stock Price Fluctuation ","memory":"N/A","code":"\n// var StockPrice = function() {\n    \n// };\n\n// /** \n//  * @param {number} timestamp \n//  * @param {number} price\n//  * @return {void}\n//  */\n// StockPrice.prototype.update = function(timestamp, price) {\n    \n// };\n\n// /**\n//  * @return {number}\n//  */\n// StockPrice.prototype.current = function() {\n    \n// };\n\n// /**\n//  * @return {number}\n//  */\n// StockPrice.prototype.maximum = function() {\n    \n// };\n\n// /**\n//  * @return {number}\n//  */\n// StockPrice.prototype.minimum = function() {\n    \n// };\n\n// class StockPrice {\n//     constructor() {\n//         this.data = {}\n//     }\n//     update(timestamp, price) {\n//         this.data[timestamp] = price\n//     }\n//     current() {\n//         const keys = Object.keys(this.data)\n//         const key = Math.max(...keys)\n//         return this.data[key]\n//     }\n//     maximum() {\n//         return Math.max(...Object.values(this.data))\n//     }\n//     minimum() {\n//         return Math.min(...Object.values(this.data))\n//     }\n// }\n\nclass StockPrice {\n    constructor() {\n        this.data = {}\n        this.latestTimestamp = -1\n        this.maxPrice = -Infinity\n        this.minPrice = Infinity\n    }\n\n    update(timestamp, price) {\n        if (this.data[timestamp] !== undefined) {\n            const oldPrice = this.data[timestamp]\n            if (oldPrice === this.maxPrice || oldPrice === this.minPrice) {\n                this.maxPrice = -Infinity\n                this.minPrice = Infinity\n                for (const ts in this.data) {\n                    if (parseInt(ts) !== timestamp) {\n                        this.maxPrice = Math.max(this.maxPrice, this.data[ts])\n                        this.minPrice = Math.min(this.minPrice, this.data[ts])\n                    }\n                }\n            }\n        }\n\n        this.data[timestamp] = price\n        this.latestTimestamp = Math.max(this.latestTimestamp, timestamp)\n        this.maxPrice = Math.max(this.maxPrice, price)\n        this.minPrice = Math.min(this.minPrice, price)\n    }\n\n    current() {\n        return this.data[this.latestTimestamp]\n    }\n\n    maximum() {\n        return this.maxPrice\n    }\n\n    minimum() {\n        return this.minPrice\n    }\n}\n\n\n\n\n/** \n * Your StockPrice object will be instantiated and called as such:\n * var obj = new StockPrice()\n * obj.update(timestamp,price)\n * var param_2 = obj.current()\n * var param_3 = obj.maximum()\n * var param_4 = obj.minimum()\n */","compare_result":"111111111110000000","title_slug":"stock-price-fluctuation","has_notes":false}