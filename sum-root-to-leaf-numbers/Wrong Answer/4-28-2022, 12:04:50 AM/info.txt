{"id":688889250,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 1 month","timestamp":1651118690,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/688889250/","is_pending":"Not Pending","title":"Sum Root to Leaf Numbers","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nvar sumNumbers = function(root) {\n    \n    const dfs = (node, sum) => {\n        if (!node) return 0\n        \n        if (!node.left && !node.right) return sum + node.val //leaf node\n        sum += node.val\n        \n        return dfs(node.left, sum) + dfs(node.right, sum)\n    }\n    \n    return dfs(root, '')\n};","compare_result":"001100001000000000001000000000000000000000000000000000000000000000010000000000000000000000000000000000000000","title_slug":"sum-root-to-leaf-numbers","has_notes":false}