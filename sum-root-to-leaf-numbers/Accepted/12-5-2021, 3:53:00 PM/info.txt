{"id":597475274,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 6 months","timestamp":1638737580,"status":10,"status_display":"Accepted","runtime":"80 ms","url":"/submissions/detail/597475274/","is_pending":"Not Pending","title":"Sum Root to Leaf Numbers","memory":"40.3 MB","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nvar sumNumbers = function(root) {\n    \n    const dfs = (node, sum) => {\n        if (!node) return '0'\n        \n        if (!node.left && !node.right) return sum + +node.val //leaf node\n        sum += +node.val\n        \n        return +dfs(node.left, sum) + +dfs(node.right, sum)\n    }\n    \n    return dfs(root, '')\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-root-to-leaf-numbers","has_notes":false}