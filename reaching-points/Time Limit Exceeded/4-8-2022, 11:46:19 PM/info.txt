{"id":676720781,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 2 months","timestamp":1649475979,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/676720781/","is_pending":"Not Pending","title":"Reaching Points","memory":"N/A","code":"/**\n * @param {number} sx\n * @param {number} sy\n * @param {number} tx\n * @param {number} ty\n * @return {boolean}\n */\n// function reachingPoints(sx, sy, tx, ty) {\n    \n//     while(tx >= sx && ty >= sy) {\n        \n//         if ((sx == tx) && (sy == ty)) return true;\n        \n//         if (ty > tx) {\n//             ty = ty % tx\n//         } else {\n//             tx = tx % ty\n//         };\n        \n//         if (tx == sx) {\n//             if ((ty-sy) % tx == 0) {\n//                 return true;\n//             }\n//             else {\n//                 return false;\n//             }   \n//         }\n        \n//         if (ty == sy) {\n//             if ((tx-sx) % ty == 0) {\n//                 return true;\n//             }\n//             else {\n//                 return false;\n//             }\n//         }         \n//     }\n//     return false;\n// };\n\nconst reachingPoints = (sx, sy, tx, ty) => {\n    while(tx >= sx && ty >= sy) {\n        if ((sx === tx) && (sy === ty)) return true\n        \n        if (tx > ty) {\n            tx -= ty\n            \n        } else {\n            ty -= tx\n        }\n        \n        \n    }\n    return false\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000","title_slug":"reaching-points","has_notes":false}