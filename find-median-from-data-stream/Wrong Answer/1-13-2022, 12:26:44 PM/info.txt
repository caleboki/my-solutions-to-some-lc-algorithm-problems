{"id":619118534,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 5 months","timestamp":1642094804,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/619118534/","is_pending":"Not Pending","title":"Find Median from Data Stream","memory":"N/A","code":"\n// var MedianFinder = function() {\n    \n// };\n\n// /** \n//  * @param {number} num\n//  * @return {void}\n//  */\n// MedianFinder.prototype.addNum = function(num) {\n    \n// };\n\n// /**\n//  * @return {number}\n//  */\n// MedianFinder.prototype.findMedian = function() {\n    \n// };\n\n/** \n * Your MedianFinder object will be instantiated and called as such:\n * var obj = new MedianFinder()\n * obj.addNum(num)\n * var param_2 = obj.findMedian()\n */\n\nclass MedianFinder {\n    constructor() {\n        this.data = []\n        this.size = 0\n    }\n    \n    addNum(num) {\n        \n        \n        if (this.size === 0) {\n            this.data.push(num)\n            this.size++ \n            return\n        }\n        \n        let last = this.data[this.data.length - 1]\n        \n        if (num > last) {\n            this.data.push(num)\n        } else {\n            this.data.unshift(num)\n        }\n        this.size++ \n        \n        return\n    }\n    \n    findMedian() {\n        //this.data.sort((a, b) => {return a-b})\n        \n        let mid\n        \n        //odd length\n        \n        if ((this.size % 2) > 0) {\n            mid = (this.size-1)/2\n            return this.data[mid]\n        }\n        \n        //even length\n        let high = this.size/2, low = this.size/2 - 1\n        \n        return (this.data[high] + this.data[low])/2\n        \n    }\n    \n\n}","compare_result":"111111000000000000111","title_slug":"find-median-from-data-stream","has_notes":false}