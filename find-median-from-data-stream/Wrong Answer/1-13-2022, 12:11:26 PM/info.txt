{"id":619109913,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 5 months","timestamp":1642093886,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/619109913/","is_pending":"Not Pending","title":"Find Median from Data Stream","memory":"N/A","code":"\n// var MedianFinder = function() {\n    \n// };\n\n// /** \n//  * @param {number} num\n//  * @return {void}\n//  */\n// MedianFinder.prototype.addNum = function(num) {\n    \n// };\n\n// /**\n//  * @return {number}\n//  */\n// MedianFinder.prototype.findMedian = function() {\n    \n// };\n\n/** \n * Your MedianFinder object will be instantiated and called as such:\n * var obj = new MedianFinder()\n * obj.addNum(num)\n * var param_2 = obj.findMedian()\n */\n\nclass MedianFinder {\n    constructor() {\n        \n        this.data = []\n    }\n    \n    addNum(num) {\n        this.data.push(num)\n    }\n    \n    findMedian() {\n//         this.data.sort((a, b) => {return a-b})\n        \n//         let length = this.data.length, mid\n        \n//         //odd length\n        \n//         if ((length % 2) > 0) {\n//             mid = (length-1)/2\n//             return this.data[mid]\n//         }\n        \n//         //even length\n//         let high = this.data.length/2, low = this.data.length/2 - 1\n        \n//         return (this.data[high] + this.data[low])/2\n        \n    }\n    \n\n}","compare_result":"000000000000000000000","title_slug":"find-median-from-data-stream","has_notes":false}