{"id":776276914,"lang":"javascript","lang_name":"JavaScript","time":"10 months, 1 week","timestamp":1660760455,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/776276914/","is_pending":"Not Pending","title":"Find Median from Data Stream","memory":"N/A","code":"\n// var MedianFinder = function() {\n    \n// };\n\n// /** \n//  * @param {number} num\n//  * @return {void}\n//  */\n// MedianFinder.prototype.addNum = function(num) {\n    \n// };\n\n// /**\n//  * @return {number}\n//  */\n// MedianFinder.prototype.findMedian = function() {\n    \n// };\n\n/** \n * Your MedianFinder object will be instantiated and called as such:\n * var obj = new MedianFinder()\n * obj.addNum(num)\n * var param_2 = obj.findMedian()\n */\n\nclass MedianFinder {\n    constructor() {\n        this.data = []\n    }\n    \n    addNum(num) {\n        //this.data.push(num)\n        \n        if (this.data.length === 0) {\n            this.data.push(num)\n        } else {\n            if (num > this.data[this.data.length - 1]) {\n                this.data.push(num)\n            } else {\n                this.data.unshift(num)\n            }\n        }\n    }\n    \n    findMedian() {\n        //this.data.sort((a, b) => {return a-b})\n        \n        let length = this.data.length, mid\n        \n        //odd length\n        if ((length % 2) > 0) {\n            mid = (length-1)/2\n            return this.data[mid]\n        }\n        //even length\n        let high = this.data.length/2, low = this.data.length/2 - 1\n        \n        return (this.data[high] + this.data[low])/2\n    }\n}\n\n// class MedianFinder {\n//     constructor() {\n//         this.data = []\n//     }\n    \n//     addNum(num) {\n//         if (this.data.length === 0) {\n//             this.data.push(num)\n//             return\n//         }\n        \n//         let left = 0\n//         let right = this.data.length\n        \n//         while (left < right) {\n//             const mid = Math.floor((left + right)/2)\n            \n//             if (num > this.data[mid]) {\n//                 left = mid + 1\n//             } else {\n//                 right = mid\n//             }\n//         }\n        \n//         this.data.splice(left, 0, num)\n//     }\n    \n//     findMedian() {\n//         let length = this.data.length, mid\n        \n//         //odd length\n//         if ((length % 2) > 0) {\n//             mid = (length-1)/2\n//             return this.data[mid]\n//         }\n        \n//         //even length\n//         let high = this.data.length/2, low = this.data.length/2 - 1\n        \n//         return (this.data[high] + this.data[low])/2\n//     }\n// }","compare_result":"111111000000000000111","title_slug":"find-median-from-data-stream","has_notes":false}