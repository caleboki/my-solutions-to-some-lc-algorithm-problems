{"id":755498999,"lang":"javascript","lang_name":"JavaScript","time":"11Â months","timestamp":1658674428,"status":10,"status_display":"Accepted","runtime":"200 ms","url":"/submissions/detail/755498999/","is_pending":"Not Pending","title":"Frog Jump","memory":"52.8 MB","code":"/**\n * @param {number[]} stones\n * @return {boolean}\n */\n// var canCross = function(stones) {\n    \n//     const dfs = (stones, index, k) => {\n        \n//         for (let i = index + 1; i < stones.length; i++) {\n//             let gap = stones[i] - stones[index]\n            \n//             if (gap >= k - 1 && gap <= k + 1) {\n//                 if (dfs(stones, i, gap)) return true\n//             }\n//         }\n//         return index === stones.length - 1\n//     }\n//     return dfs(stones, 0, 0)\n// };\n\n\nconst canCross = (stones) => {\n    let visited = new Set(), stonesSet = new Set(stones), end = stones[stones.length - 1], stack = [[0, 0]]\n    \n    while (stack.length) {\n        let [current, steps] = stack.pop(), key = current + ',' + steps\n        \n        if (visited.has(key)) continue\n        visited.add(key)\n        \n        if (current === end) return true\n        \n        if (current < end) {\n            for (let i = steps - 1; i < steps + 2; i++) {\n                if (stonesSet.has(current + i)) stack.push([current + i, i])\n            }\n        }\n    }\n    \n    return false\n}\n\n// const canCross = (stones) => {\n//     let stonesSet = new Set(stones), end = stones[stones.length - 1], visited = new Set()\n    \n//     const dfs = (stonesSet, current, k) => {\n//         if (current === end) return true\n//         let key = current + ',' + k\n        \n//         if (!visited.has(key)) {\n//             visited.add(key)\n            \n//             if (current === end) return true\n            \n//             if (current < end) {\n//                 for (let i = k - 1; i < k + 2; i++) {\n//                     if (stonesSet.has(current + i)) dfs(stonesSet, current + i, k)\n//                 }\n//             }\n            \n//         }\n        \n//         //return false\n//     }\n    \n//     return dfs(stonesSet, 0, 0)\n// }\n\n","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"frog-jump","has_notes":false}