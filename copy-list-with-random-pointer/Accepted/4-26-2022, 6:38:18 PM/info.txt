{"id":688146428,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 1 month","timestamp":1651012698,"status":10,"status_display":"Accepted","runtime":"115 ms","url":"/submissions/detail/688146428/","is_pending":"Not Pending","title":"Copy List with Random Pointer","memory":"44.3 MB","code":"/**\n * // Definition for a Node.\n * function Node(val, next, random) {\n *    this.val = val;\n *    this.next = next;\n *    this.random = random;\n * };\n */\n\n/**\n * @param {Node} head\n * @return {Node}\n */\n\n//Time complexity: O(N)\n//Space complexity: O(N)\nvar copyRandomList = function(head) {\n    if(!head) return null\n    \n    let map = new Map()\n    \n    //store nodes without pointers\n    let current = head\n    while(current)\n    {\n        let copy = new Node(current.val)\n        map.set(current, copy)\n        current = current.next\n    }\n    \n    //set the pointers\n    current = head\n    while(current)\n    {\n        let copy = map.get(current)\n        copy.next = map.get(current.next) ?? null\n        copy.random = map.get(current.random) ?? null\n        current = current.next\n    }\n    return map.get(head)\n};\n\n//Recursive implementation of the above\n//Time complexity: O(N)\n//Space complexity: O(N)\n// var copyRandomList = function(head) {\n//     let map = new Map()\n    \n//     const populateMap = (head) => {\n//         if(!head) return null\n        \n//         if (map.has(head)) return map.get(head)\n        \n//         let copy = new Node(head.val, null, null)\n//         map.set(head, copy)\n        \n//         copy.next = populateMap(head.next)\n//         copy.random = populateMap(head.random)\n        \n//         return copy\n//     }\n//     return populateMap(head)\n// };\n\n\n\n","compare_result":"1111111111111111111","title_slug":"copy-list-with-random-pointer","has_notes":false}