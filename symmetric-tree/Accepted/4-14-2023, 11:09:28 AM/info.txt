{"id":933685288,"lang":"javascript","lang_name":"JavaScript","time":"2 months, 1 week","timestamp":1681484968,"status":10,"status_display":"Accepted","runtime":"60 ms","url":"/submissions/detail/933685288/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"44.2 MB","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {boolean}\n */\nvar isSymmetric = function(root) {\n    \n    const isMirror = (p, q) => {\n        if (!p && !q) return true\n        if (!p || !q) return false\n        \n        return (p.val === q.val) && isMirror(p.right, q.left) && isMirror(p.left, q.right)\n    }\n    \n    return isMirror(root, root)\n    \n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree","has_notes":false}