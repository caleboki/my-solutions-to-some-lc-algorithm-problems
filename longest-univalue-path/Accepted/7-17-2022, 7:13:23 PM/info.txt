{"id":749790702,"lang":"javascript","lang_name":"JavaScript","time":"11 months, 1 week","timestamp":1658099603,"status":10,"status_display":"Accepted","runtime":"296 ms","url":"/submissions/detail/749790702/","is_pending":"Not Pending","title":"Longest Univalue Path","memory":"99.3 MB","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nvar longestUnivaluePath = function(root) {\n    let res = 0\n    const dfs = (node) => {\n        if (!node) return 0\n        let left = dfs(node.left)\n        let right = dfs(node.right)\n        let arrowLeft = 0, arrowRight = 0\n        \n        if (node.left && node.left.val === node.val) arrowLeft += left + 1\n        if (node.right && node.right.val === node.val) arrowRight += right + 1\n        \n        res = Math.max(res, arrowLeft + arrowRight)\n        return Math.max(arrowLeft, arrowRight)\n        \n    }\n    dfs(root)\n    return res\n    \n    \n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-univalue-path","has_notes":false}