{"id":558240314,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 9 months","timestamp":1632169102,"status":10,"status_display":"Accepted","runtime":"139 ms","url":"/submissions/detail/558240314/","is_pending":"Not Pending","title":"Find Mode in Binary Search Tree","memory":"48.2 MB","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number[]}\n */\nvar findMode = function(root) {\n   \n    const map = {}\n    \n    const dfs = (node) => {\n        if (!node) return\n        \n        if (map[node.val] === undefined) {\n            map[node.val] = 1\n        }else {\n            map[node.val]++\n        }\n        \n        dfs(node.left)\n        dfs(node.right)\n    }\n    \n    dfs(root)\n    \n    const freq = Math.max(...Object.values(map))\n    \n    return Object.keys(map).filter(f => map[parseInt(f)] === freq)\n    \n};","compare_result":"11111111111111111111111","title_slug":"find-mode-in-binary-search-tree","has_notes":false}