{"id":571867348,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 8 months","timestamp":1634344886,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/571867348/","is_pending":"Not Pending","title":"Walls and Gates","memory":"N/A","code":"/**\n * @param {number[][]} rooms\n * @return {void} Do not return anything, modify rooms in-place instead.\n */\n// var wallsAndGates = function(rooms) {\n    \n//     const distanceToNearestGate = (i, j, dist, rooms) => {\n        \n//         //handling out of bound and base case\n//         if (i < 0 || i >= rooms.length || j < 0 || j>=rooms[i].length || rooms[i][j] < dist) return\n        \n            \n//         rooms[i][j] = dist\n//         if (rooms[i+1]) distanceToNearestGate(i+1, j, dist+1, rooms)\n//         if (rooms[i-1]) distanceToNearestGate(i-1, j, dist+1, rooms)\n//         if (rooms[i][j+1]) distanceToNearestGate(i, j+1, dist+1, rooms)\n//         if (rooms[i][j-1]) distanceToNearestGate(i, j-1, dist+1, rooms)\n//     }\n    \n//     //traverse grid\n//     for (let i = 0; i < rooms.length; i++) {\n//         for (let j = 0; j < rooms[i].length; j++) {\n//             if (rooms[i][j] === 0) distanceToNearestGate(rooms, i, j, 0)\n//         }\n//     }\n    \n//     return rooms\n    \n// };\n\n\nvar wallsAndGates = function(rooms) {\n    const distanceToNearestGate = (i, j, dist, rooms) => {\n        \n        //handling out of bound and base case\n        if (dist > 0 && rooms[i][j] <= 0) return\n        \n        if (dist <= rooms[i][j]) {\n            rooms[i][j] = dist\n        } else {\n            return\n        }\n        \n        if (rooms[i-1]) distanceToNearestGate(i-1, j, dist+1, rooms)\n        \n        if (rooms[i][j+1]) distanceToNearestGate(i, j+1, dist+1, rooms)\n        \n        if (rooms[i+1]) distanceToNearestGate(i+1, j, dist+1, rooms)\n        \n        if (rooms[i][j-1]) distanceToNearestGate(i, j-1, dist+1, rooms)\n        \n \n       \n    }\n    \n    //traverse grid\n    for (let i = 0; i < rooms.length; i++) {\n        for (let j = 0; j < rooms[i].length; j++) {\n            if (!rooms[i][j]) distanceToNearestGate(i, j, 0, rooms)\n        }\n    }\n    \n    return rooms\n    \n};","compare_result":"11111111111111111111111111111111111111111111111111111111111110","title_slug":"walls-and-gates","has_notes":false}