{"id":800806378,"lang":"javascript","lang_name":"JavaScript","time":"9Â months, 1Â week","timestamp":1663278115,"status":10,"status_display":"Accepted","runtime":"144 ms","url":"/submissions/detail/800806378/","is_pending":"Not Pending","title":"Two Sum IV - Input is a BST","memory":"52.7 MB","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @param {number} k\n * @return {boolean}\n */\nvar findTarget = function(root, k) {\n    let nodeValues = []\n    \n    const dfs = (node) => {\n        if (!node) return\n        dfs(node.left)\n        nodeValues.push(node.val)\n        dfs(node.right)\n    }\n    \n    const twoSum = (nums, target) => {\n        const pairs = new Map()\n\n        for (let i in nums) {\n            if (pairs.has(nums[i])) return true\n            let key = target - nums[i]\n            pairs.set(key, i)\n        }\n        return false\n    }\n    \n    dfs(root)\n    return twoSum(nodeValues, k)\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"two-sum-iv-input-is-a-bst","has_notes":false}