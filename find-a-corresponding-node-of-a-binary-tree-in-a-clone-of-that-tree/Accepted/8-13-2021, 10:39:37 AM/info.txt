{"id":537925498,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 10 months","timestamp":1628865577,"status":10,"status_display":"Accepted","runtime":"411 ms","url":"/submissions/detail/537925498/","is_pending":"Not Pending","title":"Find a Corresponding Node of a Binary Tree in a Clone of That Tree","memory":"84.2 MB","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} original\n * @param {TreeNode} cloned\n * @param {TreeNode} target\n * @return {TreeNode}\n */\n\nvar getTargetCopy = function(original, cloned, target) {\n    \n    let result\n    const inOrder = (original, cloned) => {\n        if (original !== null) {\n            inOrder(original.left, cloned.left)\n            if(original === target) return result = cloned\n            inOrder(original.right, cloned.right)\n        }\n        \n    }\n    \n    inOrder(original, cloned)\n    return result\n    \n};","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree","has_notes":false}