{"id":573416256,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 8 months","timestamp":1634595513,"status":10,"status_display":"Accepted","runtime":"279 ms","url":"/submissions/detail/573416256/","is_pending":"Not Pending","title":"Perfect Squares","memory":"42 MB","code":"/**\n * @param {number} n\n * @return {number}\n */\n// var numSquares = function(n) {\n//     if (n === 1) return 1\n    \n//     let squares = []\n    \n//     for (let i = 1; i <= n; i++ ) {\n//         squares.push(i*i)\n//     }\n    \n//     let queue = new Set()\n//     queue.add(n)\n    \n//     let level = 0\n//     while(queue.length) {\n//         level++\n//         let nextQueue = new Set()\n        \n//         for (let remainder of queue) {\n            \n//         }\n        \n        \n//     }\n     \n// };\n\n//https://www.youtube.com/watch?v=HLZLwjzIVGo\nvar numSquares = function(n) {\n    let dp = Array(n+1).fill(n);\n    dp[0] = 0\n    \n    for (let i = 0; i <= n; i++) {\n        for (let j = 1; j*j <= i; j++) {\n            dp[i] = Math.min(dp[i], dp[i -(j*j)] + 1)\n        }\n    }\n    \n    return dp[n]\n    \n};","compare_resulttitle_slug":"perfect-squares","has_notes":false}