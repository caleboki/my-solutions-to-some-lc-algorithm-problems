{"id":573378250,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 8 months","timestamp":1634589494,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/573378250/","is_pending":"Not Pending","title":"Perfect Squares","memory":"N/A","code":"/**\n * @param {number} n\n * @return {number}\n */\nvar numSquares = function(n) {\n    let squares = []\n    \n    for (let i = 1; i <= 10000; i++ ) {\n        squares.push(i*i)\n    }\n    \n    squares = squares.filter(s => s < n)\n    \n//     let i = 0, j = squares.length - 1\n    \n//     while (i < j && j-1 !== 1) {\n//         let diff = n - squares[j]\n//         if (squares.indexOf(diff) === -1) {\n//             j--\n//         }\n//     }\n    \n    while(squares.length && squares.length !== 2) {\n        let diff = n - squares[squares.length - 1]\n        if (!squares.includes(diff)) squares.pop()\n    }\n    \n\n    return (n/squares[squares.length - 1])\n    \n    //filter array to values less than or equal to n\n    //subtract n from every value in the subarray\n    //check if this difference is in the array or it is a factor of 1 or more elements in this array\n    \n    \n};","compare_resulttitle_slug":"perfect-squares","has_notes":false}