{"id":573386619,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 8 months","timestamp":1634590698,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/573386619/","is_pending":"Not Pending","title":"Perfect Squares","memory":"N/A","code":"/**\n * @param {number} n\n * @return {number}\n */\nvar numSquares = function(n) {\n    if (n === 1) return 1\n    \n    let squares = []\n    \n    for (let i = 1; i <= 10000; i++ ) {\n        squares.push(i*i)\n    }\n    \n    squares = squares.filter(s => s <= n)\n    console.log(squares)\n    \n    if (squares.length === 1) return n/squares[0]\n    \n    \n//     let i = 0, j = squares.length - 1\n    \n//     while (i < j && j-1 !== 1) {\n//         let diff = n - squares[j]\n//         if (squares.indexOf(diff) === -1) {\n//             j--\n//         }\n//     }\n    let factors = []\n    while(squares.length && squares.length !== 2) {\n        let diff = n - squares[squares.length - 1]\n        if (!squares.includes(diff)) {\n            squares.pop()\n        } else {\n            factors.push(diff, squares.pop())\n        }\n    }\n    \n    if (factors.length) {\n        factors.reverse()\n        let sum = 0\n        for (let i = 0; i < factors.length; i++) {\n            sum += factors[i]\n            console.log(sum)\n            if (sum === n) return i+1\n        }\n    }\n    return (n/squares[squares.length - 1])\n    \n    //filter array to values less than or equal to n\n    //subtract n from every value in the subarray\n    //check if this difference is in the array or it is a factor of 1 or more elements in this array\n    \n    \n};","compare_result":"111111000101111010110100000100100101001001100010000101100001001000100100011100000101001000110000001100100101001000100110000100100101000001100000001101100010001001010100000100100001011000100000001100100101001001000100000100100001001001110000001101100001000000100110001000100101001000100000010101100101000000110000001100100100001001000010001101000001001000100100010100100011001000100000000101100101001000100110001100000100001001100000001001000001001000110100001100100101010000000010001100100101001000000100100000001001000110010000100000001101011010100100010001101000111101111000010100000110","title_slug":"perfect-squares","has_notes":false}