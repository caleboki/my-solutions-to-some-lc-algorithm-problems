{"id":918293960,"lang":"javascript","lang_name":"JavaScript","time":"3Â months","timestamp":1679252027,"status":10,"status_display":"Accepted","runtime":"143 ms","url":"/submissions/detail/918293960/","is_pending":"Not Pending","title":"Subarrays with K Different Integers","memory":"49.5 MB","code":"/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number}\n */\n// var subarraysWithKDistinct = function(nums, k) {\n//     let count = 0, i = 0, j = 0\n//     const kDistinct = (m, n) => {}\n\n//     while (i < nums.length && j < nums.length) {\n//         if (kDistinct(i, j)) {\n//             count++\n//             j++\n//         }\n//         i++\n//     }\n\n//     return count\n// };\n\nvar subarraysWithKDistinct = function(nums, k) {\n    const atMostK = (k) => {\n        let j = 0, map = {}, count = 0\n\n        for (let i = 0; i < nums.length; i++) {\n            map[nums[i]] = (map[nums[i]] || 0)\n\n            if (map[nums[i]] === 0) k--\n            map[nums[i]]++\n\n            while (k < 0) {\n                map[nums[j]]--\n                if (map[nums[j]] === 0) k++\n                j++\n            }\n\n            count += i - j + 1\n        }\n        return count\n    }\n    return atMostK(k) - atMostK(k-1)\n};\n","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"subarrays-with-k-different-integers","has_notes":false}