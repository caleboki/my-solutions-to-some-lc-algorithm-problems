{"id":676647863,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 2 months","timestamp":1649462524,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/676647863/","is_pending":"Not Pending","title":"Find First and Last Position of Element in Sorted Array","memory":"N/A","code":"/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\n// var searchRange = function(nums, target) {\n//     let result = []\n    \n//     for (let i in nums) {\n//         if (nums[i] === target) result.push(i)\n//     }\n    \n//     if (result.length === 0) return [-1, -1]\n    \n//     result = [result[0], result[result.length - 1]]\n    \n//     return result\n// };\n\nvar searchRange = function(nums, target) {\n    \n    const binarySearch = (nums, target) => {\n        let l = 0, r = nums.length - 1, result = []\n        \n        while (l <= r) {\n            let mid = Math.floor((l+r)/2)\n            if (nums[mid] === target) {\n                result.push(mid)\n                \n                if(nums[mid-1] === target) {\n                    let n = mid - 1\n                    while (n >= 0 && nums[n] === target) {\n                        result.unshift(n)\n                        n--\n                    } \n                }\n                \n                if(nums[mid+1] === target) {\n                    let n = mid + 1\n                    while (n < nums.length && nums[n] === target) {\n                        result.push(n)\n                        n++\n                    } \n                }\n                \n\n                \n                return [result[0], result[1]]\n                \n                \n                \n                \n            } else if(target < nums[mid]) {\n                r = mid - 1  \n            } else {\n                l = mid + 1\n            }\n        }\n        return [-1, -1]\n        \n    }\n    return binarySearch(nums, target)\n};","compare_result":"1111011100100001100111110001001101000111111100110000101010100011010111010000001001000000","title_slug":"find-first-and-last-position-of-element-in-sorted-array","has_notes":false}