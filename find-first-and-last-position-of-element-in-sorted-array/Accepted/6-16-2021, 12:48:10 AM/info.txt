{"id":508603648,"lang":"javascript","lang_name":"JavaScript","time":"2Â years","timestamp":1623818890,"status":10,"status_display":"Accepted","runtime":"80 ms","url":"/submissions/detail/508603648/","is_pending":"Not Pending","title":"Find First and Last Position of Element in Sorted Array","memory":"41.1 MB","code":"/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nvar searchRange = function(nums, target) {\n    if (nums.length === 0) return [-1, -1]\n    \n//     let result = []\n    \n//     for (let i = 0; i < nums.length; i++) {\n//         if (nums[i] === target) result.push(i)\n//     }\n    \n//     return result\n    \n   let left = 0, right = nums.length - 1, leftIndex = -1, rightIndex = -1\n   \n   while (left <= right) {\n       let mid = Math.floor((left + right)/2)\n       if (target === nums[mid]) {\n           leftIndex = mid\n           right = mid - 1\n          \n       } else if (target < nums[mid]) {\n           right = mid - 1\n       } else {\n           left = mid + 1\n       }\n   }\n    \n   right = nums.length - 1\n   while (left <= right) {\n       let mid = Math.floor((left + right)/2)\n       if (target === nums[mid]) {\n           rightIndex = mid\n           left = mid + 1\n       } else if (target < nums[mid]) {\n           right = mid - 1\n       } else {\n           left = mid + 1\n       }\n       \n   }\n    \n    return [leftIndex, rightIndex]\n    \n\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-first-and-last-position-of-element-in-sorted-array","has_notes":false}