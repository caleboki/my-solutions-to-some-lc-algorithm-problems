{"id":575025823,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 8 months","timestamp":1634844682,"status":10,"status_display":"Accepted","runtime":"96 ms","url":"/submissions/detail/575025823/","is_pending":"Not Pending","title":"Sort Array by Increasing Frequency","memory":"41.3 MB","code":"/**\n * @param {string} s\n * @return {string}\n */\n// var frequencySort = function(s) {\n//     let freqMap = {}\n//     let sOutput = []\n//     let dOutput = []\n    \n//     for (a of s) {\n//         if (freqMap[a] === undefined) {\n//             freqMap[a] = 1\n//         } else {\n//             freqMap[a]++\n//         }\n//     }\n    \n//     //console.log(freqMap)\n    \n//     //sorting map by values-important trick to know!\n//     let sortedFreqMap = Object.fromEntries(Object.entries(freqMap).sort(([,a],[,b]) => b-a))\n   \n//     let values = Object.values(sortedFreqMap)\n//     let keys = Object.keys(sortedFreqMap)\n    \n     \n   \n    \n//     for (let i = 0; i < values.length; i++) {\n//         if (isNaN(keys[i])) {\n//             sOutput.push(keys[i].repeat(values[i])) \n//         } else {\n//             dOutput.push(keys[i].repeat(values[i]))\n            \n//         }\n        \n//         //if (!isNaN(keys[i])) output.push(keys[i].repeat(values[i]))\n        \n//     }\n    \n//     dOutput = dOutput.map(Number)\n//     console.log(dOutput)\n    \n//     return dOutput.join(\"\")\n    \n   \n// };\n\n// T.C - O(nlogn) where n - no of elements in array and logn is T.C of sorting\nvar frequencySort = function(nums) {\n    let map = {}\n\n    for(let num of nums) {\n        if(!map[num]) {\n            map[num] = 1\n        } else {\n            map[num]++\n        }\n    }\n\n    let sortedArray = Object.entries(map).sort((a,b) => {\n       if(a[1] == b[1]) {\n           return b[0] - a[0]\n       } else {\n           return a[1] - b[1]\n       }\n    })\n\n    let result = []\n\n    for(let arr of sortedArray) {\n        while(arr[1] > 0) {\n            result.push(arr[0])\n            arr[1]--\n        }\n    }\n\n    return result;\n};\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sort-array-by-increasing-frequency","has_notes":false}