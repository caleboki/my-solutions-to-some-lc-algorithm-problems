{"id":575024593,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 8 months","timestamp":1634844494,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/575024593/","is_pending":"Not Pending","title":"Sort Array by Increasing Frequency","memory":"N/A","code":"/**\n * @param {string} s\n * @return {string}\n */\n// var frequencySort = function(s) {\n//     let freqMap = {}\n//     let sOutput = []\n//     let dOutput = []\n    \n//     for (a of s) {\n//         if (freqMap[a] === undefined) {\n//             freqMap[a] = 1\n//         } else {\n//             freqMap[a]++\n//         }\n//     }\n    \n//     //console.log(freqMap)\n    \n//     //sorting map by values-important trick to know!\n//     let sortedFreqMap = Object.fromEntries(Object.entries(freqMap).sort(([,a],[,b]) => b-a))\n   \n//     let values = Object.values(sortedFreqMap)\n//     let keys = Object.keys(sortedFreqMap)\n    \n     \n   \n    \n//     for (let i = 0; i < values.length; i++) {\n//         if (isNaN(keys[i])) {\n//             sOutput.push(keys[i].repeat(values[i])) \n//         } else {\n//             dOutput.push(keys[i].repeat(values[i]))\n            \n//         }\n        \n//         //if (!isNaN(keys[i])) output.push(keys[i].repeat(values[i]))\n        \n//     }\n    \n//     dOutput = dOutput.map(Number)\n//     console.log(dOutput)\n    \n//     return dOutput.join(\"\")\n    \n   \n// };\n\nvar frequencySort = function(s) {\n    let freqMap = {}\n    let output = []\n    \n    for (a of s) {\n        if (freqMap[a] === undefined) {\n            freqMap[a] = 1\n        } else {\n            freqMap[a]++\n        }\n    }\n    \n    let sortedEntries = Object.entries(freqMap).sort((a,b) => b[1]-a[1])\n    sortedEntries.reverse()\n    console.log(sortedEntries)\n    for(let i = 0; i < sortedEntries.length; i++){\n        for(let j = 0; j < sortedEntries[i][1]; j++) {\n            output.push(sortedEntries[i][0])\n            \n        }\n    }\n   \n    return output\n    \n   \n};\n\n","compare_result":"110111111110110110001000010010000100100001001000100100010000100100001001000110010000100100010010000101000100001001000010010001000100001001000100001001000100001101000010010001001000","title_slug":"sort-array-by-increasing-frequency","has_notes":false}