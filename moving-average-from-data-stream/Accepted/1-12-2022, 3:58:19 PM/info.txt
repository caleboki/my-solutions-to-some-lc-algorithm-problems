{"id":618556095,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 5 months","timestamp":1642021099,"status":10,"status_display":"Accepted","runtime":"222 ms","url":"/submissions/detail/618556095/","is_pending":"Not Pending","title":"Moving Average from Data Stream","memory":"44.5 MB","code":"/**\n * Initialize your data structure here.\n * @param {number} size\n */\n// var MovingAverage = function(size) {\n    \n// };\n\n// /** \n//  * @param {number} val\n//  * @return {number}\n//  */\n// MovingAverage.prototype.next = function(val) {\n    \n// };\n\n/** \n * Your MovingAverage object will be instantiated and called as such:\n * var obj = new MovingAverage(size)\n * var param_1 = obj.next(val)\n */\n\nclass MovingAverage {\n    constructor(size) {\n        this.size = size\n        this.data = []\n    }\n    \n    next(val) {\n        this.data.push(val)\n        \n        if (this.data.length > this.size) this.data.shift()\n        \n        let sum = this.data.reduce((a,b) => a+b, 0)\n        let result = sum / this.data.length\n        \n        return result\n    }\n}\n\n// class MovingMedian {\n//     constructor(size) {\n//         this.size = size\n//         this.data = []\n//     }\n    \n//     next(val) {\n//         this.data.push(val)\n        \n//         if (this.data.length > this.size) this.data.shift()\n        \n//         this.data.sort((a, b) => {return a-b})\n        \n//         let length = this.data.length, mid\n        \n//         //if odd length\n//         if ((length % 2) > 0) {\n//             mid = (length-1)/2\n//             return this.data[mid]\n//         }\n        \n//         //even length\n//         let highMid = this.data.length/2\n//         let lowMid = this.data.length/2 - 1\n        \n//         return (this.data[highMid] + this.data[lowMid])/2\n//     }\n// }","compare_result":"11111111111","title_slug":"moving-average-from-data-stream","has_notes":false}