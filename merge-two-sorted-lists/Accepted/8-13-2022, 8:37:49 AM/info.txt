{"id":772598483,"lang":"javascript","lang_name":"JavaScript","time":"10 months, 1 week","timestamp":1660394269,"status":10,"status_display":"Accepted","runtime":"84 ms","url":"/submissions/detail/772598483/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"44.4 MB","code":"/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} l1\n * @param {ListNode} l2\n * @return {ListNode}\n */\n\n// var mergeTwoLists = function(l1, l2) {\n//    if (!l1 || !l2) return l1 || l2\n  \n//     if (l1.val < l2.val) {\n//         l1.next = mergeTwoLists(l1.next, l2) \n//         return l1 \n//     } else {\n//         l2.next = mergeTwoLists(l1, l2.next) \n//         return l2 \n//     }\n// };\n\nconst mergeTwoLists = (l1, l2) => {\n    let arr = []\n    let current = l1\n    \n    while (current !== null) {\n        arr.push(current.val)\n        current = current.next\n    }\n    \n    current = l2\n    \n    while (current !== null) {\n        arr.push(current.val)\n        current = current.next\n    }\n    \n    arr.sort((a, b) => {return a-b})\n    \n    let head = null, ln = null\n    \n    for (let a of arr) {\n        if (head === null) {\n            \n            head = new ListNode(a)\n            ln = head\n            \n        } else {\n            ln.next = new ListNode(a)\n            ln = ln.next\n        }\n    }\n    return head\n    \n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-sorted-lists","has_notes":false}