{"id":564474019,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 8 months","timestamp":1633179119,"status":10,"status_display":"Accepted","runtime":"132 ms","url":"/submissions/detail/564474019/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"40.4 MB","code":"/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} l1\n * @param {ListNode} l2\n * @return {ListNode}\n */\n// var mergeTwoLists = function(l1, l2) {\n    \n//     if (!l1 || !l2) return l1 || l2\n    \n//     let arr = []\n//     let head\n    \n//     while (l1) {\n//         arr.push(l1.val)\n//         l1 = l1.next\n//     }\n    \n//     while (l2) {\n//         arr.push(l2.val)\n//         l2 = l2.next\n//     }\n    \n//     arr.sort(function(a,b) {\n//              return b-a\n//              })\n    \n//     for (let i of arr) {\n//         head = new ListNode(i, head)  \n//     }\n    \n//     return head\n// };\n\nvar mergeTwoLists = function(l1, l2) {\n   if (!l1 || !l2) return l1 || l2\n  \n    if (l1.val < l2.val) {\n        l1.next = mergeTwoLists(l1.next, l2) \n        return l1 \n    } else {\n        l2.next = mergeTwoLists(l1, l2.next) \n        return l2 \n    }\n    \n    \n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-sorted-lists","has_notes":false}