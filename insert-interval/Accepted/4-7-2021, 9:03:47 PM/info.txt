{"id":477895928,"lang":"javascript","lang_name":"JavaScript","time":"2 years, 2 months","timestamp":1617843827,"status":10,"status_display":"Accepted","runtime":"96 ms","url":"/submissions/detail/477895928/","is_pending":"Not Pending","title":"Insert Interval","memory":"41.7 MB","code":"/**\n * @param {number[][]} intervals\n * @param {number[]} newInterval\n * @return {number[][]}\n */\nvar insert = function(intervals, newInterval) {\n    if(!intervals.length) return [newInterval]\n    \n    let inserted = false;\n    // insert the newInterval in the correct spot\n    for(let i = 0; i < intervals.length; i++) {\n        const [start] = intervals[i];\n        if(newInterval[0] <= start) {\n            intervals.splice(i, 0, newInterval);\n            inserted = true;\n            break;\n        }\n    }\n    if(!inserted) intervals.push(newInterval);\n    \n    const result = [intervals[0]];\n    // merge overlapping intervals\n    for(let i = 1; i < intervals.length; i++) {\n        const [prevStart, prevEnd] = result[result.length-1]\n        const [currStart, currEnd] = intervals[i];\n        \n        if(currStart > prevEnd) {\n            result.push(intervals[i]);\n            continue;\n        }\n        const newStart = Math.min(prevStart, currStart);;\n        const newEnd = Math.max(prevEnd, currEnd);\n        result.pop()\n        result.push([newStart, newEnd]);\n    }\n    return result;\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"insert-interval","has_notes":false}