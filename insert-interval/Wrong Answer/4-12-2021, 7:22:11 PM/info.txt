{"id":479889654,"lang":"javascript","lang_name":"JavaScript","time":"2 years, 2 months","timestamp":1618269731,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/479889654/","is_pending":"Not Pending","title":"Insert Interval","memory":"N/A","code":"/**\n * @param {number[][]} intervals\n * @param {number[]} newInterval\n * @return {number[][]}\n */\nvar insert = function(intervals, newInterval) {\n    if(!intervals.length) return [newInterval]\n    \n    let inserted = false;\n    // insert the newInterval in the correct spot i.e sorting by start time\n    for(let i = 0; i < intervals.length; i++) {\n        const start = intervals[i][0];\n        if(newInterval[0] <= start) {\n            intervals.splice(i, 0, newInterval);\n            inserted = true;\n            break;\n        }\n    }\n    if(!inserted) intervals.push(newInterval);\n    \n    const result = [intervals[0]];\n    // merge overlapping intervals\n    for(let i = 1; i < intervals.length; i++) {\n            \n        //const [prevStart, prevEnd] = result[result.length-1]; \n        const [currStart, currEnd] = intervals[i];\n        \n        const prevStart = result[0][0];\n        const prevEnd = result[0][1];\n        //console.log(result[0][1])\n        \n        if(currStart > prevEnd) {\n            result.push(intervals[i]);\n            continue;\n        }\n        const newStart = Math.min(prevStart, currStart);\n        const newEnd = Math.max(prevEnd, currEnd);\n        result.pop()\n        result.push([newStart, newEnd]);\n    }\n    return result;\n};","compare_result":"101111111111111111111011011111111110111000011000011111110111011100101011010111111000110111000000101010000011101001010001101010000101110110000100000000001101","title_slug":"insert-interval","has_notes":false}