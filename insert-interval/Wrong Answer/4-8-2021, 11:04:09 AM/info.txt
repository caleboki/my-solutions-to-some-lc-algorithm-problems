{"id":478143609,"lang":"javascript","lang_name":"JavaScript","time":"2 years, 2 months","timestamp":1617894249,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/478143609/","is_pending":"Not Pending","title":"Insert Interval","memory":"N/A","code":"/**\n * @param {number[][]} intervals\n * @param {number[]} newInterval\n * @return {number[][]}\n */\nvar insert = function(intervals, newInterval) {\n    if(!intervals.length) return [newInterval]\n    \n    let inserted = false;\n    // insert the newInterval in the correct spot\n    for(let i = 0; i < intervals.length; i++) {\n        const start = intervals[i][0]; //alternatively: const [start] = intervals[i];\n        if(newInterval[0] <= start) {\n            intervals.splice(i, 0, newInterval);\n            inserted = true;\n            break;\n        }\n    }\n    if(!inserted) intervals.push(newInterval);\n    \n    const result = [intervals[0]];\n    // merge overlapping intervals\n    for(let i = 1; i < intervals.length; i++) {\n            \n        //const [prevStart, prevEnd] = result[result.length-1];\n        const prevStart = [intervals[0][0]];\n        const prevEnd = [intervals[0][[intervals[0].length - 1]]];\n        const [currStart, currEnd] = intervals[i];\n        \n        if(currStart > prevEnd) {\n            result.push(intervals[i]);\n            continue;\n        }\n        const newStart = Math.min(prevStart, currStart);;\n        const newEnd = Math.max(prevEnd, currEnd);\n        result.pop()\n        result.push([newStart, newEnd]);\n    }\n    return result;\n};\n\n// var insert = function(intervals, newInterval) {\n    \n//     let inserted = false;\n//     for(let i = 0; i < intervals.length; i++) {\n//         const start = intervals[i][0];\n//         if(newInterval[0] <= start) {\n//             intervals.splice(i, 0, newInterval);\n//             inserted = true;\n//             break;\n//         }\n//     }\n//     if(!inserted) intervals.push(newInterval); //if no insertion, interval must be at end\n    \n//     const result = [intervals[0]];\n//     console.log(result)\n//     const [prevStart, prevEnd] = result[result.length-1]\n//     console.log(prevEnd)\n    \n// }\n","compare_result":"101111111111110011100011011111111110111000011000011110110111011100101011010111101000110011000000101010000010101001010001101010000101110110000100000000001101","title_slug":"insert-interval","has_notes":false}