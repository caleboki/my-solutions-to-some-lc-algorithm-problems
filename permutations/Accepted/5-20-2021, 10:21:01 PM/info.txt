{"id":496035685,"lang":"javascript","lang_name":"JavaScript","time":"2 years, 1 month","timestamp":1621563661,"status":10,"status_display":"Accepted","runtime":"132 ms","url":"/submissions/detail/496035685/","is_pending":"Not Pending","title":"Permutations","memory":"41.8 MB","code":"/**\n * @param {number[]} nums\n * @return {number[][]}\n */\n//  function permute (nums) {\n//     if (nums.length < 2) return nums\n//      let result = []         \n//      for (let i = 0; i<nums.length; i++) {\n//          let char = nums[i]\n        \n//          let remainingChars = nums.slice(0, i)\n//          remainingChars.push(...nums.slice(i + 1, nums.length))\n//          //console.log(remainingChars)\n//          for (let permutation of permute(remainingChars)){\n            \n//             result.push([char]) \n//              console.log(result)                  \n//          }\n//      }    \n//      return result   \n// };\n\nvar permute = function(nums) {\n    if(nums.length === 0) return [[]];\n    \n    \n    const firstVal = nums[0];\n    const restVals = nums.slice(1);\n    const permutationsWithoutFirst = permute(restVals);\n    \n    const allPermutations = [];\n    for(let perm of permutationsWithoutFirst) {\n        // perm is an array, insert at the tail end (<=)\n        for(let i = 0; i <= perm.length; i++) {\n            const addFirstToPermutation = [ ...perm.slice(0, i), firstVal, ...perm.slice(i) ];\n            allPermutations.push(addFirstToPermutation);\n        };\n    };\n    \n    return allPermutations;\n};","compare_result":"1111111111111111111111111","title_slug":"permutations","has_notes":false}