{"id":564258450,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 8 months","timestamp":1633138570,"status":10,"status_display":"Accepted","runtime":"76 ms","url":"/submissions/detail/564258450/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"40.6 MB","code":"/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @return {ListNode}\n */\nvar reverseList = function(head) {\n    if (!head || !head.next) return head\n    \n    let previous = null; //stores already reversed nodes\n    let current = head;\n\n    while (current !== null) {\n      let temp = current.next; //save next pointer to a temp variable\n      current.next = previous; // change current node's next to already reversed node therefore                                  // reversing current\n      \n      previous = current; //set new reversed node\n      current = temp;\n\n    }\n    return previous;\n    \n};","compare_result":"1111111111111111111111111111","title_slug":"reverse-linked-list","has_notes":false}