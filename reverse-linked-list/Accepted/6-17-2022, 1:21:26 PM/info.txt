{"id":724570701,"lang":"javascript","lang_name":"JavaScript","time":"1Â year","timestamp":1655486486,"status":10,"status_display":"Accepted","runtime":"143 ms","url":"/submissions/detail/724570701/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"43.8 MB","code":"/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @return {ListNode}\n */\nvar reverseList = function(head) {\n    if (!head || !head.next) return head\n    \n    let previous = null; //stores already reversed nodes\n    let current = head;\n\n    while (current !== null) {\n      let temp = current.next; //save next pointer to a temp variable\n      current.next = previous; // change current node's next to already reversed node therefore                                  // reversing current\n      \n      previous = current; //set new reversed node\n      current = temp;\n\n    }\n    return previous;\n    \n};\n\n// const reverseList = (head) => {\n//     if (!head || !head.next) return head\n//     let p = reverseList(head.next)\n//     head.next.next = head\n//     head.next = null\n//     return p\n// }","compare_result":"1111111111111111111111111111","title_slug":"reverse-linked-list","has_notes":false}