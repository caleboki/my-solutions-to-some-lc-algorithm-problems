{"id":601134060,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 6 months","timestamp":1639381683,"status":10,"status_display":"Accepted","runtime":"80 ms","url":"/submissions/detail/601134060/","is_pending":"Not Pending","title":"Convert Binary Search Tree to Sorted Doubly Linked List","memory":"40.3 MB","code":"/**\n * // Definition for a Node.\n * function Node(val, left, right) {\n *      this.val = val;\n *      this.left = left;\n *      this.right = right;\n *  };\n */\n\n/**\n * @param {Node} root\n * @return {Node}\n */\n\n\n// var treeToDoublyList = function(root) {\n    \n//     let head, prev\n    \n//     const dfs = (node) => {\n//         if (!node) return\n        \n//         if (node.left) dfs(node.left)\n        \n//         if (!head) head = node\n//         if (prev) {\n//             prev.next = node\n//             node.prev = prev\n//         }\n//         prev = node\n        \n//         if (node.right) dfs(node.right)\n//     }\n    \n//     dfs(root)\n//     prev.next = head\n//     head.prev = prev\n//     console.log(head)\n//     return head\n// };\n\nvar treeToDoublyList = function(root) {\n    if (!root) return\n    let head = null, prev = null\n    \n    const dfs = (node) => {\n        if (!node) return\n        \n        if (node.left) dfs(node.left)\n        \n        if (!prev) {\n            head = node\n        } else {\n            node.left = prev\n            prev.right = node\n        }\n        prev = node\n        \n        if (node.right) dfs(node.right)\n    }\n    dfs(root)\n    \n    prev.right = head\n    head.left = prev\n    \n    return head\n};","compare_result":"11111111111111111111111111111111111111111111111111","title_slug":"convert-binary-search-tree-to-sorted-doubly-linked-list","has_notes":false}