{"id":791395418,"lang":"javascript","lang_name":"JavaScript","time":"9 months, 3 weeks","timestamp":1662305222,"status":10,"status_display":"Accepted","runtime":"117 ms","url":"/submissions/detail/791395418/","is_pending":"Not Pending","title":"First Bad Version","memory":"41.5 MB","code":"/**\n * Definition for isBadVersion()\n * \n * @param {integer} version number\n * @return {boolean} whether the version is bad\n * isBadVersion = function(version) {\n *     ...\n * };\n */\n\n/**\n * @param {function} isBadVersion()\n * @return {function}\n */\nvar solution = function(isBadVersion) {\n    /**\n     * @param {integer} n Total versions\n     * @return {integer} The first bad version\n     */\n    \n    return function(n) {\n        // for (let i = 1; i < n+1; i++) {\n        //     if (isBadVersion(i)) return i\n        // }\n        \n        let left = 1, right = n\n        \n        while (left < right) {\n            let mid = Math.floor((left + right)/2)\n            \n            if (isBadVersion(mid)) {\n                right = mid\n            } else {\n                left = mid + 1\n            }\n        }\n        return left\n    };\n};","compare_result":"111111111111111111111111","title_slug":"first-bad-version","has_notes":false}