{"id":692803386,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 1 month","timestamp":1651642798,"status":10,"status_display":"Accepted","runtime":"83 ms","url":"/submissions/detail/692803386/","is_pending":"Not Pending","title":"The Maze","memory":"45.3 MB","code":"/**\n * @param {number[][]} maze\n * @param {number[]} start\n * @param {number[]} destination\n * @return {boolean}\n */\n// var hasPath = function(maze, start, destination, visited = new Set()) {\n//     let startString = start.join(''), destinationString = destination.join('')\n//     if (startString === destinationString) return true\n    \n//     let rows = maze.length, cols = maze[0].length\n    \n//     visited.add(startString)\n    \n//     for (let i = 0; i < rows; i++) {\n//         for (let j = 0; j < cols; j++) {\n            \n//             if (!visited.has(i.toString() + j.toString())) {\n//                 visited.add(i.toString() + j.toString())\n//                 let isFound = hasPath(maze, [i, j], destination, visited)\n//                 if (isFound) return true\n//             }\n//         }\n//     }\n//     return false\n// };\n\n\n\nconst hasPath = (maze, start, destination) => {\n    const directions = [\n\t\t[1, 0],\n\t\t[-1, 0],\n\t\t[0, 1],\n\t\t[0, -1],\n\t]\n    \n    const N = maze.length, M = maze[0].length\n    \n    const queue = [start]\n    \n    while (queue.length) {\n        const len = queue.length\n        \n        for (let i = 0; i < len; i++) {\n            const [dRow, dCol] = destination\n            const [row, col] = queue.shift()\n            \n            if (row === dRow && col === dCol) return true\n            \n            for (const [dx, dy] of directions) {\n                let x = row + dx\n                let y = col + dy\n                \n                while (x >= 0 && x < N && y >= 0 && y < M && maze[x][y] !== 1) {\n                    x += dx\n                    y += dy\n                }\n                \n                x -= dx\n                y -= dy\n                \n                if (maze[x][y] !== 0) continue\n                \n                queue.push([x, y])\n                \n                maze[x][y] = 2\n            }\n        }\n    }\n    return false\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"the-maze","has_notes":false}