{"id":680532274,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 2 months","timestamp":1649981360,"status":10,"status_display":"Accepted","runtime":"72 ms","url":"/submissions/detail/680532274/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal II","memory":"44.4 MB","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number[][]}\n */\nvar levelOrderBottom = function(root) {\n    if (!root) return []\n    const res = [], queue = [root]\n    \n    while (queue.length) {\n        const length = queue.length\n        const currentLevel = []\n        \n        for (let i = 0; i < length; i++) {\n            const current = queue.shift()\n            currentLevel.push(current.val)\n            \n            if (current.left) queue.push(current.left)\n            if (current.right) queue.push(current.right)\n            \n            \n        }\n        res.push([...currentLevel])\n        \n    }\n    return res.reverse()\n};","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal-ii","has_notes":false}