{"id":515883770,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 11 months","timestamp":1625150963,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/515883770/","is_pending":"Not Pending","title":"Base 7","memory":"N/A","code":"/**\n * @param {number} num\n * @return {string}\n */\nvar convertToBase7 = function(num) {\n//     let numOfDigits = []\n//     let current = 1\n      \n//     for (let i = 0; i<num; i++) {\n//         current = current*2\n//         if (current > num) break\n//         numOfDigits.push(current)\n//     }\n    \n//     numOfDigits.reverse()\n//     console.log(numOfDigits)\n    \n    if (num === 0) return '0'\n    let result = []\n    while (num !== 0) {\n        result.push(num % 7)\n        num = parseInt(num/7)\n        \n    }\n    result.reverse()\n    \n    const allNegative = (n) => {\n        if (n < 0) return true\n    }\n    \n    const positive = (n) => {\n        return -n  \n    }\n    \n    if (result.every(allNegative) === true) {\n      \n        for (let i = 1; i < result.length; i++) {\n            result[i] = positive(result[i])\n        }\n    }\n    return result.join('')\n  \n    \n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111101010101010101111111111111011111111111110111111111111101111111111111011111111111110111111111111111001111111111110111101010101010101010101010","title_slug":"base-7","has_notes":false}