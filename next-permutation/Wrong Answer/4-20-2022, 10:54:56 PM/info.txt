{"id":684513014,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 2 months","timestamp":1650509696,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/684513014/","is_pending":"Not Pending","title":"Next Permutation","memory":"N/A","code":"/**\n * @param {number[]} nums\n * @return {void} Do not return anything, modify nums in-place instead.\n */\nvar nextPermutation = function(nums) {\n    // Length of the array\n    const n = nums.length;\n    // Index of the first element that is smaller than\n    // the element to its right.\n    let index = -1;\n    // Loop from right to left\n    for (let i = n - 1; i > 0; i--) {\n        if (nums[i] > nums[i - 1]) {\n            index = i - 1;\n            break;\n        }\n    }\n    // Base condition\n    if (index === -1) {\n        reverse(nums, 0, n - 1);\n        return nums;\n    }\n    let j = n - 1;\n    // Again swap from right to left to find first element\n    // that is greater than the above find element\n    for (let i = n - 1; i >= index + 1; i--) {\n        if (nums[i] > nums[index]) {\n            j = i;\n            break;\n        }\n    }\n    // Swap the elements\n    swap(nums, index, j);\n    // Reverse the elements from index + 1 to the nums.length\n    \n    return nums;\n};\n\nconst reverse = (nums, i, j) => {\n    while (i < j) {\n        swap(nums, i, j);\n        i++;\n        j--;\n    }\n};\n\nconst swap = (nums, i, index) => {\n    const temp = nums[index];\n    nums[index] = nums[i];\n    nums[i] = temp;\n};\n\n\n\n\n","compare_result":"1111110101110010101010101010101010011001111000100011101111000010111011000100000101111101111110100000111010011010001110000000110111010000100111001101100011010011000011000111101111011100101011011010100100010010101110101001011011111111011100010011110101011011001110001","title_slug":"next-permutation","has_notes":false}