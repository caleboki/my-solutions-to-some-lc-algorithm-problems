{"id":722520649,"lang":"javascript","lang_name":"JavaScript","time":"1Â year","timestamp":1655260873,"status":10,"status_display":"Accepted","runtime":"3115 ms","url":"/submissions/detail/722520649/","is_pending":"Not Pending","title":"Random Pick Index","memory":"62.9 MB","code":"/**\n * @param {number[]} nums\n */\n// var Solution = function(nums) {\n    \n// };\n\n// /** \n//  * @param {number} target\n//  * @return {number}\n//  */\n// Solution.prototype.pick = function(target) {\n    \n// };\n\n/** \n * Your Solution object will be instantiated and called as such:\n * var obj = new Solution(nums)\n * var param_1 = obj.pick(target)\n */\n\n// class Solution {\n//     constructor(nums) {\n//         this.nums = nums\n//     }\n    \n//     pick(target) {\n//         let numsIndexes = []\n        \n//         for (let i in this.nums) {\n//             if (this.nums[i] === target) numsIndexes.push(i)\n//         }\n        \n//         let j = Math.floor(Math.random() * numsIndexes.length)\n        \n//         return numsIndexes[j]\n//     }\n// }\n\n// class Solution {\n//     constructor(nums) {\n//         this.numsIndexes = {}\n        \n//         for (let i in nums) {\n//             if (!(nums[i] in this.numsIndexes)) {\n//                 this.numsIndexes[nums[i]] = []\n//             }\n//             this.numsIndexes[nums[i]].push(i)\n//         }\n//     }\n    \n//     pick(target) {\n//         let l = Object.keys(this.numsIndexes[target]).length\n       \n//         return this.numsIndexes[target][Math.floor(Math.random() * l)]\n        \n//     }\n// }\n\nclass Solution {\n    constructor(nums) {\n        this.nums = nums\n    }\n    \n    pick(target) {\n        let count = 0, index = 0\n        \n        for (let i = 0; i < this.nums.length; i++) {\n            if (this.nums[i] === target) {\n                ++count\n                \n                if (Math.floor(Math.random() * count) === 0) {\n                    index = i\n                }\n            }\n        }\n        \n        return index\n    }\n}\n\n// var Solution = function(nums) {\n//     this.nums = nums;\n// };\n\n// /** \n//  * @param {number} target\n//  * @return {number}\n//  */\n// Solution.prototype.pick = function(target) {    \n//     let random_idx = 0;\n//     let target_count = 0;\n//     for(let i = 0; i < this.nums.length; ++i){\n//         if(this.nums[i] === target){\n//             ++target_count;\n            \n//             // Here roll a die with \"target_count\" sides ... \n//             // If the die lands on 0, we pick the current index to return for now\n//             if(Math.floor(Math.random()*target_count) === 0){\n//                 random_idx = i;\n//             }\n//         }\n//     }\n//     return random_idx;\n// };\n","compare_result":"111111111111111","title_slug":"random-pick-index","has_notes":false}