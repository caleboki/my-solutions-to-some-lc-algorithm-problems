{"id":565847767,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 8 months","timestamp":1633383229,"status":10,"status_display":"Accepted","runtime":"83 ms","url":"/submissions/detail/565847767/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"40.9 MB","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number[][]}\n */\n\nvar levelOrder = function(root) {\n    if (!root) return []\n    \n    let res = []\n    \n    let queue = [root]\n    \n    while (queue.length) {\n        \n        let values = []\n        let length = queue.length\n        \n        for (let i = 0; i < length; i++) {\n            let node = queue.shift()\n            values.push(node.val)\n        \n            if (node.left) queue.push(node.left)\n            if (node.right) queue.push(node.right)\n            \n        }\n        \n        \n        res.push([...values])\n        \n    }\n    \n    return res\n    \n    \n    \n    \n\n};","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal","has_notes":false}