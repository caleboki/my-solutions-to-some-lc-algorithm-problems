{"id":565429204,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 8 months","timestamp":1633320470,"status":10,"status_display":"Accepted","runtime":"68 ms","url":"/submissions/detail/565429204/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"40.1 MB","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number[][]}\n */\n\n// var levelOrder = function(root) {\n//     if (!root) return []\n    \n//     let level = 1\n//     let res = []\n    \n//     const print = (node, level) => {\n//         if (!node) return false\n        \n//         if (level === 1) return true\n        \n//         let left = print(node.left, level - 1)\n//         let right = print(node.right, level - 1)\n        \n//         return left || right\n//     }\n    \n//     while (print(root, level)) {\n        \n//         level++\n//     }\n    \n//     return res\n// }\n\nvar levelOrder = function(root) {\n    if (!root) return []\n    const res = []\n    const queue = [root]\n    \n    while(queue.length) {\n        const length = queue.length\n        const currentLevel = []\n        \n        for (let i = 0; i < length; i++) {\n            const current = queue.shift()\n            currentLevel.push(current.val)\n            \n            if (current.left) queue.push(current.left)\n            if (current.right) queue.push(current.right)\n            \n        }\n        res.push([...currentLevel])\n    }\n    \n    return res\n    \n};","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal","has_notes":false}