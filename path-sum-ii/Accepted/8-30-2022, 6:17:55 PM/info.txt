{"id":787526272,"lang":"javascript","lang_name":"JavaScript","time":"9 months, 3 weeks","timestamp":1661897875,"status":10,"status_display":"Accepted","runtime":"124 ms","url":"/submissions/detail/787526272/","is_pending":"Not Pending","title":"Path Sum II","memory":"45 MB","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @param {number} targetSum\n * @return {number[][]}\n */\nvar pathSum = function(root, targetSum) {\n    \n    const dfs = (node, remainingSum, pathNodes, pathsList) => {\n        if (!node) return\n        \n        pathNodes.push(node.val)\n        \n        if (remainingSum === node.val && !node.left && !node.right) {\n            pathsList.push([...pathNodes])\n        } else {\n            dfs(node.left, remainingSum - node.val, pathNodes, pathsList)\n            dfs(node.right, remainingSum - node.val, pathNodes, pathsList)\n        }\n        \n        pathNodes.pop()\n    }\n   \n    dfs(root, targetSum, pathNodes = [], pathsList = [])\n    return pathsList\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-ii","has_notes":false}