{"id":677182868,"lang":"javascript","lang_name":"JavaScript","time":"1Â year, 2Â months","timestamp":1649537808,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/677182868/","is_pending":"Not Pending","title":"Middle of the Linked List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @return {ListNode}\n */\nvar middleNode = function(head) {\n    \n    const getSize = (head) => {\n        let count = 0\n        let current = head\n        \n        while (current) {\n            count++\n            current = current.next\n        }\n        \n        return count\n    }\n    \n    let size = getSize(head)\n    \n    if (size % 2 === 0) size = (size/2) + 1\n    if (size % 2 !== 0) size = ((size-1)/2) + 1\n    \n    const traverse = (head, length) => {\n        let count = length\n        let current = head\n        \n        while (current) {\n            count--\n            if (count === 0) break\n            current = current.next\n        }\n        \n        return current\n    }\n    \n    return traverse(head, size)\n    \n};","compare_result":"111110101111110101010111111101011100","title_slug":"middle-of-the-linked-list","has_notes":false}