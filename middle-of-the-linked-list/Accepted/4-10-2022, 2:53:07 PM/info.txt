{"id":677814051,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 2 months","timestamp":1649616787,"status":10,"status_display":"Accepted","runtime":"94 ms","url":"/submissions/detail/677814051/","is_pending":"Not Pending","title":"Middle of the Linked List","memory":"41.8 MB","code":"/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @return {ListNode}\n */\nvar middleNode = function(head) {\n    \n    const getSize = (head) => {\n        let count = 0\n        let current = head\n        \n        while (current) {\n            count++\n            current = current.next\n        }\n        \n        return count\n    }\n    \n    let size = Math.floor(getSize(head)/2)\n    \n    const traverse = (head, length) => {\n        let count = length\n        let current = head\n        \n        while (current) {\n            if (count === 0) break\n            count--\n            current = current.next\n        }\n        \n        return current\n    }\n    \n    return traverse(head, size)\n};\n\n//Alternatively use fast-slow pointer\n\n// var middleNode = function(head) {\n//     let slow = head, fast = head\n    \n//     while (fast && fast.next) {\n//         slow = slow.next\n//         fast = fast.next.next\n//     }\n//     return slow\n// }","compare_result":"111111111111111111111111111111111111","title_slug":"middle-of-the-linked-list","has_notes":false}