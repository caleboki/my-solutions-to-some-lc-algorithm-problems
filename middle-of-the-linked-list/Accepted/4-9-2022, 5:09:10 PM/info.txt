{"id":677188286,"lang":"javascript","lang_name":"JavaScript","time":"1Â year, 2Â months","timestamp":1649538550,"status":10,"status_display":"Accepted","runtime":"110 ms","url":"/submissions/detail/677188286/","is_pending":"Not Pending","title":"Middle of the Linked List","memory":"42.2 MB","code":"/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @return {ListNode}\n */\nvar middleNode = function(head) {\n    \n    const getSize = (head) => {\n        let count = 0\n        let current = head\n        \n        while (current) {\n            count++\n            current = current.next\n        }\n        \n        return count\n    }\n    \n    let size = getSize(head)\n    \n    if (size % 2 === 0) {\n        size = (size/2)\n        \n    } else if (size % 2 !== 0) {\n        size = ((size-1)/2)\n    }\n    \n    \n    const traverse = (head, length) => {\n        let count = length\n        let current = head\n        \n        while (current) {\n            if (count === 0) break\n            count--\n            current = current.next\n        }\n        \n        return current\n    }\n    \n    return traverse(head, size)\n};","compare_result":"111111111111111111111111111111111111","title_slug":"middle-of-the-linked-list","has_notes":false}