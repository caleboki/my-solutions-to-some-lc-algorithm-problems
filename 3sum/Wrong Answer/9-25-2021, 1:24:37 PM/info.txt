{"id":560829269,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 9 months","timestamp":1632590677,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/560829269/","is_pending":"Not Pending","title":"3Sum","memory":"N/A","code":"/**\n * @param {number[]} nums\n * @return {number[][]}\n */\nvar threeSum = function(nums) {\n    \n    //sorting required to check for duplicates more efficiently \n    nums = nums.sort((a, b) => {\n        return (a-b)\n    })\n    \n    const res = []\n    \n    const twoSum = (pos) => {\n        const seen = new Set()\n        \n        for (let j = pos + 1; j < nums.length; j++) {\n            \n            //checking if value is in map/set and making sure of no duplicates in next                     // value (j+1)\n            \n            if (seen.has(nums[j]) ) {\n                res.push([nums[pos], nums[j], -nums[pos]-nums[j]])\n            }\n            seen.add(-nums[pos]-nums[j])\n            \n        }\n    }\n    \n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) break\n        \n        if (nums[i] === nums[i-1]) continue //checking for duplicates in previous value\n        \n        twoSum(i)\n    }\n    \n    return res\n    \n    \n   \n    \n};\n\n// var twoSum = function(nums, target) {\n//     var pairs = {};\n//     var len = nums.length;\n    \n//     for (let i = 0; i < len; i++) {\n//         if (nums[i] in pairs) return [pairs[nums[i]], i];\n        \n//         pairs[target-nums[i]] = i;\n//     }\n// };","compare_result":"111111111111111110111111101111001110011101011110000101100000010000011100100011001110100110100110011010110100011000100001111110000100000000000001000000000101000100000000000100010100000000000110000000000001010000010000101110100000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"3sum","has_notes":false}