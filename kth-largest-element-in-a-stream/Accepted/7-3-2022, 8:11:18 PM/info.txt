{"id":737811939,"lang":"javascript","lang_name":"JavaScript","time":"11 months, 3 weeks","timestamp":1656893478,"status":10,"status_display":"Accepted","runtime":"3667 ms","url":"/submissions/detail/737811939/","is_pending":"Not Pending","title":"Kth Largest Element in a Stream","memory":"57 MB","code":"/**\n * @param {number} k\n * @param {number[]} nums\n */\n// var KthLargest = function(k, nums) {\n    \n// };\n\n// /** \n//  * @param {number} val\n//  * @return {number}\n//  */\n// KthLargest.prototype.add = function(val) {\n    \n// };\n\n/** \n * Your KthLargest object will be instantiated and called as such:\n * var obj = new KthLargest(k, nums)\n * var param_1 = obj.add(val)\n */\n\nclass KthLargest {\n    \n    constructor(k, nums) {\n        this.nums = nums\n        this.k = k\n    }\n    \n    add(val) {\n        this.nums.push(val)\n        \n        this.nums.sort((a, b) => {return b - a})\n      \n        return this.nums[this.k - 1]\n    } \n}","compare_result":"1111111111","title_slug":"kth-largest-element-in-a-stream","has_notes":false}