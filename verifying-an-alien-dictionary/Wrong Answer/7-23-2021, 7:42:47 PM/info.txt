{"id":527279345,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 11 months","timestamp":1627083767,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/527279345/","is_pending":"Not Pending","title":"Verifying an Alien Dictionary","memory":"N/A","code":"/**\n * @param {string[]} words\n * @param {string} order\n * @return {boolean}\n */\nvar isAlienSorted = function(words, order) {\n    let map = {}\n    let result = []\n    \n    for (let i = 0; i < order.length; i++) {\n        map[order[i].charCodeAt(0) - 97] = i\n    }\n    \n    for (let i = 1; i < words.length; i++) {\n        if (compare(map, words[i - 1], words[i]) > 0) return false\n    }\n    \n    return true\n    \n    //console.log(map)\n};\n\nfunction compare(map, word1, word2) {\n    let i = 0, j = 0, compareValue = 0\n    \n    while(i < word1.length && j < word2.length && compareValue === 0) {\n        compareValue = map[word1.charCodeAt(0) - 97] - map[word2.charCodeAt(0) - 97]\n        \n        i++, j++\n    }\n    \n    if (compareValue === 0) {\n        return (word1.length - word2.length)\n    } else {\n        return compareValue\n    }\n        \n    \n}","compare_result":"10111111111111111111111111111101111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"verifying-an-alien-dictionary","has_notes":false}