{"id":527350400,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 11 months","timestamp":1627101461,"status":10,"status_display":"Accepted","runtime":"92 ms","url":"/submissions/detail/527350400/","is_pending":"Not Pending","title":"Verifying an Alien Dictionary","memory":"41.1 MB","code":"/**\n * @param {string[]} words\n * @param {string} order\n * @return {boolean}\n */\n// var isAlienSorted = function(words, order) {\n//     let map = {}\n//     let result = []\n    \n//     for (let i = 0; i < order.length; i++) {\n//         map[order[i].charCodeAt(0) - 97] = i\n//     }\n    \n//     for (let i = 1; i < words.length; i++) {\n//         if (compare(map, words[i - 1], words[i]) > 0) return false\n//     }\n//     console.log(map)\n//     return true\n// };\n\n// function compare(map, word1, word2) {\n//     let i = 0, j = 0, compareValue = 0\n    \n//     while(i < word1.length && j < word2.length && compareValue === 0) {\n//         compareValue = map[word1.charCodeAt(0) - 97] - map[word2.charCodeAt(0) - 97]\n//         i++, j++\n//     }\n    \n//     if (compareValue === 0) {\n//         return (word1.length - word2.length)\n//     } else {\n//         return compareValue\n//     }\n// }\n\nvar isAlienSorted = function(words, order) {\n    const dict = new Map();\n    for(let i = 0; i < order.length; ++i) {\n        dict.set(order[i], i);\n    }\n    console.log(dict)\n    for (let i = 1; i < words.length; i++) {\n        const word1 = words[i - 1]\n        const word2 = words[i]\n        \n        // compare the adjacent words, cases to consider:\n\t\t// case 1: w1 and w2 have same letters e.g w1 = apple and w2 = app\n\t\t// case 2: both are lexicographically sorted e.g w1 = hello and w2 = leetcode\n\t\t// case 3: both are not lexicographically sorted e.g w1 = leetcode and w2 = hello\n        \n        let k;\n        for (k = 0; k < word1.length && k < word2.length; k++){\n            // case 2 - break and check the next adjacent words\n            if(dict.get(word1[k]) < dict.get(word2[k])) {\n                break;\n            } else if(dict.get(word1[k]) > dict.get(word2[k])) {// case 3 - return false\n                return false;\n            }\n        }\n        \n        // case 1 - if w1 is longer then return false\n        if(k === word2.length && k < word1.length) {\n            return false\n        }\n    }\n    \n    // this is reached when all the words are checked to their adjacent word and \n\t// means that all the words are lexicographically sorted\n    return true;\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"verifying-an-alien-dictionary","has_notes":false}