{"id":583687022,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 7 months","timestamp":1636330996,"status":10,"status_display":"Accepted","runtime":"92 ms","url":"/submissions/detail/583687022/","is_pending":"Not Pending","title":"Max Consecutive Ones III","memory":"43.3 MB","code":"/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number}\n */\n\n\nvar longestOnes = function(nums, k) {\n    let j = 0, maxRepeatOnes = 0, max = 0\n    \n    \n    // Try to extend the range [j, i]\n    for (let i = 0; i < nums.length; i++) {\n        //count 1s\n        if (nums[i] === 1) maxRepeatOnes++\n        \n        \n        //Current window size is from j to i, overall we have a maximum of 1s\n        //repeating 'maxRepeatOnes' times, this means we can have a window with \n        //'maxRepeatOnes' 1s and the remaining are 0s which should replace with 1s.\n        // now, if the remaining 0s are more than 'k', it is the time to shrink the \n        //window as we are not allowed to replace more than 'k' 0s\n        \n        if ((i-j+1 - maxRepeatOnes) > k) {\n            if (nums[j] === 1) maxRepeatOnes--\n            j++\n        }\n        max = Math.max(max, i-j+1)\n    }\n    return max\n    \n};","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"max-consecutive-ones-iii","has_notes":false}