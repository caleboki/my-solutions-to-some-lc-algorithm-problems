{"id":649014178,"lang":"php","lang_name":"PHP","time":"1Â year, 3Â months","timestamp":1645849621,"status":10,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/649014178/","is_pending":"Not Pending","title":"Add Two Numbers","memory":"19.4 MB","code":"/**\n * Definition for a singly-linked list.\n * class ListNode {\n *     public $val = 0;\n *     public $next = null;\n *     function __construct($val = 0, $next = null) {\n *         $this->val = $val;\n *         $this->next = $next;\n *     }\n * }\n */\n\nclass Solution {\n\n    /**\n     * @param ListNode $l1\n     * @param ListNode $l2\n     * @return ListNode\n     */\n    function addTwoNumbers($l1, $l2) {\n        return $this->addTwoNumbersWithCarry($l1, $l2);\n    }\n\n    public function addTwoNumbersWithCarry(?ListNode $l1, ?ListNode $l2, int $carry = 0): ListNode\n    {\n        $x = $y = 0;\n\t\t$n1 = $n2 = null;\n\n        if ($l1) {\n            $x = $l1->val;\n            $n1 = $l1->next;\n        }\n\n        if ($l2) {\n            $y = $l2->val;\n            $n2 = $l2->next;\n        }\n\n        $sum = $x + $y + $carry;\n        $carry = $sum > 9 ? 1 : 0;\n\n        $node = new ListNode($sum % 10);\n\n        if ($n1 || $n2 || $carry) {\n            $node->next = $this->addTwoNumbersWithCarry($n1, $n2, $carry);\n        }\n\n        return $node;\n    }\n}\n// class Solution {\n\n//     /**\n//      * @param ListNode $l1\n//      * @param ListNode $l2\n//      * @return ListNode\n//      */\n//     function addTwoNumbers($l1, $l2) {\n//         $num1 = '';\n//         $num2 = '';\n//         $result = '';\n//         $carrying = false;\n//         $head;\n        \n//         //convert linkedlists l1 and l2 to strings\n//         while($l1) {\n//             $num1 = $num1.$l1->val;\n//             $l1 = $l1->next;\n//         }\n        \n//         while($l2) {\n//             $num2 = $num2.$l2->val;\n//             $l2 = $l2->next;\n//         }\n        \n        \n//         $num1 = strrev($num1);\n//         $num2 = strrev($num2);\n        \n        \n//         while(strlen($num1) !== 0 || strlen($num2) !== 0) {\n//             print((int)substr($num1, strlen($num1)-1));\n            \n//             $num = (int)(substr($num1, strlen($num1)-1) || 0) + (int)(substr($num2, strlen($num2)-1) || 0) + (+$carrying);\n            \n//             $carrying = ($num >= 10);\n            \n            \n//             $result = strval(explode(\" \", strval($num))[1] || $num).$result;\n//             $num1 = substr($num1, 0, -1);\n//             $num2 = substr($num2, 0, -1);\n//         }\n//         $result = $carrying ? '1'.$result: $result;\n        \n//         //Convert result to linkedlist\n//         for ($i = 0; $i < strlen($result); $i++) {\n//             $head = new ListNode($result[$i], $head);\n//         }\n        \n//         return $head;\n        \n//     }\n// }\n\n","compare_resulttitle_slug":"add-two-numbers","has_notes":false}