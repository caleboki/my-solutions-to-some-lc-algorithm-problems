{"id":668673125,"lang":"typescript","lang_name":"TypeScript","time":"1Â year, 2Â months","timestamp":1648434490,"status":10,"status_display":"Accepted","runtime":"189 ms","url":"/submissions/detail/668673125/","is_pending":"Not Pending","title":"Add Two Numbers","memory":"50.5 MB","code":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     val: number\n *     next: ListNode | null\n *     constructor(val?: number, next?: ListNode | null) {\n *         this.val = (val===undefined ? 0 : val)\n *         this.next = (next===undefined ? null : next)\n *     }\n * }\n */\n\nfunction addTwoNumbers(l1: ListNode | null, l2: ListNode | null): ListNode | null {\n    let num1 = '', num2 = '', result = '', carrying = false, head\n    \n    while (l1) {\n        num1 = num1+l1.val\n        l1 = l1.next\n    }\n    \n    while (l2) {\n        num2 = num2+l2.val\n        l2 = l2.next\n    }\n    \n    //reversing the order of the digits then converting back to string\n    num1 = num1.split('').reverse().join('')\n    num2 = num2.split('').reverse().join('')\n    \n    //Add strings\n    while (num1.length || num2.length) {\n        //console.log(parseInt(num2.substring(num2.length - 1) || 0))\n        \n        let num = parseInt(num1.substring(num1.length - 1) || '0')\n        +\n        parseInt(num2.substring(num2.length - 1) || '0')\n        +\n        (+carrying)\n  \n        carrying = (num >= 10)\n        \n        result = `${num.toString().split('')[1] || num}${result}`\n        num1 = num1.slice(0, -1)\n        num2 = num2.slice(0, -1)\n    }\n    result = carrying ? `1${result}`: result\n    \n    //Convert result to linkedlist\n    for (let i of result) {\n        head = new ListNode(parseInt(i), head)\n    }\n    \n    return head\n\n};\n\n\n\n","compare_resulttitle_slug":"add-two-numbers","has_notes":false}