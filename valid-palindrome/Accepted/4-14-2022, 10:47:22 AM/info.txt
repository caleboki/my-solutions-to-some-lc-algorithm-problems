{"id":680287713,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 2 months","timestamp":1649947642,"status":10,"status_display":"Accepted","runtime":"65 ms","url":"/submissions/detail/680287713/","is_pending":"Not Pending","title":"Valid Palindrome","memory":"44.6 MB","code":"/**\n * @param {string} s\n * @return {boolean}\n */\n// var isPalindrome = function(s) {\n//     let clean = s.replace(/[^0-9a-z]/gi, '').toLowerCase();\n    \n//     let letters = [];\n//     let rword = \"\";\n  \n//     for (let i = 0; i < clean.length; i++) {\n//         letters.push(clean[i]);\n//      }\n  \n//     for (let i = 0; i < clean.length; i++) {\n//         rword += letters.pop();\n//     }\n  \n//     if (clean === rword) return true;\n    \n//     return false;\n    \n    \n    \n// };\n\n\nvar isPalindrome = function(s) {\n    let clean = s.replace(/[^0-9a-z]/gi, '').toLowerCase();\n    \n    let l = 0, r = clean.length - 1\n    \n    while (l <= r) {\n        if (clean[l] === clean[r]) {\n            l++, r--\n        } else {\n            return false\n        }\n    }\n    \n    return true\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"valid-palindrome","has_notes":false}