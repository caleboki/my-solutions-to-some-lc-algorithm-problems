{"id":892368025,"lang":"php","lang_name":"PHP","time":"4 months, 2 weeks","timestamp":1675651987,"status":10,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/892368025/","is_pending":"Not Pending","title":"Valid Palindrome","memory":"20.1 MB","code":"class Solution {\n\n    /**\n     * @param String $s\n     * @return Boolean\n     */\n    function isPalindrome($s) {\n        $clean = strtolower(preg_replace(\"/[^0-9a-z]/i\", \"\", $s));\n\n        $l = 0;\n        $r = strlen($clean)-1;\n        \n        while ($l <= $r) {\n            if ($clean[$l] !== $clean[$r]) {\n                return false;\n            }\n            $l++;\n            $r--;\n\n        }\n        return true;\n        \n        \n    }\n}\n\n// var isPalindrome = function(s) {\n//     let clean = s.replace(/[^0-9a-z]/gi, '').toLowerCase();\n    \n//     let l = 0, r = clean.length - 1\n    \n//     while (l <= r) {\n//         if (clean[l] !== clean[r]) {\n//             return false\n//         }\n//         l++, r--\n//     }\n    \n//     return true\n// };","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"valid-palindrome","has_notes":false}