{"id":567046725,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 8 months","timestamp":1633565025,"status":10,"status_display":"Accepted","runtime":"108 ms","url":"/submissions/detail/567046725/","is_pending":"Not Pending","title":"Delete Node in a BST","memory":"47.7 MB","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @param {number} key\n * @return {TreeNode}\n */\n\n\nvar deleteNode = function (root, key) {\n    if (!root) return root\n    \n    const findMin = (subroot, nodeValues = []) => {\n        if (!subroot) return\n        \n        findMin(subroot.left, nodeValues)\n        nodeValues.push(subroot.val)\n        findMin(subroot.right, nodeValues)\n     \n        return nodeValues[0]\n    }\n    \n    if (key < root.val) {\n        root.left = deleteNode(root.left, key)\n    } else if (key > root.val) {\n        root.right = deleteNode(root.right, key)\n    } else {\n        //Case 1 there is no child\n        if (!root.left && !root.right) {\n            root = null\n        }\n        \n        //Case 2 there is one child\n        if (root && !root.left) { \n            root = root.right\n            return root\n        }\n        \n        if (root && !root.right) {\n            root = root.left\n            return root\n        }\n        \n        //Case 3 there are two children\n        if (root && root.left && root.right) {\n            let temp = findMin(root.right)\n            //set data I am trying to delete as the value returned from temp\n            root.val = temp \n            root.right = deleteNode(root.right, temp)\n        }\n        \n    }\n    return root\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"delete-node-in-a-bst","has_notes":false}