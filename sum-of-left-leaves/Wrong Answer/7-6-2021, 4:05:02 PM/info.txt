{"id":518424986,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 11 months","timestamp":1625601902,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/518424986/","is_pending":"Not Pending","title":"Sum of Left Leaves","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nvar sumOfLeftLeaves = function(root) {\n  let sum = 0\n  \n  const preOrderTraversal = (node) => {\n      if (!node) return\n      \n      if (node.left !== null) sum += node.left.val\n      \n      preOrderTraversal(node.left)\n      preOrderTraversal(node.right)\n  }\n  \n  preOrderTraversal(root)\n  return sum\n    \n    \n};","compare_result":"1111100101010000010000000000000001111010110000110000101100000000000000010110000000000000110000101100","title_slug":"sum-of-left-leaves","has_notes":false}