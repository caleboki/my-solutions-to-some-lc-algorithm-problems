{"id":518461125,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 11 months","timestamp":1625609015,"status":10,"status_display":"Accepted","runtime":"84 ms","url":"/submissions/detail/518461125/","is_pending":"Not Pending","title":"Sum of Left Leaves","memory":"41 MB","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\n// var sumOfLeftLeaves = function(root) {\n//   let sum = 0\n  \n//   const preOrderTraversal = (node) => {\n//       if (!node) return\n      \n//       if (node.left !== null) sum += node.left.val\n//       console.log(node.left)\n//       preOrderTraversal(node.left)\n//       preOrderTraversal(node.right)\n//   }\n  \n//   preOrderTraversal(root)\n//   return sum \n// };\n\nvar sumOfLeftLeaves = function(root) {\n    if (root === null) return 0\n    \n    const preOrderTraversal = (subtree, isLeft) => {\n        if (subtree.left === null && subtree.right === null) return isLeft ? subtree.val : 0\n        \n        let sum = 0\n        if (subtree.left !== null) sum += preOrderTraversal(subtree.left, true)\n        if (subtree.right !== null) sum += preOrderTraversal(subtree.right, false)\n        \n        return sum  \n    }\n    \n    return preOrderTraversal(root, false)\n    \n}\n\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-left-leaves","has_notes":false}