{"id":567377491,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 8 months","timestamp":1633619229,"status":10,"status_display":"Accepted","runtime":"188 ms","url":"/submissions/detail/567377491/","is_pending":"Not Pending","title":"Find the Duplicate Number","memory":"48.6 MB","code":"/**\n * @param {number[]} nums\n * @return {number}\n */\n// var findDuplicate = function(nums) {\n//     nums.sort(function (a, b) {\n//         return a-b\n//     })\n    \n//     for (let i = 0; i < nums.length; i++) {\n//         if (nums[i] === nums[i-1] || nums[i] === nums[i+1]) return nums[i]\n//     }\n// };\n\nvar findDuplicate = function(nums) {\n    let low = 1\n    let high = nums.length - 1\n    \n    while (low < high){\n        let count = 0\n        const mid = low + (high-low) / 2\n        for (let num of nums){\n            if (num<=mid){\n                count++\n            }\n        }\n        if (count <= mid){\n            low = mid + 1\n        }\n        else {\n            high = mid\n        }\n    }\n    return Math.floor(low)\n\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"find-the-duplicate-number","has_notes":false}