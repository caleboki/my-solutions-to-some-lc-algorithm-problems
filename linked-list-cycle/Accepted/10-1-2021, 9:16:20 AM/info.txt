{"id":563999475,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 8 months","timestamp":1633094180,"status":10,"status_display":"Accepted","runtime":"84 ms","url":"/submissions/detail/563999475/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"43.3 MB","code":"/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n\n/**\n * @param {ListNode} head\n * @return {boolean}\n */\nvar hasCycle = function(head) {\n    let current = head\n    let seen = new Map()\n    \n    while(current) {\n        seen.set(current)\n        if (seen.has(current.next)) return true\n        current = current.next\n    }\n    return false\n    \n};","compare_result":"11111111111111111111","title_slug":"linked-list-cycle","has_notes":false}