{"id":681670598,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 2 months","timestamp":1650135929,"status":10,"status_display":"Accepted","runtime":"65 ms","url":"/submissions/detail/681670598/","is_pending":"Not Pending","title":"Intersection of Two Arrays","memory":"42.8 MB","code":"/**\n * @param {number[]} nums1\n * @param {number[]} nums2\n * @return {number[]}\n */\nvar intersection = function(nums1, nums2) {\n    let visited = new Set()\n    let unique = new Set()\n    \n    for (let i = 0; i < nums1.length; i++) {\n        visited.add(nums1[i])\n    }\n    \n    for (let j = 0; j < nums2.length; j++) {\n        if (visited.has(nums2[j])) unique.add(nums2[j])\n    }\n    return [...unique]\n};\n\n//Alternative if one array is considerable longer than the other-O(mlogn)\n// var intersection = function(nums1, nums2) {\n//     nums1.sort((a, b) => {return a-b})\n//     nums2.sort((a, b) => {return a-b})\n//     let result = new Set()\n    \n//     const binarySearch = (arr, k) => {\n//         let l = 0, r = arr.length - 1\n        \n//         while (l <= r) {\n//             let mid = Math.floor((l+r)/2)\n//             if (arr[mid] === k) {\n//                 return true\n//             } else if (k < arr[mid]) {\n//                 r = mid - 1\n//             } else {\n//                 l = mid + 1\n//             }\n//         }\n//         return false\n//     }\n    \n//     for (let num of nums1) {\n        \n//         if (binarySearch(nums2, num)) result.add(num)\n//     }\n    \n//     return [...result]\n// };","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"intersection-of-two-arrays","has_notes":false}