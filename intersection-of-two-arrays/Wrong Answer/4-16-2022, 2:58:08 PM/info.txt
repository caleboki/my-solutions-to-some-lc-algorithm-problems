{"id":681666650,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 2 months","timestamp":1650135488,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/681666650/","is_pending":"Not Pending","title":"Intersection of Two Arrays","memory":"N/A","code":"/**\n * @param {number[]} nums1\n * @param {number[]} nums2\n * @return {number[]}\n */\n// var intersection = function(nums1, nums2) {\n//     let visited = new Set()\n//     let unique = new Set()\n    \n//     for (let i = 0; i < nums1.length; i++) {\n//         visited.add(nums1[i])\n//     }\n    \n//     for (let j = 0; j < nums2.length; j++) {\n//         if (visited.has(nums2[j])) unique.add(nums2[j])\n//     }\n//     return [...unique]\n// };\n\n\nvar intersection = function(nums1, nums2) {\n    nums1.sort((a, b) => {return a-b})\n    nums2.sort((a, b) => {return a-b})\n    let result = new Set()\n    \n    const binarySearch = (arr, k) => {\n        let l = 0, r = arr.length - 1\n        \n        while (l <= r) {\n            let mid = Math.floor((l+r)/2)\n            if (arr[mid] === k) {\n                return true\n            } else if (k < arr[l]) {\n                r = mid - 1\n            } else {\n                l = mid + 1\n            }\n        }\n        return false\n    }\n    \n    for (let num of nums1) {\n        if (binarySearch(nums2, num) === true) result.add(num)\n    }\n    \n    return [...result]\n    \n    \n};","compare_result":"1011111111111101010111010100000011000000000000000000000","title_slug":"intersection-of-two-arrays","has_notes":false}