{"id":509810194,"lang":"javascript","lang_name":"JavaScript","time":"2Â years","timestamp":1624040407,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/509810194/","is_pending":"Not Pending","title":"Permutation in String","memory":"N/A","code":"/**\n * @param {string} s1\n * @param {string} s2\n * @return {boolean}\n */\n// var checkInclusion = function(s1, s2) {\n//     if (s1.length > s2.length) return false\n//     if (s2.includes(s1)) return true\n    \n//     let perm = findPermutations(s1)\n    \n//     for (let i = 0; i < perm.length; i++) {\n//         if (s2.includes(perm[i])) return true\n//     }\n//     return false\n// };\n\n// let findPermutations = (string) => {\n    \n//     if (string.length < 2) return [string]\n//     let permutationsArray = []\n    \n//     for (let i = 0; i < string.length; i++) {\n//         let char = string[i]\n//         let remainingChars = string.slice(0, i) + string.slice(i+1, string.length)\n        \n//         for (let permutation of findPermutations(remainingChars)) {\n//             permutationsArray.push(char + permutation)\n//         }\n//     }\n//     return permutationsArray\n// }\n\nvar checkInclusion = function(s1, s2) {\n    if ((s1.length > s2.length) || s2.length === 0) return false\n    if (s1.length === 0) return true\n    \n    let s1map = {}\n    \n    for (s of s1) {\n        if (s1map[s] !== undefined) {\n            s1map[s]++\n        } else {\n            s1map[s] = 1\n        }\n    }\n    \n    let s1mapKeys = Object.keys(s1map).sort()\n    let s1mapValues = Object.values(s1map).sort(function(a, b){return a - b})\n    \n    \n    for (let i = 0; i < s2.length; i++) {\n        let s2map = {}\n        let sub = s2.substring(i, i+s1.length )\n        \n        for (s of sub) {\n            if (s2map[s] !== undefined)  {\n                s2map[s]++\n            } else {\n                s2map[s] = 1\n            }\n            \n            let keys = Object.keys(s2map)\n            let values = Object.values(s2map)\n            \n            keys.sort()\n            values.sort(function(a, b){return a - b})\n            \n            if (keys.every((v, i) => v === s1mapKeys[i]) && values.every((v, i) => v === s1mapValues[i])) return true\n            \n            \n          \n            console.log(keys)\n        }\n    }\n    return false\n};","compare_result":"1011111010111111100001110111100011111111111111101010110101111111111100000000000000000000000000000000000000","title_slug":"permutation-in-string","has_notes":false}