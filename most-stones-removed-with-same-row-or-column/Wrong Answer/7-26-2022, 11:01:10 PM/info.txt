{"id":757744227,"lang":"javascript","lang_name":"JavaScript","time":"11Â months","timestamp":1658890870,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/757744227/","is_pending":"Not Pending","title":"Most Stones Removed with Same Row or Column","memory":"N/A","code":"/**\n * @param {number[][]} stones\n * @return {number}\n */\nvar removeStones = function(stones) {\n    let count = 0, visited = new Set()\n    \n    const buildGraph = (edges, graph = {}) => {\n        for (let stone of stones) {\n            let [row, col] = stone\n            \n            if (!(row in graph)) graph[row] = []\n            if (!(col in graph)) graph[col] = []\n            \n            graph[row].push(col)\n            graph[col].push(row)\n            \n        }\n        return graph\n    }\n    \n    let graph = buildGraph(stones)\n    \n    const dfs = (graph, startNode, visited) => {\n        if (visited.has(String(startNode))) return false\n        visited.add(String(startNode))\n        \n        for (let node of graph[startNode]) {\n            dfs(graph, node, visited)\n        }\n        return true\n    }\n    \n    for (let i in graph) {\n        if (dfs(graph, i, visited)) count++\n    }\n    console.log(stones.length)\n    console.log(count)\n    return stones.length - count\n    \n};\n\n\n","compare_result":"11111011111001110000000000101111000010000000000000000000000000000000","title_slug":"most-stones-removed-with-same-row-or-column","has_notes":false}