{"id":758066223,"lang":"javascript","lang_name":"JavaScript","time":"11Â months","timestamp":1658922516,"status":10,"status_display":"Accepted","runtime":"394 ms","url":"/submissions/detail/758066223/","is_pending":"Not Pending","title":"Most Stones Removed with Same Row or Column","memory":"48.7 MB","code":"/**\n * @param {number[][]} stones\n * @return {number}\n */\n//Answer = number of stones - number of connected components\nconst removeStones = stones => {\n\tconst visited = new Set()\n\tlet valid = 0\n\n  // find and remove stones that have same row and col\n\tconst traverse = (row, col) => {\n\t\tconst key = `${row}-${col}`\n\n\t\tif (visited.has(key)) return\n\n\t\tvisited.add(key) // mark visited\n\t\tfor (const [x, y] of stones) {\n\t\t\t// if row or col is same, should be removed\n\t\t\tif (row === x || col === y) traverse(x, y);\n\t\t}\n\t};\n\n\tfor (const [x, y] of stones) {\n\t\tconst key = `${x}-${y}`\n\n\t\tif (visited.has(key)) continue\n\n\t\ttraverse(x, y)\n\t\tvalid++\n\t}\n\n  // subtract number of valid nodes from total number of stones\n\treturn stones.length - valid;\n};\n\n// const removeStones = (stones) => {\n//     let visited = new Set(), count = 0\n    \n//     const buildGraph = (edges, map = new Map()) => {\n//         for (let i = 0; i < edges.length; i++) {\n//             map.set(i, [])\n            \n//             let [parent, child] = edges[i]\n            \n//             if (map.has(parent)) map.get(parent).push(child)\n//         }\n        \n//         return map\n//     }\n    \n//     let graph = buildGraph(stones)\n//     console.log(graph)\n    \n//     return stones.length - count\n// }","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"most-stones-removed-with-same-row-or-column","has_notes":false}