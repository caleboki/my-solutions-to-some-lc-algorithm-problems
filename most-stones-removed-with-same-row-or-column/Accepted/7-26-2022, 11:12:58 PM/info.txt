{"id":757751048,"lang":"javascript","lang_name":"JavaScript","time":"11Â months","timestamp":1658891578,"status":10,"status_display":"Accepted","runtime":"290 ms","url":"/submissions/detail/757751048/","is_pending":"Not Pending","title":"Most Stones Removed with Same Row or Column","memory":"49.8 MB","code":"/**\n * @param {number[][]} stones\n * @return {number}\n */\nconst removeStones = stones => {\n\tconst visited = new Set();\n\tlet valid = 0;\n\n  // find and remove stones that have same row and col\n\tconst traverse = (row, col) => {\n\t\tconst key = `${row}-${col}`;\n\n\t\tif (visited.has(key)) return;\n\n\t\tvisited.add(key); // mark visited\n\t\tfor (const [x, y] of stones) {\n\t\t\t// if row or col is same, should be removed\n\t\t\tif (row === x || col === y) traverse(x, y);\n\t\t}\n\t};\n\n\tfor (const [x, y] of stones) {\n\t\tconst key = `${x}-${y}`;\n\n\t\tif (visited.has(key)) continue;\n\n\t\ttraverse(x, y);\n\t\tvalid++;\n\t}\n\n  // subtract number of valid nodes from total number of stones\n\treturn stones.length - valid;\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"most-stones-removed-with-same-row-or-column","has_notes":false}