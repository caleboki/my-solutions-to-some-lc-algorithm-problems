{"id":726920527,"lang":"javascript","lang_name":"JavaScript","time":"1Â year","timestamp":1655746946,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/726920527/","is_pending":"Not Pending","title":"Binary Tree Zigzag Level Order Traversal","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number[][]}\n */\nvar zigzagLevelOrder = function(root) {\n    let res = [[]]\n    \n    const dfs = (node, i) => {\n        if (!node) return\n        \n        if (!res[i]) res.push([])\n        \n        if (i % 2 === 0) {\n            res[i].push(node.val)\n        } else {\n            res[i].unshift(node.val)\n        }\n        \n        dfs(node.left, i+1)\n        dfs(node.right, i+1)\n        \n\n    }\n    \n    dfs(root, 0)\n    return res\n    \n    \n    \n};","compare_result":"110111111111111111111111111111111","title_slug":"binary-tree-zigzag-level-order-traversal","has_notes":false}