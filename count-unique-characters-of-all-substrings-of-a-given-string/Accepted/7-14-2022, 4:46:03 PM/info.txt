{"id":747250953,"lang":"javascript","lang_name":"JavaScript","time":"11 months, 1 week","timestamp":1657831563,"status":10,"status_display":"Accepted","runtime":"161 ms","url":"/submissions/detail/747250953/","is_pending":"Not Pending","title":"Count Unique Characters of All Substrings of a Given String","memory":"50 MB","code":"/**\n * @param {string} s\n * @return {number}\n */\n// var uniqueLetterString = function(s) {\n//     let result = 0, map = new Map()\n    \n//     for (let i in s) {\n//         if (!map.has(s[i])) {\n//             map.set(s[i], [i])\n//         } else {\n//             let newV = map.get(s[i])\n//             newV.push(i)\n//             map.set(s[i], newV)\n//         }\n//     }\n\n//     console.log(map)\n//     let keys = Array.from(map.keys())\n    \n//     for (let j of keys) {\n//         let lastIdx = +map.get(j)[0]\n//         let lastRange = +map.get(j)[0] + 1\n        \n//         for (let i = 1; i < map.get(j).length; i++) {\n            \n//         }\n//     }\n    \n//     return result\n    \n// };\n\nconst uniqueLetterString = (s) => {\n    let result = 0\n    const hash = {}\n    \n    for (let i = 0; i < s.length; i++) { // create the hash table contains every letter's index arr.\n        const letter = s[i];\n        if (hash[letter] === undefined) {\n            hash[letter] = [i];\n        } else {\n            hash[letter].push(i);\n        }\n    }\n    \n    for (let letter in hash) {\n        const arr = hash[letter] // the arr contains all indexes the letter present in the string\n        let lastIdx = arr[0]\n        let lastRange = arr[0] + 1 // left part length\n        \n        for (let i = 1; i < arr.length; i++) {\n            const currIdx = arr[i]\n            const currRange = currIdx - lastIdx // get range of current subbarray or right part length\n            result += lastRange * currRange //add to result\n            lastIdx = currIdx //update last index to current index\n            lastRange = currRange // set next left part to be current right part\n        }\n        result += lastRange * (s.length - lastIdx) // don't forget the last calcution \n    }\n    \n    return result\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-unique-characters-of-all-substrings-of-a-given-string","has_notes":false}