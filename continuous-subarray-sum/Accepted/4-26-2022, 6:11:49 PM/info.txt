{"id":688136831,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 1 month","timestamp":1651011109,"status":10,"status_display":"Accepted","runtime":"109 ms","url":"/submissions/detail/688136831/","is_pending":"Not Pending","title":"Continuous Subarray Sum","memory":"54.5 MB","code":"/**\n * @param {number[]} nums\n * @param {number} k\n * @return {boolean}\n */\nvar checkSubarraySum = function (nums, k) {\n\tlet sum = 0, prefix = 0, hash = new Set();\n\t\n\tfor (let i = 0; i < nums.length; i++) {\n\t\tsum += nums[i]\n\n\t\tsum = sum % k\n       \n\t\tif(hash.has(sum)) return true\n\n\t\thash.add(prefix);\n\t\tprefix = sum;\n\t}\n    \n\treturn false\n};\n\n\n// var checkSubarraySum = function (nums, k) {\n//     let sum = 0\n// \tfor (let i = 0; i < nums.length; i++) {\n//         sum += nums[i]\n//         for (let j = i + 1; j < nums.length; j++) {\n//             sum += nums[j]\n//             if ((sum % k) === 0) return true\n            \n//         }\n//         sum = 0\n//     }\n//     return false\n// };\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"continuous-subarray-sum","has_notes":false}