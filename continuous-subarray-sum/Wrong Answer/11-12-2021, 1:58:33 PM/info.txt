{"id":586154104,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 7 months","timestamp":1636743513,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/586154104/","is_pending":"Not Pending","title":"Continuous Subarray Sum","memory":"N/A","code":"/**\n * @param {number[]} nums\n * @param {number} k\n * @return {boolean}\n */\n// var checkSubarraySum = function(nums, k) {\n//     if ((nums.reduce((a, b) => a + b, 0) % k) === 0) return true\n    \n//     let windowStart = 0, multipleSum, windowSum = 0\n    \n//     for (let num in nums) {\n//         //accumulate sum\n//         windowSum += nums[num]\n        \n//         if (num >= 1) {\n//             multipleSum = windowSum\n            \n//             if ((multipleSum % k) === 0) return true\n            \n//             windowSum -= nums[windowStart]\n//             windowStart++\n//         }\n//     }\n//     return false\n// };\n\n\n// var checkSubarraySum = function (nums, k) {\n\n// \tlet sum = 0\n\t\n// \tlet prefix = 0;\n\t\n// \tconst hash = new Set();\n\t\n// \tfor (let i = 0; i < nums.length; i++) {\n// \t\tsum += nums[i]\n\n// \t\tif (k != 0) sum = sum % k\n\n// \t\tif(hash.has(sum)) return true\n\n// \t\thash.add(prefix);\n// \t\tprefix = sum;\n// \t}\n// \treturn false\n// };\n\n\nvar checkSubarraySum = function (nums, k) {\n    let sum = 0\n    \n    for (let num in nums) {\n        sum += nums[num]\n        \n        if (num >= 1) {\n            if ((sum % k === 0)) return true\n        }\n        \n    }\n    return false\n    \n};","compare_result":"11111101111111111111111111111011111110000001000101111011111111111111111011001111111111111111111","title_slug":"continuous-subarray-sum","has_notes":false}