{"id":688091038,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 1 month","timestamp":1651004221,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/688091038/","is_pending":"Not Pending","title":"Continuous Subarray Sum","memory":"N/A","code":"/**\n * @param {number[]} nums\n * @param {number} k\n * @return {boolean}\n */\n// var checkSubarraySum = function (nums, k) {\n// \tlet sum = 0, prefix = 0, hash = new Set();\n\t\n// \tfor (let i = 0; i < nums.length; i++) {\n// \t\tsum += nums[i]\n\n// \t\tsum = sum % k\n        \n// \t\tif(hash.has(sum)) return true\n\n// \t\thash.add(prefix);\n// \t\tprefix = sum;\n// \t}\n    \n// \treturn false\n// };\n\n\nvar checkSubarraySum = function (nums, k) {\n\tlet i = 0, j = 1\n    \n    while (j < nums.length) {\n        if (nums[i] + nums[j] === k) return true\n        i++, j++\n    }\n    return false\n};","compare_result":"10110001011111001101110111100111101100011000000001101100101000000000000000001111111111000000001","title_slug":"continuous-subarray-sum","has_notes":false}