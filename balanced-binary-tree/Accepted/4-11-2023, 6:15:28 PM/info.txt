{"id":932164021,"lang":"javascript","lang_name":"JavaScript","time":"2 months, 1 week","timestamp":1681251328,"status":10,"status_display":"Accepted","runtime":"88 ms","url":"/submissions/detail/932164021/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"48.7 MB","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {boolean}\n */\nvar isBalanced = function(root) {\n    const height = (root) => {\n        if (!root) return -1\n        return 1 + Math.max(height(root.left), height(root.right))\n    }\n\n    if (!root) return true\n\n    if (Math.abs(height(root.left) - height(root.right)) > 1) {\n        return false\n    } \n    return isBalanced(root.left) && isBalanced(root.right)\n    \n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree","has_notes":false}