{"id":575056925,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 8 months","timestamp":1634849616,"status":10,"status_display":"Accepted","runtime":"90 ms","url":"/submissions/detail/575056925/","is_pending":"Not Pending","title":"Decode String","memory":"38.2 MB","code":"/**\n * @param {string} s\n * @return {string}\n */\n// var decodeString = function(s) {\n//     //idea recursion\n//     //use method of flattening srray\n    \n//     let output = ''\n//     let currentStr = ''\n//     let currentNum = 1\n        \n    \n//     for (let i = 0; i < s.length; i++) {\n//         if (Number.isInteger(+s[i] ) && !s[i-1].match(/[a-z]/i)) {\n//             currentNum = s[i]\n//             //continue\n//         }\n        \n//         if (s[i] === '[') continue\n        \n//         if (s[i] === ']') {\n//             output += currentStr.repeat(currentNum)\n//             currentStr = ''\n//         }\n        \n//         if (s[i].match(/[a-z]/i)) {\n//             currentStr += s[i] \n//         }\n        \n//     }\n    \n//     return(output)\n    \n// };\n\n var decodeString = function(s) {\n    const stack = [];\n    \n    for (let letter of s) {\n        if (letter != \"]\") {\n            stack.push(letter);\n        } else {\n            let substr = \"\";\n            while (stack[stack.length - 1] != \"[\")\n                substr = stack.pop() + substr;\n            \n            // remove closing open bracket\n            stack.pop();\n            \n            let k = \"\";\n            \n            while (stack.length && /^\\d+$/.test(stack[stack.length - 1])) \n                k = stack.pop() + k;\n\n            stack.push(substr.repeat(Number(k)))            \n        }\n    }\n    \n    return stack.join(\"\");\n};\n","compare_result":"1111111111111111111111111111111111","title_slug":"decode-string","has_notes":false}