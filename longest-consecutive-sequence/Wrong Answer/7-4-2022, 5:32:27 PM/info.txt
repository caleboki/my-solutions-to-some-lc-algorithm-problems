{"id":738593823,"lang":"javascript","lang_name":"JavaScript","time":"11 months, 3 weeks","timestamp":1656970347,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/738593823/","is_pending":"Not Pending","title":"Longest Consecutive Sequence","memory":"N/A","code":"/**\n * @param {number[]} nums\n * @return {number}\n */\n// var longestConsecutive = function(nums) {\n//     nums = new Set(nums)\n    \n//     let longestStreak = 0\n    \n//     for (let num of nums) {\n//         if (!nums.has(num-1)) {\n//             let currentNum = num\n//             let currentStreak = 1\n            \n//             while (nums.has(currentNum + 1)) {\n//                 currentStreak++\n//                 currentNum++\n//             }\n            \n//             longestStreak = Math.max(longestStreak, currentStreak)\n//         }\n//     }\n    \n//     return longestStreak\n// };\n\nconst longestConsecutive = (nums) => {\n    if (nums.length === 0) return 0\n    nums = nums.sort((a, b) => {return a-b})\n    let max = 1\n    console.log(nums)\n    for (let i = 1; i < nums.length; i++) {\n        if (nums[i] === nums[i-1] + 1) max++\n    }\n    \n    return max\n}","compare_result":"11111111111110000100100000001010000000000000000000000000010100000101110","title_slug":"longest-consecutive-sequence","has_notes":false}