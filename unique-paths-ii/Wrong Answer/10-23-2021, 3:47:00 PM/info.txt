{"id":576004482,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 8 months","timestamp":1635018420,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/576004482/","is_pending":"Not Pending","title":"Unique Paths II","memory":"N/A","code":"/**\n * @param {number[][]} obstacleGrid\n * @return {number}\n */\n// var uniquePathsWithObstacles = function(obstacleGrid) {\n    \n//     const m = obstacleGrid.length, n = obstacleGrid[0].length\n    \n//     if (obstacleGrid[m-1][n-1] === 1) return 0\n//     if (m === 0 || n === 0) return 0\n    \n//     const dfs = (m, n, memo = new Map()) => {\n//         const key = '' + m + n\n//         if (memo.has(key)) return memo.get(key)\n//         if (m === 1 && n === 1) return 1\n//         if (m === 0 || n === 0) return 0\n//         if (obstacleGrid[m-1][n-1] === 1) return 0\n        \n//         memo.set(key, dfs(m-1, n, memo) + dfs(m, n-1, memo))\n//         return memo.get(key)\n//     } \n    \n//     return dfs(m, n)\n    \n  \n// };\n\nvar uniquePathsWithObstacles = function (obstacleGrid) {\n    var memo = {};\n    var m = obstacleGrid.length;\n    var n = obstacleGrid[0].length;\n    if (obstacleGrid[m-1][n-1] === 1) return 0;\n    if (m === 0 || n === 0) return 1;\n\n    function dfs(m, n) {\n        var key = `${m}|${n}`;\n        if (key in memo) return memo[key];\n        if (m === 0 || n === 0) return 0;\n        if (m === 1 && n === 1) return 1;\n        if(obstacleGrid[m-1][n-1] === 1) return 0;\n        return (memo[key] = dfs(m - 1, n) + dfs(m, n - 1));\n    }\n    return dfs(m, n);\n};","compare_result":"11111110111011110111111111011111111111111","title_slug":"unique-paths-ii","has_notes":false}