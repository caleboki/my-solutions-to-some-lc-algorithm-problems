{"id":736238061,"lang":"javascript","lang_name":"JavaScript","time":"11 months, 3 weeks","timestamp":1656725456,"status":10,"status_display":"Accepted","runtime":"93 ms","url":"/submissions/detail/736238061/","is_pending":"Not Pending","title":"Remove All Adjacent Duplicates In String","memory":"51.4 MB","code":"/**\n * @param {string} s\n * @return {string}\n */\n// var removeDuplicates = function(s) {\n    \n//     const removeDuplicates = (s, k) => {\n//         let map = [], sb = ''\n\n//         for (let i = 0; i < s.length; i++) {\n\n//             if (map.length > 0 && map[map.length - 1][0] === s[i]) {\n//                 map[map.length - 1][1]++\n//             } else {\n//                 map.push([s[i], 1])\n//             }\n\n//             if (map[map.length - 1][1] === k) map.pop()\n//         }\n\n//         for (let i in map) {\n//             sb += map[i][0].repeat(map[i][1])\n//         }\n    \n//         return sb\n//     };\n    \n//     return removeDuplicates(s, 2)\n// };\n\nconst removeDuplicates = (s) => {\n    let stack = []\n    \n    for (let alpha of s) {\n        if (stack[stack.length - 1] === alpha) {\n            stack.pop()\n        } else {\n            stack.push(alpha)\n        }\n    }\n    \n    return stack.join('')\n}\n\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-all-adjacent-duplicates-in-string","has_notes":false}