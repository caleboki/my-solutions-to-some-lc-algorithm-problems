{"id":934888312,"lang":"javascript","lang_name":"JavaScript","time":"2 months, 1 week","timestamp":1681673198,"status":10,"status_display":"Accepted","runtime":"61 ms","url":"/submissions/detail/934888312/","is_pending":"Not Pending","title":"Binary Search","memory":"45.6 MB","code":"/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number}\n */\n// var search = function(nums, target) {\n//     let l = 0, r = nums.length - 1, mid\n    \n//     while (l <= r) {\n//         mid = Math.floor((l+r)/2)\n        \n//         if (nums[mid] === target) {\n//             return mid\n//         } else if (target < nums[mid]) {\n//             r = mid - 1\n//         } else {\n//             l = mid + 1\n//         }\n//     }\n//     return -1\n// };\n\nconst search = (nums, target) => {\n    const binarySearch = (array, x, left, right) => {\n        if (left > right) return -1\n        let mid = Math.floor((left + right)/2)\n        \n        if (array[mid] === x) return mid\n        if (x < array[mid]) return binarySearch(array, x, left, mid-1)\n        if (x > array[mid]) return binarySearch(array, x, mid+1, right)\n    }\n\n    return binarySearch(nums, target, 0, nums.length-1)\n}","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"binary-search","has_notes":false}