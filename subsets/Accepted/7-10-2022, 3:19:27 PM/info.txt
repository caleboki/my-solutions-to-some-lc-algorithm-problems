{"id":743654347,"lang":"javascript","lang_name":"JavaScript","time":"11 months, 2 weeks","timestamp":1657480767,"status":10,"status_display":"Accepted","runtime":"102 ms","url":"/submissions/detail/743654347/","is_pending":"Not Pending","title":"Subsets","memory":"44.1 MB","code":"/**\n * @param {number[]} nums\n * @return {number[][]}\n */\n// var subsets = function(nums) {\n//     let output = [[]]\n    \n//     for (let num of nums) {\n//         let length = output.length\n        \n//         for (let i = 0; i < length; i++) {\n//             output.push([...output[i], num])\n//         }\n//     }\n//     return output \n// };\n\n// Let's start from empty subset in output list. At each step one takes new integer into consideration and generates new subsets from the existing ones.\nconst subsets = (nums) => {\n    let result = [[]]\n    \n    for (let num of nums) {\n        let length = result.length\n        for (let i = 0; i < length; i++) {\n            result.push([...result[i], num])\n        } \n    }\n    return result\n}","compare_result":"1111111111","title_slug":"subsets","has_notes":false}