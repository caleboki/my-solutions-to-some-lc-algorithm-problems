{"id":507820088,"lang":"javascript","lang_name":"JavaScript","time":"2Â years","timestamp":1623681913,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/507820088/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {TreeNode}\n */\nvar invertTree = function(root) {\n    if (!root) return []\n    \n    let temp = root.left\n    root.left = root.right\n    root.right = temp\n    \n    invertTree(root.left)\n    invertTree(root.right)\n    \n    return root\n    \n};","compare_result":"11000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"invert-binary-tree","has_notes":false}