{"id":788459139,"lang":"javascript","lang_name":"JavaScript","time":"9 months, 3 weeks","timestamp":1661999726,"status":10,"status_display":"Accepted","runtime":"92 ms","url":"/submissions/detail/788459139/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"42.4 MB","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {TreeNode}\n */\nvar invertTree = function(root) {\n    if (!root) return null\n    \n    let queue = [root]\n    \n    while (queue.length) {\n        let current = queue.shift()\n        \n        let temp = current.left\n        current.left = current.right || null\n        current.right = temp\n        \n        if (current.left) queue.push(current.left)\n    \n        if (current.right) queue.push(current.right)\n        \n        \n    }\n    return root\n    \n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"invert-binary-tree","has_notes":false}