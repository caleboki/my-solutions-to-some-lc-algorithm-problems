{"id":475974734,"lang":"javascript","lang_name":"JavaScript","time":"2 years, 2 months","timestamp":1617468055,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/475974734/","is_pending":"Not Pending","title":"Palindrome Permutation","memory":"N/A","code":"/**\n * @param {string} s\n * @return {boolean}\n */\n// If a string with an even length is a palindrome, every character in the string must always occur an even number of times. If the string with an odd length is a palindrome, every character except one of the characters must always occur an even number of times. Thus, in case of a palindrome, the number of characters with odd number of occurrences can't exceed 1(1 in case of odd length and 0 in case of even length).\n\nvar canPermutePalindrome = function(s) {\n    \n    let map = {};\n    let count = 0;\n    //Frequency map\n    for (let i = 0; i < s.length; i++) {\n        if (map[s[i]] !== undefined) {\n          map[s[i]] +=1;\n        }\n        else {\n          map[s[i]] = 1;\n        }\n    }\n    \n    let freq = Object.values(map);\n    freq.forEach(f => {\n        if (f % 2 !== 0) count++; //characters with odd frequencies\n    })\n    \n    \n    if (s.length % 2 === 0) {\n       if (count > 0) return false; \n        \n    }\n    console.log(s.length)\n    \n    if (s.length % 2 !== 0) {\n       if (count > 1) return true;\n        \n    }\n    \n    \n    \n    \n};","compare_result":"100010000011100000001001","title_slug":"palindrome-permutation","has_notes":false}